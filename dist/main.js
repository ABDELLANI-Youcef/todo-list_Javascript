(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(15),o=n.n(r),s=n(645),a=n.n(s)()(o());a.push([t.id,".tabcontent {\n  display: none;\n}\n\n.shown {\n  display: block;\n}\n\n.add_proj_icon {\n  width: 1rem;\n  height: 1rem;\n}\n\n.hide {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;AACf",sourcesContent:[".tabcontent {\n  display: none;\n}\n\n.shown {\n  display: block;\n}\n\n.add_proj_icon {\n  width: 1rem;\n  height: 1rem;\n}\n\n.hide {\n  display: none;\n}\n"],sourceRoot:""}]);const c=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(r)for(var s=0;s<this.length;s++){var a=this[s][0];null!=a&&(o[a]=!0)}for(var c=0;c<t.length;c++){var i=[].concat(t[c]);r&&o[i[0]]||(n&&(i[2]?i[2]="".concat(n," and ").concat(i[2]):i[2]=n),e.push(i))}},e}},15:t=>{function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}t.exports=function(t){var n,r,o=(r=4,function(t){if(Array.isArray(t))return t}(n=t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var n=[],r=!0,o=!1,s=void 0;try{for(var a,c=t[Symbol.iterator]();!(r=(a=c.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,s=t}finally{try{r||null==c.return||c.return()}finally{if(o)throw s}}return n}}(n,r)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=o[1],a=o[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),d="/*# ".concat(i," */"),u=a.sources.map((function(t){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(t," */")}));return[s].concat(u).concat([d]).join("\n")}return[s].join("\n")}},379:(t,e,n)=>{var r,o=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),s=[];function a(t){for(var e=-1,n=0;n<s.length;n++)if(s[n].identifier===t){e=n;break}return e}function c(t,e){for(var n={},r=[],o=0;o<t.length;o++){var c=t[o],i=e.base?c[0]+e.base:c[0],d=n[i]||0,u="".concat(i," ").concat(d);n[i]=d+1;var l=a(u),p={css:c[1],media:c[2],sourceMap:c[3]};-1!==l?(s[l].references++,s[l].updater(p)):s.push({identifier:u,updater:h(p,e),references:1}),r.push(u)}return r}function i(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var s=n.nc;s&&(r.nonce=s)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var a=o(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var d,u=(d=[],function(t,e){return d[t]=e,d.filter(Boolean).join("\n")});function l(t,e,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=u(e,o);else{var s=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(s,a[e]):t.appendChild(s)}}function p(t,e,n){var r=n.css,o=n.media,s=n.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var m=null,_=0;function h(t,e){var n,r,o;if(e.singleton){var s=_++;n=m||(m=i(e)),r=l.bind(null,n,s,!1),o=l.bind(null,n,s,!0)}else n=i(e),r=p.bind(null,n,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=c(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var o=a(n[r]);s[o].references--}for(var i=c(t,e),d=0;d<n.length;d++){var u=a(n[d]);0===s[u].references&&(s[u].updater(),s.splice(u,1))}n=i}}}},429:(t,e,n)=>{t.exports=n.p+"82afad6e38ab3c57406e.png"},908:(t,e,n)=>{t.exports=n.p+"6d4955812aa5e79611ae.png"},247:(t,e,n)=>{t.exports=n.p+"376ef3c8c83b0ea11c6d.png"},563:(t,e,n)=>{t.exports=n.p+"2fce6214b7c60c745aa6.png"},312:(t,e,n)=>{t.exports=n.p+"48a509a89a20feb467d3.png"},883:(t,e,n)=>{t.exports=n.p+"e47be2e47d96864e3de4.png"},747:(t,e,n)=>{n.d(e,{Z:()=>r});const r=class{constructor(t,e){this._title=t,this._tasks=[],this._id=e,this._taskCounter=0}get title(){return this._title}get id(){return this._id}get taskCounter(){return this._taskCounter}set title(t){this._title=t}get tasks(){return this._tasks}addTask(t){this._tasks.push(t),this._taskCounter+=1}removeTask(t){this._tasks.splice(t,1)}}},507:(t,e,n)=>{n.d(e,{Z:()=>r});const r=class{constructor(t,e,n=911,r,o,s){this._title=t,this._description=e,this._dueDate=n,this._priority=r,this._status="todo",this._projId=o,this._id=s}get title(){return this._title}set title(t){this._title=t}get description(){return this._description}get projId(){return this._projId}get id(){return this._id}set description(t){this._description=t}get dueDate(){return this._dueDate}set dueDate(t){this._dueDate=t}get priority(){return this._priority}set priority(t){this._priority=t}get status(){return this._status}set status(t){this._status=t}}}},e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={id:r,exports:{}};return t[r](o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),(()=>{var t=n(379),e=n.n(t),r=n(426);e()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;const o=document.createElement("div");o.setAttribute("id","tasks_container");const s=[];let a=0;const c=(t,e)=>{let n=0,r=t.length-1,o=Math.floor((n+r)/2),s=!1;for(;n<=r&&!s;)s=t[o].id===e,s||(t[o].id>e?r=o-1:n=o+1,o=Math.floor((n+r)/2));return o};var i=n(429),d=n(312),u=n(908);const l=t=>{const e=document.createElement("div");e.setAttribute("class","task_card"),e.setAttribute("id",`task_card_${t.projId}_${t.id}`);const n=document.createElement("div");n.setAttribute("id",`task_show_mode_${t.projId}_${t.id}`),n.classList.add("show_div_task");const r=document.createElement("div");r.setAttribute("class","div_show_mode_left");const o=document.createElement("div");o.classList.add(`priority_box_${t.priority}`,"priority_box");const s=document.createElement("h3");s.textContent=t.title,r.append(o,s);const a=document.createElement("div");a.setAttribute("class","div_show_mode_right");const c=document.createElement("span");c.textContent=t.dueDate;const i=document.createElement("span");i.setAttribute("id",`task_status_${t.status}`),i.classList.add("task_status"),i.textContent=t.status;const l=new Image;l.setAttribute("src",d),l.setAttribute("class","add_proj_icon"),l.dataset.TaskId=t.id,l.dataset.TaskProjId=t.projId,l.addEventListener("click",(t=>editTask(t)));const p=new Image;return p.setAttribute("src",u),p.setAttribute("class","add_proj_icon"),p.dataset.TaskId=t.id,p.dataset.TaskProjId=t.projId,p.addEventListener("click",(t=>b(t))),a.append(c,i,l,p),n.append(r,a),e.append(n),e},p=n(747).Z,m=n(507).Z,_=()=>{document.querySelector("#project_title").value="",document.querySelector("#add_project_form").classList.toggle("hide")},h=t=>{let e=t.target.dataset.projectId;document.querySelector(`#task_title_${e}`).value="",document.querySelector(`#task_description_${e}`).value="",document.querySelector(`#task_priority_${e}`).value="low",document.querySelector(`#add_task_form_${e}`).classList.toggle("hide")},b=t=>{let e=t.target.dataset.TaskId,n=t.target.dataset.TaskProjId,r=document.querySelector(`#task_card_${n}_${e}`);document.querySelector(`#tasks_wrapper_${n}`).removeChild(r);let o=c(s,n),a=s[o];a.removeTask(e),console.log(`after delete ${a.tasks}`)};var f=n(883),A=n(247),v=n(563);const y=t=>{const e=document.createElement("div");e.setAttribute("id",`project_container_${t.id}`),e.classList.add("project_container");const n=document.createElement("span");n.setAttribute("id",`project_show_mode_${t.id}`),n.classList.add("span_project");const r=document.createElement("span");r.setAttribute("id",`project_edit_mode_${t.id}`),r.classList.add("span_project","hide");const a=document.createElement("button");a.setAttribute("id",`show_project_title_${t.id}`),a.dataset.projectId=t.id,a.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=document.querySelector(`#proj_${e}`),r=document.querySelector(".shown");null!==r&&r.classList.toggle("shown"),n.classList.toggle("shown")})(t))),a.setAttribute("class","tablinks"),a.textContent=t.title;const p=new Image;p.setAttribute("src",d),p.setAttribute("class","add_proj_icon"),p.dataset.projectId=t.id,p.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide")})(t)));const _=new Image;_.setAttribute("src",u),_.setAttribute("class","add_proj_icon"),_.dataset.projectId=t.id,_.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=document.querySelector(`#project_container_${e}`);document.querySelector("#tabs").removeChild(n),((t,e)=>{let n=c(t,e);t.splice(n,1)})(s,e),console.log(`after delete ${s}`)})(t))),n.append(a,p,_);const b=document.createElement("input");b.setAttribute("type","text"),b.setAttribute("id",`edit_project_title_${t.id}`),b.setAttribute("value",t.title);const f=new Image;f.setAttribute("src",A),f.setAttribute("class","add_proj_icon"),f.dataset.projectId=t.id,f.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;const n=document.querySelector(`#edit_project_title_${e}`);((t,e,n)=>{t[c(t,e)].title=n})(s,e,n.value),document.querySelector(`#show_project_title_${e}`).textContent=n.value,document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide")})(t)));const y=new Image;return y.setAttribute("src",v),y.setAttribute("class","add_proj_icon"),y.dataset.projectId=t.id,y.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide");const n=document.querySelector(`#edit_project_title_${e}`),r=document.querySelector(`#show_project_title_${e}`);n.value=r.textContent})(t))),r.append(b,f,y),e.append(n,r),o.append((t=>{const e=document.createElement("div");e.setAttribute("class","tabcontent"),e.setAttribute("id",`proj_${t.id}`);const n=document.createElement("div");n.setAttribute("class","project_header");const r=document.createElement("h2");r.setAttribute("class","header_title"),r.textContent=t.title;const o=document.createElement("button");o.dataset.projectId=t.id,o.addEventListener("click",(t=>h(t))),o.setAttribute("class","header_add_task");const a=new Image;a.setAttribute("src",i),a.setAttribute("class","add_proj_icon");const d=document.createElement("span");d.setAttribute("class","add_task_span"),d.textContent="Add a Task",o.append(a,d),n.append(r,o);const u=document.createElement("div");u.setAttribute("class","add_task_form_wrapper"),u.classList.add("hide"),u.setAttribute("id",`add_task_form_${t.id}`);const p=document.createElement("input");p.setAttribute("type","text"),p.setAttribute("id",`task_title_${t.id}`),p.setAttribute("placeholder","Type your task title here!");const _=document.createElement("input");_.setAttribute("type","text"),_.setAttribute("id",`task_description_${t.id}`),_.setAttribute("placeholder","Type a description for your task here!");const b=document.createElement("span");b.setAttribute("class","add_task_select_span");const f=document.createElement("label");f.textContent="Priority:",f.setAttribute("for",`task_priority_${t.id}`);const A=document.createElement("select");A.setAttribute("id",`task_priority_${t.id}`);const v=document.createElement("option");v.setAttribute("value","hight"),v.textContent="Hight";const y=document.createElement("option");y.setAttribute("value","medium"),y.textContent="Medium";const g=document.createElement("option");g.setAttribute("value","low"),g.textContent="Low",A.append(v,y,g),b.append(f,A);const j=document.createElement("span");b.setAttribute("class","add_task_date_span");const k=document.createElement("label");k.textContent="Schedule:",k.setAttribute("for",`task_date_${t.id}`);const E=document.createElement("input");E.setAttribute("type","date"),E.setAttribute("id",`task_date_${t.id}`),j.append(k,E);const w=document.createElement("div");w.setAttribute("class","add_task_form_buttons");const C=document.createElement("button");C.dataset.projectId=t.id,C.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=c(s,e),r=s[n],o=document.querySelector(`#task_title_${e}`).value,a=document.querySelector(`#task_description_${e}`).value,i=document.querySelector(`#task_priority_${e}`).value;const d=new m(o,a,911,i,e,r.taskCounter);((t,e,n)=>{t[c(t,e)].addTask(n)})(s,e,d),document.querySelector(`#tasks_wrapper_${e}`).append(l(d)),document.querySelector(`#add_task_form_${e}`).classList.toggle("hide")})(t))),C.textContent="Create Task";const S=document.createElement("button");S.textContent="Cancel",S.dataset.projectId=t.id,S.addEventListener("click",(t=>h(t))),w.append(C,S),u.append(p,_,b,j,w);const $=document.createElement("div");return $.setAttribute("id",`tasks_wrapper_${t.id}`),$.setAttribute("class","tasks_wrapper"),t.tasks.forEach((t=>($.append(l(t)),$))),e.append(n,u,$),e})(t)),e},g=n(747).Z,j=n(507).Z,k=document.querySelector("#container");let E=new g("Project1",1),w=new g("Project2",2);a+=2;let C=new j("my task","dddddd","12","low",1,1),S=new j("my task2","dddddd","12","low",1,2);E._taskCounter+=2;let $=new j("my task3","dddddd","12","low",2,1),x=new j("my task4","dddddd","12","low",2,2);w._taskCounter+=2,E.addTask(C),E.addTask(S),w.addTask($),w.addTask(x),s.push(E,w),k.append((t=>{const e=document.createElement("div");e.setAttribute("id","project_nav");const n=document.createElement("div");n.setAttribute("class","logo_project"),n.textContent="My Projects";const r=document.createElement("button");r.setAttribute("id","add_project");const o=new Image;o.setAttribute("src",f),o.setAttribute("class","add_proj_icon");const c=document.createElement("span");c.textContent="Projects",r.append(c,o),r.addEventListener("click",(()=>_()));const i=document.createElement("div");i.setAttribute("id","add_project_form"),i.classList.add("hide");const d=document.createElement("input");d.setAttribute("type","text"),d.setAttribute("id","project_title"),d.setAttribute("placeholder","Type your project title here!");const u=document.createElement("div");u.setAttribute("class","add_project_form_buttons");const l=document.createElement("button");l.addEventListener("click",(()=>(()=>{let t=document.querySelector("#project_title").value;a+=1;const e=new p(t,a);s.push(e),console.log(s),document.querySelector("#tabs").append(y(e)),document.querySelector("#add_project_form").classList.toggle("hide")})())),l.textContent="Create Project";const m=document.createElement("button");m.textContent="Cancel",m.addEventListener("click",(()=>_())),u.append(l,m),i.append(d,u);const h=document.createElement("div");return h.setAttribute("id","tabs"),t.forEach((t=>(h.append(y(t)),h))),e.append(n,r,i,h),e})(s),o)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>s});var r=n(15),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Raleway&family=Ultra&display=swap);"]),i.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Abril+Fatface&display=swap);"]),i.push([t.id,"/* global settings */\n\n*,\n*::after,\n*::before {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden;\n}\n\nhtml {\n  min-width: 22rem;\n  min-height: 44rem;\n  display: block;\n  font-family: 'Raleway', sans-serif;\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  min-width: 22rem;\n  display: block;\n}\n\n/* events classes */\n\n.tabcontent {\n  display: none;\n}\n\n.shown {\n  display: block !important;\n}\n\n.add_proj_icon {\n  width: 0.8rem !important;\n  margin-left: 0.5rem;\n  cursor: pointer;\n}\n\n.hide {\n  display: none !important;\n}\n\n/* grid */\n\n#container {\n  display: flex;\n  flex-direction: row;\n}\n\n#project_nav {\n  width: 30%;\n  min-height: 100vh;\n  background-color: #f1faee;\n  padding: 3rem 1rem;\n}\n\n#tasks_container {\n  width: 70%;\n  min-height: 100vh;\n  padding: 3rem 6%;\n}\n\n.logo_project {\n  font-size: 2rem;\n  font-family: 'Abril Fatface', cursive;\n  color: #e63946;\n  margin-bottom: 2rem;\n}\n\n#add_project {\n  width: 100%;\n  padding: 1rem 0.5rem;\n  border: none;\n  background-color: transparent;\n  border-bottom: 0.5px solid #457b9d;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  font-weight: 700;\n  font-size: 1.2rem;\n  color: #1d3557;\n}\n\n#add_project:hover {\n  background-color: #c9e9eb3a;\n  color: #e63946;\n}\n\n#tabs {\n  margin-top: 1rem;\n}\n\n.project_container {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  padding: 0.5rem 0;\n  border-bottom: 0.5px solid #b8e9eca8;\n}\n\n.span_project {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.tablinks {\n  padding: 0.5rem 0.5rem;\n  background-color: transparent;\n  border: none;\n  color: #14213d;\n  font-size: 1rem;\n  cursor: pointer;\n}\n\n.tablinks:hover {\n  background-color:  #f3f6f7e0;\n  color: #0077b6;\n}\n\n.project_header {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 0.5px solid #457b9d;\n  padding-bottom: 1rem;\n}\n\n.header_title {\n  color: #0077b6;\n  font-size: 1.4rem;\n  font-weight: 700;\n  font-family: 'Abril Fatface', cursive;\n}\n\n.header_add_task {\n  border: none;\n  background-color: transparent;\n  padding: 0.5rem;\n  position: relative;\n  z-index: 20;\n  cursor: pointer;\n  width: 7rem;\n  height: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: #14213d;\n}\n\n.header_add_task:hover {\n  background-color: #0076b610;\n  color: #0077b6;\n  border-radius: 2px;\n}\n\n.header_add_task img,\n.header_add_task span {\n  position: absolute;\n}\n\n.header_add_task span {\n  right: 0.5rem;\n}\n\n.tasks_wrapper {\n  margin-top: 1rem;\n}\n\n.task_card {\n  margin-bottom: 0.5rem;\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n}\n\n.div_show_mode_top {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.div_show_mode_left {\n  display: flex;\n  justify-content: start;\n  align-items: center;\n}\n\n.div_show_mode_left h3 {\n  font-weight: 800;\n  color: #14213d;\n}\n\n.priority_box {\n  width: 1rem;\n  height: 1rem;\n  margin-right: 0.6rem;\n  border-radius: 50%;\n}\n\n.priority_box_low {\n  background-color: #a8dadc;\n}\n\n.priority_box_medium {\n  background-color: #ffb703;\n}\n\n.priority_box_hight {\n  background-color: #e63946;\n}\n\n.div_show_mode_right span {\n  font-size: 0.8rem;\n  color: #457b9d;\n}\n\n.div_show_mode_buttom {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.3rem 1rem;\n}\n\n.display_task_description {\n  color: rgb(112, 109, 109);\n  font-size: 0.8rem;\n}\n\n.task_status {\n  font-size: 0.7rem;\n  padding: 0.3rem;\n  border-radius: 5px;\n}\n\n.task_status_To-do {\n  color: #e63946;\n  background-color: #e6394760;\n  border: #e63946 0.5px solid;\n}\n\n.task_status_In-progress {\n  color: #f3722c;\n  background-color: #f3722c5b;\n  border: #f3722c 0.5px solid;\n}\n\n.task_status_Done {\n  color: #00a896;\n  background-color: #00a8975d;\n  border: #00a896 0.5px solid;\n}\n\n/* forms */\n\ninput {\n  padding: 0.1rem 0.3rem;\n  /* border-radius: 5px; */\n  border: 0.5px solid #0076b688;\n}\n\ninput::placeholder {\n  font-size: 0.7rem;\n  color: rgb(112, 109, 109);\n}\n\nlabel {\n  font-size: 0.9rem;\n  font-weight: 700;\n  color: #14213d;\n  margin-right: 0.5rem;\n}\n\n#project_title {\n  width: 100%;\n}\n\n#add_project_form {\n  margin-top: 0.3rem;\n  background-color: white;\n  border-radius: 1px;\n  padding: 1rem;\n}\n\n.add_project_form_buttons {\n  margin-top: 0.5rem;\n  display: flex;\n}\n\n.add_project_form_buttons button {\n  flex-grow: 1;\n}\n\n.submit_btn {\n  color: #1d3557;\n  background-color: #219dbc5e;\n  border-radius: 2px;\n  padding: 0.2rem;\n  cursor: pointer;\n}\n\n.submit_btn:hover {\n  background-color: #1d3557;\n  color: white;\n}\n\n.cancel_btn {\n  color: #e63946;\n  background-color: #e6394759;\n  border-radius: 2px;\n  padding: 0.2rem;\n  cursor: pointer;\n}\n\n.cancel_btn:hover {\n  background-color: #e63946;\n  color: white;\n}\n\n.edit_task_form_wrapper {\n  padding: 0.7rem;\n  border: 0.5px solid #a8dadc;\n}\n\n.edit_task_input_container {\n  margin-bottom: 0.5rem;\n}\n\n.edit_task_select_span {\n  margin-top: 0.5rem;\n  margin-right: 0.5rem;\n}\n\n.edit_task_form_buttons {\n  margin-top: 0.5rem;\n  display: flex;\n  width: 100%;\n}\n\n.edit_task_form_buttons button {\n  flex-grow: 1;\n}\n\n.add_task_form_wrapper {\n  padding: 0.7rem;\n  border: 0.5px solid #a8dadc;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Raleway&family=Ultra&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Abril+Fatface&display=swap');\n\n/* global settings */\n\n*,\n*::after,\n*::before {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden;\n}\n\nhtml {\n  min-width: 22rem;\n  min-height: 44rem;\n  display: block;\n  font-family: 'Raleway', sans-serif;\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  min-width: 22rem;\n  display: block;\n}\n\n/* events classes */\n\n.tabcontent {\n  display: none;\n}\n\n.shown {\n  display: block !important;\n}\n\n.add_proj_icon {\n  width: 0.8rem !important;\n  margin-left: 0.5rem;\n  cursor: pointer;\n}\n\n.hide {\n  display: none !important;\n}\n\n/* grid */\n\n#container {\n  display: flex;\n  flex-direction: row;\n}\n\n#project_nav {\n  width: 30%;\n  min-height: 100vh;\n  background-color: #f1faee;\n  padding: 3rem 1rem;\n}\n\n#tasks_container {\n  width: 70%;\n  min-height: 100vh;\n  padding: 3rem 6%;\n}\n\n.logo_project {\n  font-size: 2rem;\n  font-family: 'Abril Fatface', cursive;\n  color: #e63946;\n  margin-bottom: 2rem;\n}\n\n#add_project {\n  width: 100%;\n  padding: 1rem 0.5rem;\n  border: none;\n  background-color: transparent;\n  border-bottom: 0.5px solid #457b9d;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  font-weight: 700;\n  font-size: 1.2rem;\n  color: #1d3557;\n}\n\n#add_project:hover {\n  background-color: #c9e9eb3a;\n  color: #e63946;\n}\n\n#tabs {\n  margin-top: 1rem;\n}\n\n.project_container {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  padding: 0.5rem 0;\n  border-bottom: 0.5px solid #b8e9eca8;\n}\n\n.span_project {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.tablinks {\n  padding: 0.5rem 0.5rem;\n  background-color: transparent;\n  border: none;\n  color: #14213d;\n  font-size: 1rem;\n  cursor: pointer;\n}\n\n.tablinks:hover {\n  background-color:  #f3f6f7e0;\n  color: #0077b6;\n}\n\n.project_header {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 0.5px solid #457b9d;\n  padding-bottom: 1rem;\n}\n\n.header_title {\n  color: #0077b6;\n  font-size: 1.4rem;\n  font-weight: 700;\n  font-family: 'Abril Fatface', cursive;\n}\n\n.header_add_task {\n  border: none;\n  background-color: transparent;\n  padding: 0.5rem;\n  position: relative;\n  z-index: 20;\n  cursor: pointer;\n  width: 7rem;\n  height: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: #14213d;\n}\n\n.header_add_task:hover {\n  background-color: #0076b610;\n  color: #0077b6;\n  border-radius: 2px;\n}\n\n.header_add_task img,\n.header_add_task span {\n  position: absolute;\n}\n\n.header_add_task span {\n  right: 0.5rem;\n}\n\n.tasks_wrapper {\n  margin-top: 1rem;\n}\n\n.task_card {\n  margin-bottom: 0.5rem;\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n}\n\n.div_show_mode_top {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.div_show_mode_left {\n  display: flex;\n  justify-content: start;\n  align-items: center;\n}\n\n.div_show_mode_left h3 {\n  font-weight: 800;\n  color: #14213d;\n}\n\n.priority_box {\n  width: 1rem;\n  height: 1rem;\n  margin-right: 0.6rem;\n  border-radius: 50%;\n}\n\n.priority_box_low {\n  background-color: #a8dadc;\n}\n\n.priority_box_medium {\n  background-color: #ffb703;\n}\n\n.priority_box_hight {\n  background-color: #e63946;\n}\n\n.div_show_mode_right span {\n  font-size: 0.8rem;\n  color: #457b9d;\n}\n\n.div_show_mode_buttom {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.3rem 1rem;\n}\n\n.display_task_description {\n  color: rgb(112, 109, 109);\n  font-size: 0.8rem;\n}\n\n.task_status {\n  font-size: 0.7rem;\n  padding: 0.3rem;\n  border-radius: 5px;\n}\n\n.task_status_To-do {\n  color: #e63946;\n  background-color: #e6394760;\n  border: #e63946 0.5px solid;\n}\n\n.task_status_In-progress {\n  color: #f3722c;\n  background-color: #f3722c5b;\n  border: #f3722c 0.5px solid;\n}\n\n.task_status_Done {\n  color: #00a896;\n  background-color: #00a8975d;\n  border: #00a896 0.5px solid;\n}\n\n/* forms */\n\ninput {\n  padding: 0.1rem 0.3rem;\n  /* border-radius: 5px; */\n  border: 0.5px solid #0076b688;\n}\n\ninput::placeholder {\n  font-size: 0.7rem;\n  color: rgb(112, 109, 109);\n}\n\nlabel {\n  font-size: 0.9rem;\n  font-weight: 700;\n  color: #14213d;\n  margin-right: 0.5rem;\n}\n\n#project_title {\n  width: 100%;\n}\n\n#add_project_form {\n  margin-top: 0.3rem;\n  background-color: white;\n  border-radius: 1px;\n  padding: 1rem;\n}\n\n.add_project_form_buttons {\n  margin-top: 0.5rem;\n  display: flex;\n}\n\n.add_project_form_buttons button {\n  flex-grow: 1;\n}\n\n.submit_btn {\n  color: #1d3557;\n  background-color: #219dbc5e;\n  border-radius: 2px;\n  padding: 0.2rem;\n  cursor: pointer;\n}\n\n.submit_btn:hover {\n  background-color: #1d3557;\n  color: white;\n}\n\n.cancel_btn {\n  color: #e63946;\n  background-color: #e6394759;\n  border-radius: 2px;\n  padding: 0.2rem;\n  cursor: pointer;\n}\n\n.cancel_btn:hover {\n  background-color: #e63946;\n  color: white;\n}\n\n.edit_task_form_wrapper {\n  padding: 0.7rem;\n  border: 0.5px solid #a8dadc;\n}\n\n.edit_task_input_container {\n  margin-bottom: 0.5rem;\n}\n\n.edit_task_select_span {\n  margin-top: 0.5rem;\n  margin-right: 0.5rem;\n}\n\n.edit_task_form_buttons {\n  margin-top: 0.5rem;\n  display: flex;\n  width: 100%;\n}\n\n.edit_task_form_buttons button {\n  flex-grow: 1;\n}\n\n.add_task_form_wrapper {\n  padding: 0.7rem;\n  border: 0.5px solid #a8dadc;\n}"],sourceRoot:""}]);const s=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var s=0;s<t.length;s++){var d=[].concat(t[s]);r&&o[d[0]]||(n&&(d[2]?d[2]="".concat(n," and ").concat(d[2]):d[2]=n),e.push(d))}},e}},15:t=>{function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}t.exports=function(t){var n,r,o=(r=4,function(t){if(Array.isArray(t))return t}(n=t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=t[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!e||n.length!==e);r=!0);}catch(t){o=!0,a=t}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(n,r)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],i=o[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(d," */"),l=i.sources.map((function(t){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(t," */")}));return[a].concat(l).concat([c]).join("\n")}return[a].join("\n")}},379:(t,e,n)=>{var r,o=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),a=[];function i(t){for(var e=-1,n=0;n<a.length;n++)if(a[n].identifier===t){e=n;break}return e}function s(t,e){for(var n={},r=[],o=0;o<t.length;o++){var s=t[o],d=e.base?s[0]+e.base:s[0],c=n[d]||0,l="".concat(d," ").concat(c);n[d]=c+1;var u=i(l),A={css:s[1],media:s[2],sourceMap:s[3]};-1!==u?(a[u].references++,a[u].updater(A)):a.push({identifier:l,updater:_(A,e),references:1}),r.push(l)}return r}function d(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var i=o(t.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}return e}var c,l=(c=[],function(t,e){return c[t]=e,c.filter(Boolean).join("\n")});function u(t,e,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=l(e,o);else{var a=document.createTextNode(o),i=t.childNodes;i[e]&&t.removeChild(i[e]),i.length?t.insertBefore(a,i[e]):t.appendChild(a)}}function A(t,e,n){var r=n.css,o=n.media,a=n.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var m=null,p=0;function _(t,e){var n,r,o;if(e.singleton){var a=p++;n=m||(m=d(e)),r=u.bind(null,n,a,!1),o=u.bind(null,n,a,!0)}else n=d(e),r=A.bind(null,n,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=s(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var o=i(n[r]);a[o].references--}for(var d=s(t,e),c=0;c<n.length;c++){var l=i(n[c]);0===a[l].references&&(a[l].updater(),a.splice(l,1))}n=d}}}},429:(t,e,n)=>{t.exports=n.p+"82afad6e38ab3c57406e.png"},908:(t,e,n)=>{t.exports=n.p+"6d4955812aa5e79611ae.png"},247:(t,e,n)=>{t.exports=n.p+"376ef3c8c83b0ea11c6d.png"},563:(t,e,n)=>{t.exports=n.p+"2fce6214b7c60c745aa6.png"},312:(t,e,n)=>{t.exports=n.p+"48a509a89a20feb467d3.png"},747:(t,e,n)=>{n.d(e,{Z:()=>r});const r=class{constructor(t,e){this._title=t,this._tasks=[],this._id=e,this._taskCounter=0}get title(){return this._title}get id(){return this._id}get taskCounter(){return this._taskCounter}set title(t){this._title=t}get tasks(){return this._tasks}addTask(t){this._tasks.push(t),this._taskCounter+=1}removeTask(t){this._tasks.splice(t,1)}}},507:(t,e,n)=>{n.d(e,{Z:()=>r});const r=class{constructor(t,e,n="2020-12-24",r,o,a){this._title=t,this._description=e,this._dueDate=n,this._priority=r,this._status="To-do",this._projId=o,this._id=a}get title(){return this._title}set title(t){this._title=t}get description(){return this._description}get projId(){return this._projId}get id(){return this._id}set description(t){this._description=t}get dueDate(){return this._dueDate}set dueDate(t){this._dueDate=t}get priority(){return this._priority}set priority(t){this._priority=t}get status(){return this._status}set id(t){this._id=t}set status(t){this._status=t}formatedDueDate(){return new Date(this._dueDate)}}}},e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={id:r,exports:{}};return t[r](o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),(()=>{var t=n(379),e=n.n(t),r=n(426);e()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;const o=n(747).Z,a=n(507).Z,i=document.createElement("div");i.setAttribute("id","tasks_container");const s=new o("My Project",1),d=new a("My first task","This is my first task","2020-12-24","low",1,0),c=new a("My second task","This is my second task","2021-12-26","low",1,1);s.addTask(d),s.addTask(c);const l=localStorage.getItem("projectsList")?JSON.parse(localStorage.getItem("projectsList")):[s],u=localStorage.getItem("countProjects")?JSON.parse(localStorage.getItem("countProjects")):1,A=(t,e)=>{let n=0,r=t.length-1,o=Math.floor((n+r)/2),a=!1;for(;n<=r&&!a;)a=t[o].id===e,a||(t[o].id>e?r=o-1:n=o+1,o=Math.floor((n+r)/2));return o},m=t=>{const e=t._title,n=t._description,r=t._dueDate,o=t._priority,i=t._status,s=t._projId,d=t._id,c=new a(e,n,r,o,s,d);return c.status=i,c},p=l.map((t=>(t=>{const e=t._title,n=t._id,r=t._tasks,a=new o(e,n);for(let t=0;t<r.length;t+=1){let e=m(r[t]);e.id=t,a.addTask(e)}return a})(t)));console.log("variable");let _=parseInt(u);var h=n(429),b=n(312),f=n(908);function g(t,e){if(e.length<t)throw new TypeError(t+" argument"+(t>1?"s":"")+" required, but only "+e.length+" present")}function E(t){g(1,arguments);var e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new Date(t.getTime()):"number"==typeof t||"[object Number]"===e?new Date(t):("string"!=typeof t&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function y(t,e){g(2,arguments);var n=E(t),r=E(e),o=n.getTime()-r.getTime();return o<0?-1:o>0?1:o}function B(t,e){g(2,arguments);var n=E(t),r=E(e),o=n.getFullYear()-r.getFullYear(),a=n.getMonth()-r.getMonth();return 12*o+a}function C(t,e){g(2,arguments);var n=E(t),r=E(e),o=y(n,r),a=Math.abs(B(n,r));n.setMonth(n.getMonth()-o*a);var i=y(n,r)===-o,s=o*(a-i);return 0===s?0:s}function k(t,e){g(2,arguments);var n=E(t),r=E(e);return n.getTime()-r.getTime()}function v(t,e){g(2,arguments);var n=k(t,e)/1e3;return n>0?Math.floor(n):Math.ceil(n)}var w={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function j(t){return function(e){var n=e||{},r=n.width?String(n.width):t.defaultWidth;return t.formats[r]||t.formats[t.defaultWidth]}}var x,S={date:j({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:j({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:j({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},$={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function I(t){return function(e,n){var r,o=n||{};if("formatting"===(o.context?String(o.context):"standalone")&&t.formattingValues){var a=t.defaultFormattingWidth||t.defaultWidth,i=o.width?String(o.width):a;r=t.formattingValues[i]||t.formattingValues[a]}else{var s=t.defaultWidth,d=o.width?String(o.width):t.defaultWidth;r=t.values[d]||t.values[s]}return r[t.argumentCallback?t.argumentCallback(e):e]}}function q(t){return function(e,n){var r=String(e),o=n||{},a=o.width,i=a&&t.matchPatterns[a]||t.matchPatterns[t.defaultMatchWidth],s=r.match(i);if(!s)return null;var d,c=s[0],l=a&&t.parsePatterns[a]||t.parsePatterns[t.defaultParseWidth];return d="[object Array]"===Object.prototype.toString.call(l)?function(t,e){for(var n=0;n<t.length;n++)if(t[n].test(c))return n}(l):function(t,e){for(var n in t)if(t.hasOwnProperty(n)&&t[n].test(c))return n}(l),d=t.valueCallback?t.valueCallback(d):d,{value:d=o.valueCallback?o.valueCallback(d):d,rest:r.slice(c.length)}}}const M={code:"en-US",formatDistance:function(t,e,n){var r;return n=n||{},r="string"==typeof w[t]?w[t]:1===e?w[t].one:w[t].other.replace("{{count}}",e),n.addSuffix?n.comparison>0?"in "+r:r+" ago":r},formatLong:S,formatRelative:function(t,e,n,r){return $[t]},localize:{ordinalNumber:function(t,e){var n=Number(t),r=n%100;if(r>20||r<10)switch(r%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:I({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:I({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(t){return Number(t)-1}}),month:I({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:I({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:I({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(x={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(t){return parseInt(t,10)}},function(t,e){var n=String(t),r=e||{},o=n.match(x.matchPattern);if(!o)return null;var a=o[0],i=n.match(x.parsePattern);if(!i)return null;var s=x.valueCallback?x.valueCallback(i[0]):i[0];return{value:s=r.valueCallback?r.valueCallback(s):s,rest:n.slice(a.length)}}),era:q({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:q({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(t){return t+1}}),month:q({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:q({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:q({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};function L(t){return function(t,e){if(null==t)throw new TypeError("assign requires that input parameter not be null or undefined");for(var n in e=e||{})e.hasOwnProperty(n)&&(t[n]=e[n]);return t}({},t)}var T=6e4;function D(t){return t.getTime()%T}function W(t){var e=new Date(t.getTime()),n=Math.ceil(e.getTimezoneOffset());e.setSeconds(0,0);var r=n>0?(T+D(e))%T:D(e);return n*T+r}var P=1440,z=43200;function N(t,e,n){g(2,arguments);var r=n||{},o=r.locale||M;if(!o.formatDistance)throw new RangeError("locale must contain formatDistance property");var a=y(t,e);if(isNaN(a))throw new RangeError("Invalid time value");var i,s,d=L(r);d.addSuffix=Boolean(r.addSuffix),d.comparison=a,a>0?(i=E(e),s=E(t)):(i=E(t),s=E(e));var c,l=v(s,i),u=(W(s)-W(i))/1e3,A=Math.round((l-u)/60);if(A<2)return r.includeSeconds?l<5?o.formatDistance("lessThanXSeconds",5,d):l<10?o.formatDistance("lessThanXSeconds",10,d):l<20?o.formatDistance("lessThanXSeconds",20,d):l<40?o.formatDistance("halfAMinute",null,d):l<60?o.formatDistance("lessThanXMinutes",1,d):o.formatDistance("xMinutes",1,d):0===A?o.formatDistance("lessThanXMinutes",1,d):o.formatDistance("xMinutes",A,d);if(A<45)return o.formatDistance("xMinutes",A,d);if(A<90)return o.formatDistance("aboutXHours",1,d);if(A<P){var m=Math.round(A/60);return o.formatDistance("aboutXHours",m,d)}if(A<2520)return o.formatDistance("xDays",1,d);if(A<z){var p=Math.round(A/P);return o.formatDistance("xDays",p,d)}if(A<86400)return c=Math.round(A/z),o.formatDistance("aboutXMonths",c,d);if((c=C(s,i))<12){var _=Math.round(A/z);return o.formatDistance("xMonths",_,d)}var h=c%12,b=Math.floor(c/12);return h<3?o.formatDistance("aboutXYears",b,d):h<9?o.formatDistance("overXYears",b,d):o.formatDistance("almostXYears",b+1,d)}function O(t,e){return g(1,arguments),N(t,Date.now(),e)}const Y=t=>{const e=document.createElement("div");e.setAttribute("class","task_card"),e.setAttribute("id",`task_card_${t.projId}_${t.id}`);const n=document.createElement("div");n.setAttribute("id",`task_show_mode_${t.projId}_${t.id}`),n.classList.add("show_div_task");const r=document.createElement("div");r.setAttribute("class","div_show_mode_left");const o=document.createElement("div");o.setAttribute("id",`display_task_priority_${t.projId}_${t.id}`),o.classList.add(`priority_box_${t.priority}`,"priority_box");const a=document.createElement("h3");a.setAttribute("id",`display_task_title_${t.projId}_${t.id}`),a.textContent=t.title,r.append(o,a);const i=document.createElement("div");i.setAttribute("class","div_show_mode_right");const s=document.createElement("span");s.textContent=O(t.formatedDueDate(),{addSuffix:!0}),s.setAttribute("id",`display_task_date_${t.projId}_${t.id}`);const d=new Image;d.setAttribute("src",b),d.setAttribute("class","add_proj_icon"),d.dataset.TaskId=t.id,d.dataset.TaskProjId=t.projId,d.addEventListener("click",(t=>R(t)));const c=new Image;c.setAttribute("src",f),c.setAttribute("class","add_proj_icon"),c.dataset.TaskId=t.id,c.dataset.TaskProjId=t.projId,c.addEventListener("click",(t=>Z(t))),i.append(s,d,c);const l=document.createElement("div");l.setAttribute("class","div_show_mode_top"),l.append(r,i);const u=document.createElement("div");u.setAttribute("class","div_show_mode_buttom");const A=document.createElement("span");A.classList.add("display_task_description"),A.setAttribute("id",`display_task_description_${t.projId}_${t.id}`),A.textContent=t.description;const m=document.createElement("span");m.setAttribute("id",`display_task_status_${t.projId}_${t.id}`),m.classList.add("task_status",`task_status_${t.status}`),m.textContent=t.status,u.append(A,m);const p=document.createElement("div");p.setAttribute("id",`task_edit_mode_${t.projId}_${t.id}`),p.classList.add("edit_div_task","hide");const _=document.createElement("div");_.classList.add("edit_task_form_wrapper");const h=document.createElement("div");h.classList.add("edit_task_input_container");const g=document.createElement("label");g.setAttribute("for",`edit_task_title_${t.projId}_${t.id}`),g.textContent="Task title:";const E=document.createElement("input");E.setAttribute("type","text"),E.setAttribute("id",`edit_task_title_${t.projId}_${t.id}`),E.setAttribute("value",t.title),h.append(g,E);const y=document.createElement("div");y.classList.add("edit_task_input_container");const B=document.createElement("label");B.setAttribute("for",`edit_task_description_${t.projId}_${t.id}`),B.textContent="Task Description:";const C=document.createElement("input");C.setAttribute("type","text"),C.setAttribute("id",`edit_task_description_${t.projId}_${t.id}`),C.setAttribute("value",t.description),y.append(B,C);const k=document.createElement("span");k.setAttribute("class","edit_task_select_span");const v=document.createElement("label");v.textContent="Priority:",v.setAttribute("for",`edit_task_priority_${t.projId}_${t.id}`);const w=document.createElement("select");w.setAttribute("id",`edit_task_priority_${t.projId}_${t.id}`);const j=document.createElement("option");j.setAttribute("value","hight"),j.textContent="Hight";const x=document.createElement("option");x.setAttribute("value","medium"),x.textContent="Medium";const S=document.createElement("option");S.setAttribute("value","low"),S.textContent="Low",w.append(j,x,S),w.value=t.priority,k.append(v,w);const $=document.createElement("span");$.setAttribute("class","edit_task_select_span");const I=document.createElement("label");I.textContent="Status:",I.setAttribute("for",`edit_task_status_${t.projId}_${t.id}`);const q=document.createElement("select");q.setAttribute("id",`edit_task_status_${t.projId}_${t.id}`);const M=document.createElement("option");M.setAttribute("value","To-do"),M.textContent="To-do";const L=document.createElement("option");L.setAttribute("value","In-progress"),L.textContent="In progress";const T=document.createElement("option");T.setAttribute("value","Done"),T.textContent="Done",q.append(M,L,T),q.value=t.status,$.append(I,q);const D=document.createElement("span");D.setAttribute("class","edit_task_select_span");const W=document.createElement("label");W.textContent="Schedule:",W.setAttribute("for",`edit_task_date_${t.projId}_${t.id}`);const P=document.createElement("input");P.setAttribute("type","date"),P.setAttribute("id",`edit_task_date_${t.projId}_${t.id}`),D.append(W,P);const z=document.createElement("div");z.setAttribute("class","edit_task_form_buttons");const N=document.createElement("button");N.classList.add("submit_btn"),N.dataset.TaskId=t.id,N.dataset.TaskProjId=t.projId,N.addEventListener("click",(t=>H(t))),N.textContent="Submit";const Y=document.createElement("button");return Y.classList.add("cancel_btn"),Y.textContent="Cancel",Y.dataset.TaskId=t.id,Y.dataset.TaskProjId=t.projId,Y.addEventListener("click",(t=>R(t))),z.append(N,Y),_.append(h,y,k,$,D,z),p.append(_),n.append(l,u),e.append(n,p),e},X=n(747).Z,F=n(507).Z,J=()=>{document.querySelector("#project_title").value="",document.querySelector("#add_project_form").classList.toggle("hide")},U=t=>{let e=t.target.dataset.projectId;document.querySelector(`#task_title_${e}`).value="",document.querySelector(`#task_description_${e}`).value="",document.querySelector(`#task_priority_${e}`).value="low",document.querySelector(`#add_task_form_${e}`).classList.toggle("hide")},Z=t=>{let e=t.target.dataset.TaskId,n=t.target.dataset.TaskProjId,r=document.querySelector(`#task_card_${n}_${e}`);document.querySelector(`#tasks_wrapper_${n}`).removeChild(r);let o=A(p,n),a=p[o];a.removeTask(e),console.log(`after delete ${a.tasks}`),localStorage.setItem("projectsList",JSON.stringify(p))},R=t=>{let e=t.target.dataset.TaskId,n=t.target.dataset.TaskProjId,r=A(p,n),o=p[r],a=A(o.tasks,e),i=o.tasks[a];document.querySelector(`#edit_task_title_${n}_${e}`).value=i.title,document.querySelector(`#edit_task_description_${n}_${e}`).value=i.description,document.querySelector(`#edit_task_priority_${n}_${e}`).value=i.priority,document.querySelector(`#edit_task_status_${n}_${e}`).value=i.status,document.querySelector(`#task_show_mode_${n}_${e}`).classList.toggle("hide"),document.querySelector(`#task_edit_mode_${n}_${e}`).classList.toggle("hide")},H=t=>{let e=t.target.dataset.TaskId,n=t.target.dataset.TaskProjId,r=A(p,n),o=p[r],a=A(o.tasks,e),i=o.tasks[a];const s=i.priority,d=i.status;let c=document.querySelector(`#edit_task_title_${n}_${e}`);i.title=c.value;let l=document.querySelector(`#edit_task_description_${n}_${e}`);i.description=l.value;let u=document.querySelector(`#edit_task_priority_${n}_${e}`);i.priority=u.value;let m=document.querySelector(`#edit_task_date_${n}_${e}`);i.dueDate=m.value;let _=document.querySelector(`#edit_task_status_${n}_${e}`);i.status=_.value,document.querySelector(`#display_task_title_${n}_${e}`).textContent=i.title,document.querySelector(`#display_task_description_${n}_${e}`).textContent=i.description;const h=document.querySelector(`#display_task_priority_${n}_${e}`);h.classList.remove(`priority_box_${s}`),h.classList.add(`priority_box_${i.priority}`),document.querySelector(`#display_task_date_${n}_${e}`).textContent=O(i.formatedDueDate(),{addSuffix:!0});const b=document.querySelector(`#display_task_status_${n}_${e}`);b.textContent=i.status,b.classList.remove(`task_status_${d}`),b.classList.add(`task_status_${i.status}`),document.querySelector(`#task_show_mode_${n}_${e}`).classList.toggle("hide"),document.querySelector(`#task_edit_mode_${n}_${e}`).classList.toggle("hide"),localStorage.setItem("projectsList",JSON.stringify(p))};var V=n(247),Q=n(563);const G=t=>{const e=document.createElement("div");e.setAttribute("id",`project_container_${t.id}`),e.classList.add("project_container");const n=document.createElement("span");n.setAttribute("id",`project_show_mode_${t.id}`),n.classList.add("span_project");const r=document.createElement("span");r.setAttribute("id",`project_edit_mode_${t.id}`),r.classList.add("span_project","hide");const o=document.createElement("button");o.setAttribute("id",`show_project_title_${t.id}`),o.dataset.projectId=t.id,o.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=document.querySelector(`#proj_${e}`),r=document.querySelector(".shown");null!==r&&r.classList.toggle("shown"),n.classList.toggle("shown")})(t))),o.setAttribute("class","tablinks"),o.textContent=t.title;const a=new Image;a.setAttribute("src",b),a.setAttribute("class","add_proj_icon"),a.dataset.projectId=t.id,a.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide")})(t)));const s=new Image;s.setAttribute("src",f),s.setAttribute("class","add_proj_icon"),s.dataset.projectId=t.id,s.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=document.querySelector(`#project_container_${e}`);document.querySelector("#tabs").removeChild(n),((t,e)=>{let n=A(t,e);t.splice(n,1)})(p,e),console.log(`after delete ${p}`),localStorage.setItem("projectsList",JSON.stringify(p));let r=document.querySelector("#tasks_container"),o=document.querySelector(`#proj_${e}`);r.removeChild(o),null===document.querySelector(".shown")&&p.length>0&&document.querySelector(`#proj_${p[0].id}`).classList.add("shown")})(t)));const d=document.createElement("span");d.classList.add("project_right_buttons"),d.append(a,s),n.append(o,d);const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("id",`edit_project_title_${t.id}`),c.setAttribute("value",t.title);const l=new Image;l.setAttribute("src",V),l.setAttribute("class","add_proj_icon"),l.dataset.projectId=t.id,l.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;const n=document.querySelector(`#edit_project_title_${e}`);((t,e,n)=>{t[A(t,e)].title=n,localStorage.setItem("projectsList",JSON.stringify(t))})(p,e,n.value),document.querySelector(`#show_project_title_${e}`).textContent=n.value,document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide"),document.querySelector(`#header_title_${e}`).textContent=n.value})(t)));const u=new Image;u.setAttribute("src",Q),u.setAttribute("class","add_proj_icon"),u.dataset.projectId=t.id,u.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide");const n=document.querySelector(`#edit_project_title_${e}`),r=document.querySelector(`#show_project_title_${e}`);n.value=r.textContent})(t)));const m=document.createElement("span");return m.classList.add("project_right_buttons"),m.append(l,u),r.append(c,m),e.append(n,r),i.append((t=>{const e=document.createElement("div");e.setAttribute("class","tabcontent"),e.setAttribute("id",`proj_${t.id}`);const n=document.createElement("div");n.setAttribute("class","project_header");const r=document.createElement("h2");r.setAttribute("class","header_title"),r.setAttribute("id",`header_title_${t.id}`),r.textContent=t.title;const o=document.createElement("button");o.dataset.projectId=t.id,o.addEventListener("click",(t=>U(t))),o.setAttribute("class","header_add_task");const a=new Image;a.setAttribute("src",h),a.setAttribute("class","add_proj_icon");const i=document.createElement("span");i.setAttribute("class","add_task_span"),i.textContent="Add a Task",o.append(a,i),n.append(r,o);const s=document.createElement("div");s.setAttribute("class","add_task_form_wrapper"),s.classList.add("hide"),s.setAttribute("id",`add_task_form_${t.id}`);const d=document.createElement("input");d.setAttribute("type","text"),d.setAttribute("id",`task_title_${t.id}`),d.setAttribute("placeholder","Type your task title here!");const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("id",`task_description_${t.id}`),c.setAttribute("placeholder","Type a description for your task here!");const l=document.createElement("span");l.setAttribute("class","add_task_select_span");const u=document.createElement("label");u.textContent="Priority:",u.setAttribute("for",`task_priority_${t.id}`);const m=document.createElement("select");m.setAttribute("id",`task_priority_${t.id}`);const _=document.createElement("option");_.setAttribute("value","hight"),_.textContent="Hight";const b=document.createElement("option");b.setAttribute("value","medium"),b.textContent="Medium";const f=document.createElement("option");f.setAttribute("value","low"),f.textContent="Low",m.append(_,b,f),l.append(u,m);const g=document.createElement("span");l.setAttribute("class","add_task_date_span");const E=document.createElement("label");E.textContent="Schedule:",E.setAttribute("for",`task_date_${t.id}`);const y=document.createElement("input");y.setAttribute("type","date"),y.setAttribute("id",`task_date_${t.id}`),g.append(E,y);const B=document.createElement("div");B.setAttribute("class","add_task_form_buttons");const C=document.createElement("button");C.dataset.projectId=t.id,C.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=A(p,e),r=p[n],o=document.querySelector(`#task_title_${e}`).value,a=document.querySelector(`#task_description_${e}`).value,i=document.querySelector(`#task_priority_${e}`).value,s=document.querySelector(`#task_date_${e}`).value;const d=new F(o,a,s,i,e,r.taskCounter);((t,e,n)=>{t[A(t,e)].addTask(n)})(p,e,d),document.querySelector(`#tasks_wrapper_${e}`).append(Y(d)),document.querySelector(`#add_task_form_${e}`).classList.toggle("hide"),localStorage.setItem("projectsList",JSON.stringify(p))})(t))),C.textContent="Create Task";const k=document.createElement("button");k.textContent="Cancel",k.dataset.projectId=t.id,k.addEventListener("click",(t=>U(t))),B.append(C,k),s.append(d,c,l,g,B);const v=document.createElement("div");return v.setAttribute("id",`tasks_wrapper_${t.id}`),v.setAttribute("class","tasks_wrapper"),t.tasks.forEach((t=>(v.append(Y(t)),v))),e.append(n,s,v),e})(t)),e},K=(n(747).Z,n(507).Z,document.querySelector("#container"));if(console.log("index"),K.append((t=>{const e=document.createElement("div");e.setAttribute("id","project_nav");const n=document.createElement("div");n.setAttribute("class","logo_project"),n.textContent="My Projects";const r=document.createElement("button");r.setAttribute("id","add_project");const o=new Image;o.setAttribute("src",h),o.setAttribute("class","add_proj_icon");const a=document.createElement("span");a.textContent="Projects",r.append(a,o),r.addEventListener("click",(()=>J()));const i=document.createElement("div");i.setAttribute("id","add_project_form"),i.classList.add("hide");const s=document.createElement("input");s.setAttribute("type","text"),s.setAttribute("id","project_title"),s.setAttribute("placeholder","Type your project title here!");const d=document.createElement("div");d.setAttribute("class","add_project_form_buttons");const c=document.createElement("button");c.classList.add("submit_btn"),c.addEventListener("click",(()=>(()=>{let t=document.querySelector("#project_title").value;_+=1;const e=new X(t,_);p.push(e),localStorage.setItem("countProjects",_),localStorage.setItem("projectsList",JSON.stringify(p)),document.querySelector("#tabs").append(G(e));let n=document.querySelector(`#proj_${e.id}`),r=document.querySelector(".shown");null!==r&&r.classList.toggle("shown"),n.classList.add("shown"),document.querySelector("#add_project_form").classList.toggle("hide")})())),c.textContent="Create Project";const l=document.createElement("button");l.classList.add("cancel_btn"),l.textContent="Cancel",l.addEventListener("click",(()=>J())),d.append(c,l),i.append(s,d);const u=document.createElement("div");return u.setAttribute("id","tabs"),t.forEach((t=>(u.append(G(t)),u))),e.append(n,r,i,u),e})(p),i),p.length>0){console.log(`#proj_${p[0].id}`);let t=document.querySelector(`#proj_${p[0].id}`);console.log(document.querySelector(`#proj_${p[0].id}`)),t.classList.add("shown")}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
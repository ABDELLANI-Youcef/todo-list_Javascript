(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>s});var r=n(15),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([t.id,".tabcontent {\n  display: none;\n}\n\n.shown {\n  display: block;\n}\n\n.add_proj_icon {\n  width: 1rem;\n  height: 1rem;\n}\n\n.hide {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;AACf",sourcesContent:[".tabcontent {\n  display: none;\n}\n\n.shown {\n  display: block;\n}\n\n.add_proj_icon {\n  width: 1rem;\n  height: 1rem;\n}\n\n.hide {\n  display: none;\n}\n"],sourceRoot:""}]);const s=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var a={};if(r)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var s=0;s<t.length;s++){var d=[].concat(t[s]);r&&a[d[0]]||(n&&(d[2]?d[2]="".concat(n," and ").concat(d[2]):d[2]=n),e.push(d))}},e}},15:t=>{function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}t.exports=function(t){var n,r,a=(r=4,function(t){if(Array.isArray(t))return t}(n=t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,s=t[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!e||n.length!==e);r=!0);}catch(t){a=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(a)throw o}}return n}}(n,r)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],i=a[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(d," */"),u=i.sources.map((function(t){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(t," */")}));return[o].concat(u).concat([c]).join("\n")}return[o].join("\n")}},379:(t,e,n)=>{var r,a=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),o=[];function i(t){for(var e=-1,n=0;n<o.length;n++)if(o[n].identifier===t){e=n;break}return e}function s(t,e){for(var n={},r=[],a=0;a<t.length;a++){var s=t[a],d=e.base?s[0]+e.base:s[0],c=n[d]||0,u="".concat(d," ").concat(c);n[d]=c+1;var l=i(u),m={css:s[1],media:s[2],sourceMap:s[3]};-1!==l?(o[l].references++,o[l].updater(m)):o.push({identifier:u,updater:h(m,e),references:1}),r.push(u)}return r}function d(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var i=a(t.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}return e}var c,u=(c=[],function(t,e){return c[t]=e,c.filter(Boolean).join("\n")});function l(t,e,n,r){var a=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=u(e,a);else{var o=document.createTextNode(a),i=t.childNodes;i[e]&&t.removeChild(i[e]),i.length?t.insertBefore(o,i[e]):t.appendChild(o)}}function m(t,e,n){var r=n.css,a=n.media,o=n.sourceMap;if(a?t.setAttribute("media",a):t.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var p=null,_=0;function h(t,e){var n,r,a;if(e.singleton){var o=_++;n=p||(p=d(e)),r=l.bind(null,n,o,!1),a=l.bind(null,n,o,!0)}else n=d(e),r=m.bind(null,n,e),a=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else a()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=s(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var a=i(n[r]);o[a].references--}for(var d=s(t,e),c=0;c<n.length;c++){var u=i(n[c]);0===o[u].references&&(o[u].updater(),o.splice(u,1))}n=d}}}},429:(t,e,n)=>{t.exports=n.p+"82afad6e38ab3c57406e.png"},908:(t,e,n)=>{t.exports=n.p+"6d4955812aa5e79611ae.png"},247:(t,e,n)=>{t.exports=n.p+"376ef3c8c83b0ea11c6d.png"},563:(t,e,n)=>{t.exports=n.p+"2fce6214b7c60c745aa6.png"},312:(t,e,n)=>{t.exports=n.p+"48a509a89a20feb467d3.png"},883:(t,e,n)=>{t.exports=n.p+"e47be2e47d96864e3de4.png"},747:(t,e,n)=>{n.d(e,{Z:()=>r});const r=class{constructor(t,e){this._title=t,this._tasks=[],this._id=e,this._taskCounter=0}get title(){return this._title}get id(){return this._id}get taskCounter(){return this._taskCounter}set title(t){this._title=t}get tasks(){return this._tasks}addTask(t){this._tasks.push(t),this._taskCounter+=1}removeTask(t){this._tasks.splice(t,1)}}},507:(t,e,n)=>{n.d(e,{Z:()=>r});const r=class{constructor(t,e,n=911,r,a,o){this._title=t,this._description=e,this._dueDate=n,this._priority=r,this._status="To-do",this._projId=a,this._id=o}get title(){return this._title}set title(t){this._title=t}get description(){return this._description}get projId(){return this._projId}get id(){return this._id}set description(t){this._description=t}get dueDate(){return this._dueDate}set dueDate(t){this._dueDate=t}get priority(){return this._priority}set priority(t){this._priority=t}get status(){return this._status}set id(t){this._id=t}set status(t){this._status=t}formatedDueDate(){return new Date(this._dueDate)}}}},e={};function n(r){if(e[r])return e[r].exports;var a=e[r]={id:r,exports:{}};return t[r](a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),(()=>{var t=n(379),e=n.n(t),r=n(426);e()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;const a=n(747).Z,o=n(507).Z,i=document.createElement("div");i.setAttribute("id","tasks_container");const s=localStorage.getItem("projectsList")?JSON.parse(localStorage.getItem("projectsList")):[],d=localStorage.getItem("countProjects")?JSON.parse(localStorage.getItem("countProjects")):0,c=(t,e)=>{let n=0,r=t.length-1,a=Math.floor((n+r)/2),o=!1;for(;n<=r&&!o;)o=t[a].id===e,o||(t[a].id>e?r=a-1:n=a+1,a=Math.floor((n+r)/2));return a},u=t=>{const e=t._title,n=t._description,r=t._dueDate,a=t._priority,i=t._status,s=t._projId,d=t._id,c=new o(e,n,r,a,s,d);return c.status=i,c},l=s.map((t=>(t=>{const e=t._title,n=t._id,r=t._tasks,o=new a(e,n);for(let t=0;t<r.length;t+=1){let e=u(r[t]);e.id=t,o.addTask(e)}return o})(t)));console.log("variable");let m=parseInt(d);var p=n(429),_=n(312),h=n(908);function f(t,e){if(e.length<t)throw new TypeError(t+" argument"+(t>1?"s":"")+" required, but only "+e.length+" present")}function b(t){f(1,arguments);var e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new Date(t.getTime()):"number"==typeof t||"[object Number]"===e?new Date(t):("string"!=typeof t&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function g(t,e){f(2,arguments);var n=b(t),r=b(e),a=n.getTime()-r.getTime();return a<0?-1:a>0?1:a}function y(t,e){f(2,arguments);var n=b(t),r=b(e),a=n.getFullYear()-r.getFullYear(),o=n.getMonth()-r.getMonth();return 12*a+o}function v(t,e){f(2,arguments);var n=b(t),r=b(e),a=g(n,r),o=Math.abs(y(n,r));n.setMonth(n.getMonth()-a*o);var i=g(n,r)===-a,s=a*(o-i);return 0===s?0:s}function k(t,e){f(2,arguments);var n=b(t),r=b(e);return n.getTime()-r.getTime()}function A(t,e){f(2,arguments);var n=k(t,e)/1e3;return n>0?Math.floor(n):Math.ceil(n)}var w={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function j(t){return function(e){var n=e||{},r=n.width?String(n.width):t.defaultWidth;return t.formats[r]||t.formats[t.defaultWidth]}}var S,$={date:j({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:j({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:j({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},E={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function x(t){return function(e,n){var r,a=n||{};if("formatting"===(a.context?String(a.context):"standalone")&&t.formattingValues){var o=t.defaultFormattingWidth||t.defaultWidth,i=a.width?String(a.width):o;r=t.formattingValues[i]||t.formattingValues[o]}else{var s=t.defaultWidth,d=a.width?String(a.width):t.defaultWidth;r=t.values[d]||t.values[s]}return r[t.argumentCallback?t.argumentCallback(e):e]}}function C(t){return function(e,n){var r=String(e),a=n||{},o=a.width,i=o&&t.matchPatterns[o]||t.matchPatterns[t.defaultMatchWidth],s=r.match(i);if(!s)return null;var d,c=s[0],u=o&&t.parsePatterns[o]||t.parsePatterns[t.defaultParseWidth];return d="[object Array]"===Object.prototype.toString.call(u)?function(t,e){for(var n=0;n<t.length;n++)if(t[n].test(c))return n}(u):function(t,e){for(var n in t)if(t.hasOwnProperty(n)&&t[n].test(c))return n}(u),d=t.valueCallback?t.valueCallback(d):d,{value:d=a.valueCallback?a.valueCallback(d):d,rest:r.slice(c.length)}}}const I={code:"en-US",formatDistance:function(t,e,n){var r;return n=n||{},r="string"==typeof w[t]?w[t]:1===e?w[t].one:w[t].other.replace("{{count}}",e),n.addSuffix?n.comparison>0?"in "+r:r+" ago":r},formatLong:$,formatRelative:function(t,e,n,r){return E[t]},localize:{ordinalNumber:function(t,e){var n=Number(t),r=n%100;if(r>20||r<10)switch(r%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:x({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:x({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(t){return Number(t)-1}}),month:x({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:x({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:x({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(S={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(t){return parseInt(t,10)}},function(t,e){var n=String(t),r=e||{},a=n.match(S.matchPattern);if(!a)return null;var o=a[0],i=n.match(S.parsePattern);if(!i)return null;var s=S.valueCallback?S.valueCallback(i[0]):i[0];return{value:s=r.valueCallback?r.valueCallback(s):s,rest:n.slice(o.length)}}),era:C({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:C({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(t){return t+1}}),month:C({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:C({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:C({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};function M(t){return function(t,e){if(null==t)throw new TypeError("assign requires that input parameter not be null or undefined");for(var n in e=e||{})e.hasOwnProperty(n)&&(t[n]=e[n]);return t}({},t)}var T=6e4;function q(t){return t.getTime()%T}function L(t){var e=new Date(t.getTime()),n=Math.ceil(e.getTimezoneOffset());e.setSeconds(0,0);var r=n>0?(T+q(e))%T:q(e);return n*T+r}var D=1440,P=43200;function W(t,e,n){f(2,arguments);var r=n||{},a=r.locale||I;if(!a.formatDistance)throw new RangeError("locale must contain formatDistance property");var o=g(t,e);if(isNaN(o))throw new RangeError("Invalid time value");var i,s,d=M(r);d.addSuffix=Boolean(r.addSuffix),d.comparison=o,o>0?(i=b(e),s=b(t)):(i=b(t),s=b(e));var c,u=A(s,i),l=(L(s)-L(i))/1e3,m=Math.round((u-l)/60);if(m<2)return r.includeSeconds?u<5?a.formatDistance("lessThanXSeconds",5,d):u<10?a.formatDistance("lessThanXSeconds",10,d):u<20?a.formatDistance("lessThanXSeconds",20,d):u<40?a.formatDistance("halfAMinute",null,d):u<60?a.formatDistance("lessThanXMinutes",1,d):a.formatDistance("xMinutes",1,d):0===m?a.formatDistance("lessThanXMinutes",1,d):a.formatDistance("xMinutes",m,d);if(m<45)return a.formatDistance("xMinutes",m,d);if(m<90)return a.formatDistance("aboutXHours",1,d);if(m<D){var p=Math.round(m/60);return a.formatDistance("aboutXHours",p,d)}if(m<2520)return a.formatDistance("xDays",1,d);if(m<P){var _=Math.round(m/D);return a.formatDistance("xDays",_,d)}if(m<86400)return c=Math.round(m/P),a.formatDistance("aboutXMonths",c,d);if((c=v(s,i))<12){var h=Math.round(m/P);return a.formatDistance("xMonths",h,d)}var y=c%12,k=Math.floor(c/12);return y<3?a.formatDistance("aboutXYears",k,d):y<9?a.formatDistance("overXYears",k,d):a.formatDistance("almostXYears",k+1,d)}function N(t,e){return f(1,arguments),W(t,Date.now(),e)}const O=t=>{const e=document.createElement("div");e.setAttribute("class","task_card"),e.setAttribute("id",`task_card_${t.projId}_${t.id}`);const n=document.createElement("div");n.setAttribute("id",`task_show_mode_${t.projId}_${t.id}`),n.classList.add("show_div_task");const r=document.createElement("div");r.setAttribute("class","div_show_mode_left");const a=document.createElement("div");a.setAttribute("id",`display_task_priority_${t.projId}_${t.id}`),a.classList.add(`priority_box_${t.priority}`,"priority_box");const o=document.createElement("h3");o.setAttribute("id",`display_task_title_${t.projId}_${t.id}`),o.textContent=t.title,r.append(a,o);const i=document.createElement("div");i.setAttribute("class","div_show_mode_right");const s=document.createElement("span");s.textContent=N(t.formatedDueDate(),{addSuffix:!0}),s.setAttribute("id",`display_task_date_${t.projId}_${t.id}`);const d=new Image;d.setAttribute("src",_),d.setAttribute("class","add_proj_icon"),d.dataset.TaskId=t.id,d.dataset.TaskProjId=t.projId,d.addEventListener("click",(t=>R(t)));const c=new Image;c.setAttribute("src",h),c.setAttribute("class","add_proj_icon"),c.dataset.TaskId=t.id,c.dataset.TaskProjId=t.projId,c.addEventListener("click",(t=>Z(t))),i.append(s,d,c);const u=document.createElement("div");u.setAttribute("class","div_show_mode_top"),u.append(r,i);const l=document.createElement("div");l.setAttribute("class","div_show_mode_buttom");const m=document.createElement("span");m.setAttribute("id",`display_task_description_${t.projId}_${t.id}`),m.textContent=t.description;const p=document.createElement("span");p.setAttribute("id",`display_task_status_${t.projId}_${t.id}`),p.classList.add("task_status",`task_status_${t.status}`),p.textContent=t.status,l.append(m,p);const f=document.createElement("div");f.setAttribute("id",`task_edit_mode_${t.projId}_${t.id}`),f.classList.add("edit_div_task","hide");const b=document.createElement("div");b.classList.add("edit_task_form_wrapper");const g=document.createElement("input");g.setAttribute("type","text"),g.setAttribute("id",`edit_task_title_${t.projId}_${t.id}`),g.setAttribute("value",t.title);const y=document.createElement("input");y.setAttribute("type","text"),y.setAttribute("id",`edit_task_description_${t.projId}_${t.id}`),y.setAttribute("value",t.description);const v=document.createElement("span");v.setAttribute("class","edit_task_select_span");const k=document.createElement("label");k.textContent="Priority:",k.setAttribute("for",`edit_task_priority_${t.projId}_${t.id}`);const A=document.createElement("select");A.setAttribute("id",`edit_task_priority_${t.projId}_${t.id}`);const w=document.createElement("option");w.setAttribute("value","hight"),w.textContent="Hight";const j=document.createElement("option");j.setAttribute("value","medium"),j.textContent="Medium";const S=document.createElement("option");S.setAttribute("value","low"),S.textContent="Low",A.append(w,j,S),A.value=t.priority,v.append(k,A);const $=document.createElement("span");$.setAttribute("class","edit_task_select_span");const E=document.createElement("label");E.textContent="Status:",E.setAttribute("for",`edit_task_status_${t.projId}_${t.id}`);const x=document.createElement("select");x.setAttribute("id",`edit_task_status_${t.projId}_${t.id}`);const C=document.createElement("option");C.setAttribute("value","To-do"),C.textContent="To-do";const I=document.createElement("option");I.setAttribute("value","In-progress"),I.textContent="In progress";const M=document.createElement("option");M.setAttribute("value","Done"),M.textContent="Done",x.append(C,I,M),x.value=t.status,$.append(E,x);const T=document.createElement("span");v.setAttribute("class","edit_task_date_span");const q=document.createElement("label");q.textContent="Schedule:",q.setAttribute("for",`edit_task_date_${t.projId}_${t.id}`);const L=document.createElement("input");L.setAttribute("type","date"),L.setAttribute("id",`edit_task_date_${t.projId}_${t.id}`),T.append(q,L);const D=document.createElement("div");D.setAttribute("class","edit_task_form_buttons");const P=document.createElement("button");P.dataset.TaskId=t.id,P.dataset.TaskProjId=t.projId,P.addEventListener("click",(t=>B(t))),P.textContent="Submit";const W=document.createElement("button");return W.textContent="Cancel",W.dataset.TaskId=t.id,W.dataset.TaskProjId=t.projId,W.addEventListener("click",(t=>R(t))),D.append(P,W),b.append(g,y,v,$,T,D),f.append(b),n.append(u,l),e.append(n,f),e},X=n(747).Z,J=n(507).Z,F=()=>{document.querySelector("#project_title").value="",document.querySelector("#add_project_form").classList.toggle("hide")},Y=t=>{let e=t.target.dataset.projectId;document.querySelector(`#task_title_${e}`).value="",document.querySelector(`#task_description_${e}`).value="",document.querySelector(`#task_priority_${e}`).value="low",document.querySelector(`#add_task_form_${e}`).classList.toggle("hide")},Z=t=>{let e=t.target.dataset.TaskId,n=t.target.dataset.TaskProjId,r=document.querySelector(`#task_card_${n}_${e}`);document.querySelector(`#tasks_wrapper_${n}`).removeChild(r);let a=c(l,n),o=l[a];o.removeTask(e),console.log(`after delete ${o.tasks}`),localStorage.setItem("projectsList",JSON.stringify(l))},R=t=>{let e=t.target.dataset.TaskId,n=t.target.dataset.TaskProjId,r=c(l,n),a=l[r],o=c(a.tasks,e),i=a.tasks[o];document.querySelector(`#edit_task_title_${n}_${e}`).value=i.title,document.querySelector(`#edit_task_description_${n}_${e}`).value=i.description,document.querySelector(`#edit_task_priority_${n}_${e}`).value=i.priority,document.querySelector(`#edit_task_status_${n}_${e}`).value=i.status,document.querySelector(`#task_show_mode_${n}_${e}`).classList.toggle("hide"),document.querySelector(`#task_edit_mode_${n}_${e}`).classList.toggle("hide")},B=t=>{let e=t.target.dataset.TaskId,n=t.target.dataset.TaskProjId,r=c(l,n),a=l[r],o=c(a.tasks,e),i=a.tasks[o];const s=i.priority,d=i.status;let u=document.querySelector(`#edit_task_title_${n}_${e}`);i.title=u.value;let m=document.querySelector(`#edit_task_description_${n}_${e}`);i.description=m.value;let p=document.querySelector(`#edit_task_priority_${n}_${e}`);i.priority=p.value;let _=document.querySelector(`#edit_task_date_${n}_${e}`);i.dueDate=_.value;let h=document.querySelector(`#edit_task_status_${n}_${e}`);i.status=h.value,document.querySelector(`#display_task_title_${n}_${e}`).textContent=i.title,document.querySelector(`#display_task_description_${n}_${e}`).textContent=i.description;const f=document.querySelector(`#display_task_priority_${n}_${e}`);f.classList.remove(`priority_box_${s}`),f.classList.add(`priority_box_${i.priority}`),document.querySelector(`#display_task_date_${n}_${e}`).textContent=N(i.formatedDueDate(),{addSuffix:!0});const b=document.querySelector(`#display_task_status_${n}_${e}`);b.textContent=i.status,b.classList.remove(`task_status_${d}`),b.classList.add(`task_status_${i.status}`),document.querySelector(`#task_show_mode_${n}_${e}`).classList.toggle("hide"),document.querySelector(`#task_edit_mode_${n}_${e}`).classList.toggle("hide"),localStorage.setItem("projectsList",JSON.stringify(l))};var H=n(883),z=n(247),U=n(563);const Q=t=>{const e=document.createElement("div");e.setAttribute("id",`project_container_${t.id}`),e.classList.add("project_container");const n=document.createElement("span");n.setAttribute("id",`project_show_mode_${t.id}`),n.classList.add("span_project");const r=document.createElement("span");r.setAttribute("id",`project_edit_mode_${t.id}`),r.classList.add("span_project","hide");const a=document.createElement("button");a.setAttribute("id",`show_project_title_${t.id}`),a.dataset.projectId=t.id,a.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=document.querySelector(`#proj_${e}`),r=document.querySelector(".shown");null!==r&&r.classList.toggle("shown"),n.classList.toggle("shown")})(t))),a.setAttribute("class","tablinks"),a.textContent=t.title;const o=new Image;o.setAttribute("src",_),o.setAttribute("class","add_proj_icon"),o.dataset.projectId=t.id,o.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide")})(t)));const s=new Image;s.setAttribute("src",h),s.setAttribute("class","add_proj_icon"),s.dataset.projectId=t.id,s.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=document.querySelector(`#project_container_${e}`);document.querySelector("#tabs").removeChild(n),((t,e)=>{let n=c(t,e);t.splice(n,1)})(l,e),console.log(`after delete ${l}`),localStorage.setItem("projectsList",JSON.stringify(l))})(t))),n.append(a,o,s);const d=document.createElement("input");d.setAttribute("type","text"),d.setAttribute("id",`edit_project_title_${t.id}`),d.setAttribute("value",t.title);const u=new Image;u.setAttribute("src",z),u.setAttribute("class","add_proj_icon"),u.dataset.projectId=t.id,u.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;const n=document.querySelector(`#edit_project_title_${e}`);((t,e,n)=>{t[c(t,e)].title=n,localStorage.setItem("projectsList",JSON.stringify(t))})(l,e,n.value),document.querySelector(`#show_project_title_${e}`).textContent=n.value,document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide")})(t)));const m=new Image;return m.setAttribute("src",U),m.setAttribute("class","add_proj_icon"),m.dataset.projectId=t.id,m.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide");const n=document.querySelector(`#edit_project_title_${e}`),r=document.querySelector(`#show_project_title_${e}`);n.value=r.textContent})(t))),r.append(d,u,m),e.append(n,r),i.append((t=>{const e=document.createElement("div");e.setAttribute("class","tabcontent"),e.setAttribute("id",`proj_${t.id}`);const n=document.createElement("div");n.setAttribute("class","project_header");const r=document.createElement("h2");r.setAttribute("class","header_title"),r.textContent=t.title;const a=document.createElement("button");a.dataset.projectId=t.id,a.addEventListener("click",(t=>Y(t))),a.setAttribute("class","header_add_task");const o=new Image;o.setAttribute("src",p),o.setAttribute("class","add_proj_icon");const i=document.createElement("span");i.setAttribute("class","add_task_span"),i.textContent="Add a Task",a.append(o,i),n.append(r,a);const s=document.createElement("div");s.setAttribute("class","add_task_form_wrapper"),s.classList.add("hide"),s.setAttribute("id",`add_task_form_${t.id}`);const d=document.createElement("input");d.setAttribute("type","text"),d.setAttribute("id",`task_title_${t.id}`),d.setAttribute("placeholder","Type your task title here!");const u=document.createElement("input");u.setAttribute("type","text"),u.setAttribute("id",`task_description_${t.id}`),u.setAttribute("placeholder","Type a description for your task here!");const m=document.createElement("span");m.setAttribute("class","add_task_select_span");const _=document.createElement("label");_.textContent="Priority:",_.setAttribute("for",`task_priority_${t.id}`);const h=document.createElement("select");h.setAttribute("id",`task_priority_${t.id}`);const f=document.createElement("option");f.setAttribute("value","hight"),f.textContent="Hight";const b=document.createElement("option");b.setAttribute("value","medium"),b.textContent="Medium";const g=document.createElement("option");g.setAttribute("value","low"),g.textContent="Low",h.append(f,b,g),m.append(_,h);const y=document.createElement("span");m.setAttribute("class","add_task_date_span");const v=document.createElement("label");v.textContent="Schedule:",v.setAttribute("for",`task_date_${t.id}`);const k=document.createElement("input");k.setAttribute("type","date"),k.setAttribute("id",`task_date_${t.id}`),y.append(v,k);const A=document.createElement("div");A.setAttribute("class","add_task_form_buttons");const w=document.createElement("button");w.dataset.projectId=t.id,w.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=c(l,e),r=l[n],a=document.querySelector(`#task_title_${e}`).value,o=document.querySelector(`#task_description_${e}`).value,i=document.querySelector(`#task_priority_${e}`).value,s=document.querySelector(`#task_date_${e}`).value;const d=new J(a,o,s,i,e,r.taskCounter);((t,e,n)=>{t[c(t,e)].addTask(n)})(l,e,d),document.querySelector(`#tasks_wrapper_${e}`).append(O(d)),document.querySelector(`#add_task_form_${e}`).classList.toggle("hide"),localStorage.setItem("projectsList",JSON.stringify(l))})(t))),w.textContent="Create Task";const j=document.createElement("button");j.textContent="Cancel",j.dataset.projectId=t.id,j.addEventListener("click",(t=>Y(t))),A.append(w,j),s.append(d,u,m,y,A);const S=document.createElement("div");return S.setAttribute("id",`tasks_wrapper_${t.id}`),S.setAttribute("class","tasks_wrapper"),t.tasks.forEach((t=>(S.append(O(t)),S))),e.append(n,s,S),e})(t)),e},V=(n(747).Z,n(507).Z,document.querySelector("#container"));console.log("index"),V.append((t=>{const e=document.createElement("div");e.setAttribute("id","project_nav");const n=document.createElement("div");n.setAttribute("class","logo_project"),n.textContent="My Projects";const r=document.createElement("button");r.setAttribute("id","add_project");const a=new Image;a.setAttribute("src",H),a.setAttribute("class","add_proj_icon");const o=document.createElement("span");o.textContent="Projects",r.append(o,a),r.addEventListener("click",(()=>F()));const i=document.createElement("div");i.setAttribute("id","add_project_form"),i.classList.add("hide");const s=document.createElement("input");s.setAttribute("type","text"),s.setAttribute("id","project_title"),s.setAttribute("placeholder","Type your project title here!");const d=document.createElement("div");d.setAttribute("class","add_project_form_buttons");const c=document.createElement("button");c.addEventListener("click",(()=>(()=>{let t=document.querySelector("#project_title").value;m+=1;const e=new X(t,m);l.push(e),localStorage.setItem("countProjects",m),localStorage.setItem("projectsList",JSON.stringify(l)),document.querySelector("#tabs").append(Q(e)),document.querySelector("#add_project_form").classList.toggle("hide")})())),c.textContent="Create Project";const u=document.createElement("button");u.textContent="Cancel",u.addEventListener("click",(()=>F())),d.append(c,u),i.append(s,d);const p=document.createElement("div");return p.setAttribute("id","tabs"),t.forEach((t=>(p.append(Q(t)),p))),e.append(n,r,i,p),e})(l),i)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvcHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy90YXNrLmpzIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvdmFyaWFibGVzLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vdG9EYXRlL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9jb21wYXJlQXNjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9kaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vZGlmZmVyZW5jZUluTW9udGhzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9kaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2RpZmZlcmVuY2VJblNlY29uZHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9lbi1VUy9fbGliL2Zvcm1hdERpc3RhbmNlL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvX2xpYi9idWlsZEZvcm1hdExvbmdGbi9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL2VuLVVTL19saWIvZm9ybWF0TG9uZy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL19saWIvYnVpbGRNYXRjaFBhdHRlcm5Gbi9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL2VuLVVTL19saWIvZm9ybWF0UmVsYXRpdmUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9fbGliL2J1aWxkTG9jYWxpemVGbi9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL19saWIvYnVpbGRNYXRjaEZuL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvZW4tVVMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9lbi1VUy9fbGliL2xvY2FsaXplL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvZW4tVVMvX2xpYi9tYXRjaC9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9jbG9uZU9iamVjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vZm9ybWF0RGlzdGFuY2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2Zvcm1hdERpc3RhbmNlVG9Ob3cvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvdGFza05hdi5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9saXN0bmVycy5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9wcm9qZWN0TmF2LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjb25jYXQiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImxlbmd0aCIsIl9pIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIiLCJsZW4iLCJhcnIyIiwiQXJyYXkiLCJfaXRlbSIsImlzQXJyYXkiLCJfYXJyYXlXaXRoSG9sZXMiLCJTeW1ib2wiLCJpdGVyYXRvciIsIk9iamVjdCIsIl9hcnIiLCJfbiIsIl9kIiwiX2UiLCJ1bmRlZmluZWQiLCJfcyIsIm5leHQiLCJkb25lIiwidmFsdWUiLCJlcnIiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJvIiwibWluTGVuIiwibiIsInByb3RvdHlwZSIsImNhbGwiLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiVHlwZUVycm9yIiwiX25vbkl0ZXJhYmxlUmVzdCIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJtZW1vIiwiZ2V0VGFyZ2V0IiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwic3R5bGVzSW5Eb20iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXgiLCJvYmoiLCJjc3MiLCJtZWRpYSIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZSIsImNyZWF0ZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwibm9uY2UiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsInNldEF0dHJpYnV0ZSIsImluc2VydCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJyZW1vdmUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImNoaWxkTm9kZXMiLCJyZW1vdmVDaGlsZCIsImluc2VydEJlZm9yZSIsImFwcGx5VG9UYWciLCJyZW1vdmVBdHRyaWJ1dGUiLCJmaXJzdENoaWxkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInVwZGF0ZSIsInN0eWxlSW5kZXgiLCJiaW5kIiwicGFyZW50Tm9kZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImFsbCIsImF0b2IiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2luZGV4Iiwic3BsaWNlIiwidGl0bGUiLCJfdGl0bGUiLCJfdGFza3MiLCJfaWQiLCJfdGFza0NvdW50ZXIiLCJ0YXNrIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJwcm9qSWQiLCJfZGVzY3JpcHRpb24iLCJfZHVlRGF0ZSIsIl9wcmlvcml0eSIsIl9zdGF0dXMiLCJfcHJvaklkIiwidmFsIiwic3RhdHVzIiwiRGF0ZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJoYXNPd25Qcm9wZXJ0eSIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJyZXBsYWNlIiwicCIsIlByb2plY3QiLCJUYXNrIiwidGFza3NDb250YWluZXIiLCJwcm9qZWN0c0xpc3RTdG9yZWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwicGFyc2UiLCJjb3VudFByb2plY3RzU3RvcmVkIiwiZmluZFByb2plY3QiLCJhcnJheSIsIm1pbiIsIm1heCIsIk1hdGgiLCJmbG9vciIsImZvdW5kIiwicGFyc2VKc29uVG9UYXNrIiwib2JqSnNvbiIsInByb2plY3RzTGlzdCIsImVsZW0iLCJ0YXNrcyIsInByb2plY3QiLCJwYXJzZWRUYXNrIiwiYWRkVGFzayIsInJlYWRQcm9qZWN0RnJvbVN0b3JhZ2UiLCJjb25zb2xlIiwibG9nIiwiY291bnRQcm9qZWN0cyIsInBhcnNlSW50IiwicmVxdWlyZWRBcmdzIiwicmVxdWlyZWQiLCJhcmdzIiwidG9EYXRlIiwiYXJndW1lbnQiLCJhcmd1bWVudHMiLCJhcmdTdHIiLCJnZXRUaW1lIiwid2FybiIsInN0YWNrIiwiTmFOIiwiY29tcGFyZUFzYyIsImRpcnR5RGF0ZUxlZnQiLCJkaXJ0eURhdGVSaWdodCIsImRhdGVMZWZ0IiwiZGF0ZVJpZ2h0IiwiZGlmZiIsImRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzIiwieWVhckRpZmYiLCJnZXRGdWxsWWVhciIsIm1vbnRoRGlmZiIsImdldE1vbnRoIiwiZGlmZmVyZW5jZUluTW9udGhzIiwic2lnbiIsImRpZmZlcmVuY2UiLCJhYnMiLCJzZXRNb250aCIsImlzTGFzdE1vbnRoTm90RnVsbCIsImRpZmZlcmVuY2VJbk1pbGxpc2Vjb25kcyIsImRpZmZlcmVuY2VJblNlY29uZHMiLCJjZWlsIiwiZm9ybWF0RGlzdGFuY2VMb2NhbGUiLCJsZXNzVGhhblhTZWNvbmRzIiwib25lIiwib3RoZXIiLCJ4U2Vjb25kcyIsImhhbGZBTWludXRlIiwibGVzc1RoYW5YTWludXRlcyIsInhNaW51dGVzIiwiYWJvdXRYSG91cnMiLCJ4SG91cnMiLCJ4RGF5cyIsImFib3V0WFdlZWtzIiwieFdlZWtzIiwiYWJvdXRYTW9udGhzIiwieE1vbnRocyIsImFib3V0WFllYXJzIiwieFllYXJzIiwib3ZlclhZZWFycyIsImFsbW9zdFhZZWFycyIsImJ1aWxkRm9ybWF0TG9uZ0ZuIiwiZGlydHlPcHRpb25zIiwid2lkdGgiLCJTdHJpbmciLCJkZWZhdWx0V2lkdGgiLCJmb3JtYXRzIiwiZm9ybWF0TG9uZyIsImRhdGUiLCJmdWxsIiwibG9uZyIsIm1lZGl1bSIsInNob3J0IiwidGltZSIsImRhdGVUaW1lIiwiZm9ybWF0UmVsYXRpdmVMb2NhbGUiLCJsYXN0V2VlayIsInllc3RlcmRheSIsInRvZGF5IiwidG9tb3Jyb3ciLCJuZXh0V2VlayIsImJ1aWxkTG9jYWxpemVGbiIsImRpcnR5SW5kZXgiLCJ2YWx1ZXNBcnJheSIsImNvbnRleHQiLCJmb3JtYXR0aW5nVmFsdWVzIiwiZGVmYXVsdEZvcm1hdHRpbmdXaWR0aCIsIl9kZWZhdWx0V2lkdGgiLCJfd2lkdGgiLCJ2YWx1ZXMiLCJhcmd1bWVudENhbGxiYWNrIiwiYnVpbGRNYXRjaEZuIiwiZGlydHlTdHJpbmciLCJzdHJpbmciLCJtYXRjaFBhdHRlcm4iLCJtYXRjaFBhdHRlcm5zIiwiZGVmYXVsdE1hdGNoV2lkdGgiLCJtYXRjaFJlc3VsdCIsIm1hdGNoIiwibWF0Y2hlZFN0cmluZyIsInBhcnNlUGF0dGVybnMiLCJkZWZhdWx0UGFyc2VXaWR0aCIsInByZWRpY2F0ZSIsImZpbmRJbmRleCIsIm9iamVjdCIsImZpbmRLZXkiLCJ2YWx1ZUNhbGxiYWNrIiwicmVzdCIsImNvZGUiLCJmb3JtYXREaXN0YW5jZSIsInRva2VuIiwiYWRkU3VmZml4IiwiY29tcGFyaXNvbiIsImZvcm1hdFJlbGF0aXZlIiwiX2RhdGUiLCJfYmFzZURhdGUiLCJfb3B0aW9ucyIsImxvY2FsaXplIiwib3JkaW5hbE51bWJlciIsImRpcnR5TnVtYmVyIiwiX2RpcnR5T3B0aW9ucyIsIm51bWJlciIsIk51bWJlciIsInJlbTEwMCIsImVyYSIsIm5hcnJvdyIsImFiYnJldmlhdGVkIiwid2lkZSIsInF1YXJ0ZXIiLCJtb250aCIsImRheSIsImRheVBlcmlvZCIsImFtIiwicG0iLCJtaWRuaWdodCIsIm5vb24iLCJtb3JuaW5nIiwiYWZ0ZXJub29uIiwiZXZlbmluZyIsIm5pZ2h0IiwicGFyc2VQYXR0ZXJuIiwicGFyc2VSZXN1bHQiLCJhbnkiLCJ3ZWVrU3RhcnRzT24iLCJmaXJzdFdlZWtDb250YWluc0RhdGUiLCJjbG9uZU9iamVjdCIsImRpcnR5T2JqZWN0IiwicHJvcGVydHkiLCJNSUxMSVNFQ09ORFNfSU5fTUlOVVRFIiwiZ2V0RGF0ZU1pbGxpc2Vjb25kc1BhcnQiLCJnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzIiwiZGlydHlEYXRlIiwiYmFzZVRpbWV6b25lT2Zmc2V0IiwiZ2V0VGltZXpvbmVPZmZzZXQiLCJzZXRTZWNvbmRzIiwibWlsbGlzZWNvbmRzUGFydE9mVGltZXpvbmVPZmZzZXQiLCJNSU5VVEVTX0lOX0RBWSIsIk1JTlVURVNfSU5fTU9OVEgiLCJkaXJ0eUJhc2VEYXRlIiwibG9jYWxlIiwiUmFuZ2VFcnJvciIsImlzTmFOIiwibG9jYWxpemVPcHRpb25zIiwibW9udGhzIiwic2Vjb25kcyIsIm9mZnNldEluU2Vjb25kcyIsIm1pbnV0ZXMiLCJyb3VuZCIsImluY2x1ZGVTZWNvbmRzIiwiaG91cnMiLCJkYXlzIiwibmVhcmVzdE1vbnRoIiwibW9udGhzU2luY2VTdGFydE9mWWVhciIsInllYXJzIiwiZm9ybWF0RGlzdGFuY2VUb05vdyIsIm5vdyIsImRpc3BsYXlUYXNrIiwidGFza0NhcmQiLCJkaXZTaG93TW9kZSIsImNsYXNzTGlzdCIsImFkZCIsImRpdlNob3dNb2RlTGVmdCIsInByaW9yaXR5Qm94IiwidGFza1RpdGxlIiwidGV4dENvbnRlbnQiLCJhcHBlbmQiLCJkaXZTaG93TW9kZVJpZ2h0Iiwic3BhbkR1ZURhdGUiLCJmb3JtYXRlZER1ZURhdGUiLCJlZGl0VGFza0ltYWdlIiwiSW1hZ2UiLCJkYXRhc2V0IiwiVGFza0lkIiwiVGFza1Byb2pJZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjYW5jZWxFZGl0VGFzayIsImRlbGV0ZVRhc2tJbWFnZSIsImRlbGV0ZVRhc2siLCJkaXZTaG93TW9kZVRvcCIsImRpdlNob3dNb2RlQnV0dG9tIiwic3BhbkRlc2NyaXB0aW9uIiwic3BhblN0YXR1cyIsImRpdkVkaXRNb2RlIiwiZWRpdFRhc2tGb3JtV3JhcHBlciIsImVkaXRUYXNrVGl0bGVJbnB1dCIsImVkaXRUYXNrRGVzY3JpcHRpb25JbnB1dCIsImVkaXRQcmlvcml0eVNwYW4iLCJlZGl0UHJpb3JpdHlMYWJlbCIsImVkaXRQcmlvcml0eVNlbGVjdCIsImVkaXRQcmlvcml0eU9wdGlvbjEiLCJlZGl0UHJpb3JpdHlPcHRpb24yIiwiZWRpdFByaW9yaXR5T3B0aW9uMyIsImVkaXRTdGF0dXNTcGFuIiwiZWRpdFN0YXR1c0xhYmVsIiwiZWRpdFN0YXR1c1NlbGVjdCIsImVkaXRTdGF0dXNPcHRpb24xIiwiZWRpdFN0YXR1c09wdGlvbjIiLCJlZGl0U3RhdHVzT3B0aW9uMyIsImVkaXREYXRlU3BhbiIsImVkaXREYXRlTGFiZWwiLCJlZGl0RGF0ZUlucHV0IiwiZWRpdFRhc2tGb3JtQnV0dG9ucyIsImVkaXRUYXNrRm9ybVN1Ym1pdCIsInN1Ym1pdEVkaXRUYXNrIiwiZWRpdFRhc2tGb3JtQ2FuY2VsIiwiY2FuY2VsQWRkUHJvamVjdCIsInRvZ2dsZSIsImNhbmNlbEFkZFRhc2siLCJwcm9qZWN0SWQiLCJ0YXNrSWQiLCJUYXNrQ2FyZCIsInByb2plY3RJbmR4IiwicmVtb3ZlVGFzayIsInNldEl0ZW0iLCJ0YXNrSW5kZXgiLCJwcmlvcml0eUxhc3QiLCJzdGF0dXNMYXN0IiwidGl0bGVJbnB1dCIsImRlc2NyaXB0aW9uSW5wdXQiLCJwcmlvcml0eUlucHV0IiwiZGF0ZUlucHV0Iiwic3RhdHVzSW5wdXQiLCJwcmlvcml0eURpc3BsYXkiLCJzdGF0dXNEaXNwbGF5IiwiZGlzcGxheVByb2plY3QiLCJ3cmFwZXIiLCJzcGFuU2hvd01vZGUiLCJzcGFuRWRpdE1vZGUiLCJidG4iLCJwcm9qZWN0RGl2Iiwic2hvd24iLCJvcGVuVGFiIiwiZWRpdFByb2plY3RJbWFnZSIsImVkaXRQcm9qZWN0IiwiZGVsZXRlUHJvamVjdEltYWdlIiwid3JhcHBlciIsImRlbGV0ZUZyb21Qcm9qZWN0TGlzdCIsImRlbGV0ZVByb2plY3QiLCJlZGl0UHJvalRpdGxlSW5wdXQiLCJzdWJtaXRQcm9qZWN0SW1hZ2UiLCJpbnB1dCIsImVkaXRQcm9qZWN0VGl0bGUiLCJzdWJtaXRFZGl0UHJvamVjdCIsImNhbmNlbFByb2plY3RJbWFnZSIsImJ0blR4dCIsImNhbmNlbFByb2plY3QiLCJteXByb2plY3QiLCJkaXZOYXZXcmFwIiwiaGVhZGVyIiwiaGVhZGVyVGl0bGUiLCJoZWFkZXJBZGRUYXNrIiwiYWRkVGFza0ltYWdlIiwiYWRkVGFza1NwYW4iLCJhZGRUYXNrRm9ybVdyYXBwZXIiLCJhZGRUYXNrVGl0bGVJbnB1dCIsImFkZFRhc2tEZXNjcmlwdGlvbklucHV0IiwiYWRkUHJpb3JpdHlTcGFuIiwiYWRkUHJpb3JpdHlMYWJlbCIsImFkZFByaW9yaXR5U2VsZWN0IiwiYWRkUHJpb3JpdHlPcHRpb24xIiwiYWRkUHJpb3JpdHlPcHRpb24yIiwiYWRkUHJpb3JpdHlPcHRpb24zIiwiYWRkRGF0ZVNwYW4iLCJhZGREYXRlTGFiZWwiLCJhZGREYXRlSW5wdXQiLCJhZGRUYXNrRm9ybUJ1dHRvbnMiLCJhZGRUYXNrRm9ybUNyZWF0ZSIsInRhc2tDb3VudGVyIiwiYWRkVGFza1RvUHJvamVjdCIsImFkZFRhc2tGb3JtQ2FuY2VsIiwidGFza3NXcmFwcGVyIiwiZWxlbWVudCIsInRhc2tOYXYiLCJnbG9iYWxDb250YWluZXIiLCJwcm9qTGlzdCIsImJyYW5kIiwiYWRkUHJvaiIsImFkZFByb2plY3RJbWFnZSIsImFkZFByb2pUZXh0IiwiYWRkUHJvakZvcm0iLCJhZGRQcm9qVGl0bGVJbnB1dCIsImFkZFByb2plY3RGb3JtQnV0dG9ucyIsImFkZFByb2plY3RGb3JtQ3JlYXRlIiwiYWRkUHJvamVjdCIsImFkZFByb2plY3RGb3JtQ2FuY2VsIiwidGFic0RpdiIsInByb2plY3ROYXYiXSwibWFwcGluZ3MiOiJ1RkFHSUEsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSxpS0FBa0ssR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsNkJBQTZCLE1BQVEsR0FBRyxTQUFXLGdHQUFnRyxlQUFpQixDQUFDLGtLQUFrSyxXQUFhLE1BRTFqQixXLFFDQ0FELEVBQU9FLFFBQVUsU0FBVUMsR0FDekIsSUFBSUMsRUFBTyxHQXVEWCxPQXJEQUEsRUFBS0MsU0FBVyxXQUNkLE9BQU9DLEtBQUtDLEtBQUksU0FBVUMsR0FDeEIsSUFBSUMsRUFBVU4sRUFBdUJLLEdBRXJDLE9BQUlBLEVBQUssR0FDQSxVQUFVRSxPQUFPRixFQUFLLEdBQUksTUFBTUUsT0FBT0QsRUFBUyxLQUdsREEsS0FDTkUsS0FBSyxLQUtWUCxFQUFLUSxFQUFJLFNBQVVDLEVBQVNDLEVBQVlDLEdBQ2YsaUJBQVpGLElBRVRBLEVBQVUsQ0FBQyxDQUFDLEtBQU1BLEVBQVMsTUFHN0IsSUFBSUcsRUFBeUIsR0FFN0IsR0FBSUQsRUFDRixJQUFLLElBQUlILEVBQUksRUFBR0EsRUFBSU4sS0FBS1csT0FBUUwsSUFBSyxDQUVwQyxJQUFJWCxFQUFLSyxLQUFLTSxHQUFHLEdBRVAsTUFBTlgsSUFDRmUsRUFBdUJmLElBQU0sR0FLbkMsSUFBSyxJQUFJaUIsRUFBSyxFQUFHQSxFQUFLTCxFQUFRSSxPQUFRQyxJQUFNLENBQzFDLElBQUlWLEVBQU8sR0FBR0UsT0FBT0csRUFBUUssSUFFekJILEdBQVVDLEVBQXVCUixFQUFLLE1BS3RDTSxJQUNHTixFQUFLLEdBR1JBLEVBQUssR0FBSyxHQUFHRSxPQUFPSSxFQUFZLFNBQVNKLE9BQU9GLEVBQUssSUFGckRBLEVBQUssR0FBS00sR0FNZFYsRUFBS0wsS0FBS1MsTUFJUEosSSxPQ3hEVCxTQUFTZSxFQUFrQkMsRUFBS0MsSUFBa0IsTUFBUEEsR0FBZUEsRUFBTUQsRUFBSUgsVUFBUUksRUFBTUQsRUFBSUgsUUFBUSxJQUFLLElBQUlMLEVBQUksRUFBR1UsRUFBTyxJQUFJQyxNQUFNRixHQUFNVCxFQUFJUyxFQUFLVCxJQUFPVSxFQUFLVixHQUFLUSxFQUFJUixHQUFNLE9BQU9VLEVBTWhMdEIsRUFBT0UsUUFBVSxTQUFnQ00sR0FDL0MsSUFic0JZLEVBQUtSLEVBYXZCWSxHQWJ1QlosRUFhTSxFQUhuQyxTQUF5QlEsR0FBTyxHQUFJRyxNQUFNRSxRQUFRTCxHQUFNLE9BQU9BLEVBVnRCTSxDQUFqQk4sRUFhS1osSUFMN0IsU0FBK0JZLEVBQUtSLEdBQUssR0FBc0Isb0JBQVhlLFFBQTRCQSxPQUFPQyxZQUFZQyxPQUFPVCxHQUFqRSxDQUFnRixJQUFJVSxFQUFPLEdBQVFDLEdBQUssRUFBVUMsR0FBSyxFQUFXQyxPQUFLQyxFQUFXLElBQU0sSUFBSyxJQUFpQ0MsRUFBN0JqQixFQUFLRSxFQUFJTyxPQUFPQyxjQUFtQkcsR0FBTUksRUFBS2pCLEVBQUdrQixRQUFRQyxRQUFvQlAsRUFBSy9CLEtBQUtvQyxFQUFHRyxRQUFZMUIsR0FBS2tCLEVBQUtiLFNBQVdMLEdBQTNEbUIsR0FBSyxJQUFvRSxNQUFPUSxHQUFPUCxHQUFLLEVBQU1DLEVBQUtNLEVBQU8sUUFBVSxJQUFXUixHQUFzQixNQUFoQmIsRUFBVyxRQUFXQSxFQUFXLFNBQU8sUUFBVSxHQUFJYyxFQUFJLE1BQU1DLEdBQVEsT0FBT0gsR0FSamFVLENBQXNCcEIsRUFBS1IsSUFJNUYsU0FBcUM2QixFQUFHQyxHQUFVLEdBQUtELEVBQUwsQ0FBZ0IsR0FBaUIsaUJBQU5BLEVBQWdCLE9BQU90QixFQUFrQnNCLEVBQUdDLEdBQVMsSUFBSUMsRUFBSWQsT0FBT2UsVUFBVXZDLFNBQVN3QyxLQUFLSixHQUFHSyxNQUFNLEdBQUksR0FBaUUsTUFBbkQsV0FBTkgsR0FBa0JGLEVBQUVNLGNBQWFKLEVBQUlGLEVBQUVNLFlBQVlDLE1BQWdCLFFBQU5MLEdBQXFCLFFBQU5BLEVBQW9CcEIsTUFBTTBCLEtBQUtSLEdBQWMsY0FBTkUsR0FBcUIsMkNBQTJDTyxLQUFLUCxHQUFXeEIsRUFBa0JzQixFQUFHQyxRQUF6RyxHQUozTVMsQ0FBNEIvQixFQUFLUixJQUVuSSxXQUE4QixNQUFNLElBQUl3QyxVQUFVLDZJQUZ1RkMsSUFjbkk1QyxFQUFVZSxFQUFNLEdBQ2hCOEIsRUFBYTlCLEVBQU0sR0FFdkIsR0FBb0IsbUJBQVQrQixLQUFxQixDQUU5QixJQUFJQyxFQUFTRCxLQUFLRSxTQUFTQyxtQkFBbUJDLEtBQUtDLFVBQVVOLE1BQ3pETyxFQUFPLCtEQUErRG5ELE9BQU84QyxHQUM3RU0sRUFBZ0IsT0FBT3BELE9BQU9tRCxFQUFNLE9BQ3BDRSxFQUFhVCxFQUFXVSxRQUFRekQsS0FBSSxTQUFVMEQsR0FDaEQsTUFBTyxpQkFBaUJ2RCxPQUFPNEMsRUFBV1ksWUFBYyxJQUFJeEQsT0FBT3VELEVBQVEsVUFFN0UsTUFBTyxDQUFDeEQsR0FBU0MsT0FBT3FELEdBQVlyRCxPQUFPLENBQUNvRCxJQUFnQm5ELEtBQUssTUFHbkUsTUFBTyxDQUFDRixHQUFTRSxLQUFLLFEsY0M1QnhCLElBQ013RCxFQWVGQyxFQUFZLFdBQ2QsSUFBSUQsRUFBTyxHQUNYLE9BQU8sU0FBa0JFLEdBQ3ZCLFFBQTRCLElBQWpCRixFQUFLRSxHQUF5QixDQUN2QyxJQUFJQyxFQUFjQyxTQUFTQyxjQUFjSCxHQUV6QyxHQUFJSSxPQUFPQyxtQkFBcUJKLGFBQXVCRyxPQUFPQyxrQkFDNUQsSUFHRUosRUFBY0EsRUFBWUssZ0JBQWdCQyxLQUMxQyxNQUFPQyxHQUVQUCxFQUFjLEtBSWxCSCxFQUFLRSxHQUFVQyxFQUdqQixPQUFPSCxFQUFLRSxJQXBCQSxHQXdCWlMsRUFBYyxHQUVsQixTQUFTQyxFQUFxQkMsR0FHNUIsSUFGQSxJQUFJQyxHQUFVLEVBRUxyRSxFQUFJLEVBQUdBLEVBQUlrRSxFQUFZN0QsT0FBUUwsSUFDdEMsR0FBSWtFLEVBQVlsRSxHQUFHb0UsYUFBZUEsRUFBWSxDQUM1Q0MsRUFBU3JFLEVBQ1QsTUFJSixPQUFPcUUsRUFHVCxTQUFTQyxFQUFhOUUsRUFBTStFLEdBSTFCLElBSEEsSUFBSUMsRUFBYSxHQUNiQyxFQUFjLEdBRVR6RSxFQUFJLEVBQUdBLEVBQUlSLEVBQUthLE9BQVFMLElBQUssQ0FDcEMsSUFBSUosRUFBT0osRUFBS1EsR0FDWlgsRUFBS2tGLEVBQVFHLEtBQU85RSxFQUFLLEdBQUsyRSxFQUFRRyxLQUFPOUUsRUFBSyxHQUNsRCtFLEVBQVFILEVBQVduRixJQUFPLEVBQzFCK0UsRUFBYSxHQUFHdEUsT0FBT1QsRUFBSSxLQUFLUyxPQUFPNkUsR0FDM0NILEVBQVduRixHQUFNc0YsRUFBUSxFQUN6QixJQUFJQyxFQUFRVCxFQUFxQkMsR0FDN0JTLEVBQU0sQ0FDUkMsSUFBS2xGLEVBQUssR0FDVm1GLE1BQU9uRixFQUFLLEdBQ1pvRixVQUFXcEYsRUFBSyxLQUdILElBQVhnRixHQUNGVixFQUFZVSxHQUFPSyxhQUNuQmYsRUFBWVUsR0FBT00sUUFBUUwsSUFFM0JYLEVBQVkvRSxLQUFLLENBQ2ZpRixXQUFZQSxFQUNaYyxRQUFTQyxFQUFTTixFQUFLTixHQUN2QlUsV0FBWSxJQUloQlIsRUFBWXRGLEtBQUtpRixHQUduQixPQUFPSyxFQUdULFNBQVNXLEVBQW1CYixHQUMxQixJQUFJYyxFQUFRMUIsU0FBUzJCLGNBQWMsU0FDL0JDLEVBQWFoQixFQUFRZ0IsWUFBYyxHQUV2QyxRQUFnQyxJQUFyQkEsRUFBV0MsTUFBdUIsQ0FDM0MsSUFBSUEsRUFBbUQsS0FFbkRBLElBQ0ZELEVBQVdDLE1BQVFBLEdBUXZCLEdBSkF2RSxPQUFPd0UsS0FBS0YsR0FBWUcsU0FBUSxTQUFVQyxHQUN4Q04sRUFBTU8sYUFBYUQsRUFBS0osRUFBV0ksT0FHUCxtQkFBbkJwQixFQUFRc0IsT0FDakJ0QixFQUFRc0IsT0FBT1IsT0FDVixDQUNMLElBQUk1QixFQUFTRCxFQUFVZSxFQUFRc0IsUUFBVSxRQUV6QyxJQUFLcEMsRUFDSCxNQUFNLElBQUlxQyxNQUFNLDJHQUdsQnJDLEVBQU9zQyxZQUFZVixHQUdyQixPQUFPQSxFQWNULElBQ01XLEVBREZDLEdBQ0VELEVBQVksR0FDVCxTQUFpQnBCLEVBQU9zQixHQUU3QixPQURBRixFQUFVcEIsR0FBU3NCLEVBQ1pGLEVBQVVHLE9BQU9DLFNBQVNyRyxLQUFLLFFBSTFDLFNBQVNzRyxFQUFvQmhCLEVBQU9ULEVBQU8wQixFQUFRekIsR0FDakQsSUFBSUMsRUFBTXdCLEVBQVMsR0FBS3pCLEVBQUlFLE1BQVEsVUFBVWpGLE9BQU8rRSxFQUFJRSxNQUFPLE1BQU1qRixPQUFPK0UsRUFBSUMsSUFBSyxLQUFPRCxFQUFJQyxJQUlqRyxHQUFJTyxFQUFNa0IsV0FDUmxCLEVBQU1rQixXQUFXQyxRQUFVUCxFQUFZckIsRUFBT0UsT0FDekMsQ0FDTCxJQUFJMkIsRUFBVTlDLFNBQVMrQyxlQUFlNUIsR0FDbEM2QixFQUFhdEIsRUFBTXNCLFdBRW5CQSxFQUFXL0IsSUFDYlMsRUFBTXVCLFlBQVlELEVBQVcvQixJQUczQitCLEVBQVd0RyxPQUNiZ0YsRUFBTXdCLGFBQWFKLEVBQVNFLEVBQVcvQixJQUV2Q1MsRUFBTVUsWUFBWVUsSUFLeEIsU0FBU0ssRUFBV3pCLEVBQU9kLEVBQVNNLEdBQ2xDLElBQUlDLEVBQU1ELEVBQUlDLElBQ1ZDLEVBQVFGLEVBQUlFLE1BQ1pDLEVBQVlILEVBQUlHLFVBZXBCLEdBYklELEVBQ0ZNLEVBQU1PLGFBQWEsUUFBU2IsR0FFNUJNLEVBQU0wQixnQkFBZ0IsU0FHcEIvQixHQUE2QixvQkFBVHJDLE9BQ3RCbUMsR0FBTyx1REFBdURoRixPQUFPNkMsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVZ0MsTUFBZSxRQU1sSUssRUFBTWtCLFdBQ1JsQixFQUFNa0IsV0FBV0MsUUFBVTFCLE1BQ3RCLENBQ0wsS0FBT08sRUFBTTJCLFlBQ1gzQixFQUFNdUIsWUFBWXZCLEVBQU0yQixZQUcxQjNCLEVBQU1VLFlBQVlwQyxTQUFTK0MsZUFBZTVCLEtBSTlDLElBQUltQyxFQUFZLEtBQ1pDLEVBQW1CLEVBRXZCLFNBQVMvQixFQUFTTixFQUFLTixHQUNyQixJQUFJYyxFQUNBOEIsRUFDQWIsRUFFSixHQUFJL0IsRUFBUTBDLFVBQVcsQ0FDckIsSUFBSUcsRUFBYUYsSUFDakI3QixFQUFRNEIsSUFBY0EsRUFBWTdCLEVBQW1CYixJQUNyRDRDLEVBQVNkLEVBQW9CZ0IsS0FBSyxLQUFNaEMsRUFBTytCLEdBQVksR0FDM0RkLEVBQVNELEVBQW9CZ0IsS0FBSyxLQUFNaEMsRUFBTytCLEdBQVksUUFFM0QvQixFQUFRRCxFQUFtQmIsR0FDM0I0QyxFQUFTTCxFQUFXTyxLQUFLLEtBQU1oQyxFQUFPZCxHQUV0QytCLEVBQVMsWUF4RmIsU0FBNEJqQixHQUUxQixHQUF5QixPQUFyQkEsRUFBTWlDLFdBQ1IsT0FBTyxFQUdUakMsRUFBTWlDLFdBQVdWLFlBQVl2QixHQW1GekJrQyxDQUFtQmxDLElBS3ZCLE9BREE4QixFQUFPdEMsR0FDQSxTQUFxQjJDLEdBQzFCLEdBQUlBLEVBQVEsQ0FDVixHQUFJQSxFQUFPMUMsTUFBUUQsRUFBSUMsS0FBTzBDLEVBQU96QyxRQUFVRixFQUFJRSxPQUFTeUMsRUFBT3hDLFlBQWNILEVBQUlHLFVBQ25GLE9BR0ZtQyxFQUFPdEMsRUFBTTJDLFFBRWJsQixLQUtObEgsRUFBT0UsUUFBVSxTQUFVRSxFQUFNK0UsSUFDL0JBLEVBQVVBLEdBQVcsSUFHUjBDLFdBQTBDLGtCQUF0QjFDLEVBQVEwQyxZQUN2QzFDLEVBQVEwQyxnQkFyT1ksSUFBVDFELElBTVRBLEVBQU82QyxRQUFRdkMsUUFBVUYsVUFBWUEsU0FBUzhELE1BQVE1RCxPQUFPNkQsT0FHeERuRSxJQWdPVCxJQUFJb0UsRUFBa0JyRCxFQUR0QjlFLEVBQU9BLEdBQVEsR0FDMEIrRSxHQUN6QyxPQUFPLFNBQWdCcUQsR0FHckIsR0FGQUEsRUFBVUEsR0FBVyxHQUUyQixtQkFBNUMzRyxPQUFPZSxVQUFVdkMsU0FBU3dDLEtBQUsyRixHQUFuQyxDQUlBLElBQUssSUFBSTVILEVBQUksRUFBR0EsRUFBSTJILEVBQWdCdEgsT0FBUUwsSUFBSyxDQUMvQyxJQUNJNEUsRUFBUVQsRUFES3dELEVBQWdCM0gsSUFFakNrRSxFQUFZVSxHQUFPSyxhQUtyQixJQUZBLElBQUk0QyxFQUFxQnZELEVBQWFzRCxFQUFTckQsR0FFdENqRSxFQUFLLEVBQUdBLEVBQUtxSCxFQUFnQnRILE9BQVFDLElBQU0sQ0FDbEQsSUFFSXdILEVBQVMzRCxFQUZLd0QsRUFBZ0JySCxJQUlLLElBQW5DNEQsRUFBWTRELEdBQVE3QyxhQUN0QmYsRUFBWTRELEdBQVE1QyxVQUVwQmhCLEVBQVk2RCxPQUFPRCxFQUFRLElBSS9CSCxFQUFrQkUsTSwrV0NuT3RCLFFBdkNBLE1BQ0UsWUFBWUcsRUFBTzNJLEdBQ2pCSyxLQUFLdUksT0FBU0QsRUFDZHRJLEtBQUt3SSxPQUFTLEdBQ2R4SSxLQUFLeUksSUFBTTlJLEVBQ1hLLEtBQUswSSxhQUFlLEVBRXRCLFlBQ0UsT0FBTzFJLEtBQUt1SSxPQUdkLFNBQ0UsT0FBT3ZJLEtBQUt5SSxJQUdkLGtCQUNFLE9BQU96SSxLQUFLMEksYUFHZCxVQUFVSixHQUNSdEksS0FBS3VJLE9BQVNELEVBR2hCLFlBQ0UsT0FBT3RJLEtBQUt3SSxPQUdkLFFBQVFHLEdBRU4zSSxLQUFLd0ksT0FBTy9JLEtBQUtrSixHQUNqQjNJLEtBQUswSSxjQUFnQixFQUd2QixXQUFXL0ksR0FFVEssS0FBS3dJLE9BQU9ILE9BQU8xSSxFQUFHLE0sK0JDb0MxQixRQXZFQSxNQUNFLFlBQVkySSxFQUFPTSxFQUFhQyxFQUFVLElBQUtDLEVBQVVDLEVBQVFwSixHQUMvREssS0FBS3VJLE9BQVNELEVBQ2R0SSxLQUFLZ0osYUFBZUosRUFDcEI1SSxLQUFLaUosU0FBV0osRUFDaEI3SSxLQUFLa0osVUFBWUosRUFDakI5SSxLQUFLbUosUUFBVSxRQUNmbkosS0FBS29KLFFBQVVMLEVBQ2YvSSxLQUFLeUksSUFBTTlJLEVBR2IsWUFDRSxPQUFPSyxLQUFLdUksT0FHZCxVQUFVRCxHQUNSdEksS0FBS3VJLE9BQVNELEVBR2hCLGtCQUNFLE9BQU90SSxLQUFLZ0osYUFJZCxhQUNFLE9BQU9oSixLQUFLb0osUUFJZCxTQUNFLE9BQU9wSixLQUFLeUksSUFHZCxnQkFBZ0JHLEdBQ2Q1SSxLQUFLZ0osYUFBZUosRUFHdEIsY0FDRSxPQUFPNUksS0FBS2lKLFNBR2QsWUFBWUosR0FDVjdJLEtBQUtpSixTQUFXSixFQUdsQixlQUNFLE9BQU83SSxLQUFLa0osVUFHZCxhQUFhSixHQUNYOUksS0FBS2tKLFVBQVlKLEVBR25CLGFBQ0UsT0FBTzlJLEtBQUttSixRQUdkLE9BQU9FLEdBQ0xySixLQUFLeUksSUFBTVksRUFHYixXQUFXQyxHQUNUdEosS0FBS21KLFFBQVVHLEVBR2pCLGtCQUVFLE9BRFcsSUFBSUMsS0FBS3ZKLEtBQUtpSixjQ2pFekJPLEVBQTJCLEdBRy9CLFNBQVNDLEVBQW9CQyxHQUU1QixHQUFHRixFQUF5QkUsR0FDM0IsT0FBT0YsRUFBeUJFLEdBQVU5SixRQUczQyxJQUFJRixFQUFTOEosRUFBeUJFLEdBQVksQ0FDakQvSixHQUFJK0osRUFFSjlKLFFBQVMsSUFPVixPQUhBK0osRUFBb0JELEdBQVVoSyxFQUFRQSxFQUFPRSxRQUFTNkosR0FHL0MvSixFQUFPRSxRQ25CZjZKLEVBQW9CcEgsRUFBSzNDLElBQ3hCLElBQUlrSyxFQUFTbEssR0FBVUEsRUFBT21LLFdBQzdCLElBQU1uSyxFQUFnQixRQUN0QixJQUFNQSxFQUVQLE9BREErSixFQUFvQkssRUFBRUYsRUFBUSxDQUFFRyxFQUFHSCxJQUM1QkEsR0NMUkgsRUFBb0JLLEVBQUksQ0FBQ2xLLEVBQVNvSyxLQUNqQyxJQUFJLElBQUkvRCxLQUFPK0QsRUFDWFAsRUFBb0J0SCxFQUFFNkgsRUFBWS9ELEtBQVN3RCxFQUFvQnRILEVBQUV2QyxFQUFTcUcsSUFDNUUxRSxPQUFPMEksZUFBZXJLLEVBQVNxRyxFQUFLLENBQUVpRSxZQUFZLEVBQU1DLElBQUtILEVBQVcvRCxNQ0ozRXdELEVBQW9CVyxFQUFJLFdBQ3ZCLEdBQTBCLGlCQUFmQyxXQUF5QixPQUFPQSxXQUMzQyxJQUNDLE9BQU9ySyxNQUFRLElBQUlzSyxTQUFTLGNBQWIsR0FDZCxNQUFPL0YsR0FDUixHQUFzQixpQkFBWEosT0FBcUIsT0FBT0EsUUFMakIsR0NBeEJzRixFQUFvQnRILEVBQUksQ0FBQ2dELEVBQUtvRixJQUFTaEosT0FBT2UsVUFBVWtJLGVBQWVqSSxLQUFLNEMsRUFBS29GLEcsTUNBakYsSUFBSUUsRUFDQWhCLEVBQW9CVyxFQUFFTSxnQkFBZUQsRUFBWWhCLEVBQW9CVyxFQUFFTyxTQUFXLElBQ3RGLElBQUkxRyxFQUFXd0YsRUFBb0JXLEVBQUVuRyxTQUNyQyxJQUFLd0csR0FBYXhHLElBQ2JBLEVBQVMyRyxnQkFDWkgsRUFBWXhHLEVBQVMyRyxjQUFjQyxNQUMvQkosR0FBVyxDQUNmLElBQUlLLEVBQVU3RyxFQUFTOEcscUJBQXFCLFVBQ3pDRCxFQUFRbkssU0FBUThKLEVBQVlLLEVBQVFBLEVBQVFuSyxPQUFTLEdBQUdrSyxLQUs3RCxJQUFLSixFQUFXLE1BQU0sSUFBSXJFLE1BQU0seURBQ2hDcUUsRUFBWUEsRUFBVU8sUUFBUSxPQUFRLElBQUlBLFFBQVEsUUFBUyxJQUFJQSxRQUFRLFlBQWEsS0FDcEZ2QixFQUFvQndCLEVBQUlSLEcsd0NDUFgsSUFBSSxJQUxILENBRWQsT0FBaUIsT0FDakIsV0FBb0IsSUFNTCxXQUFmLE1DWk1TLEVBQVUsU0FDVkMsRUFBTyxTQUNQQyxFQUFpQm5ILFNBQVMyQixjQUFjLE9BQzlDd0YsRUFBZWxGLGFBQWEsS0FBTSxtQkFFbEMsTUFBTW1GLEVBQXFCQyxhQUFhQyxRQUFRLGdCQUFrQmxJLEtBQUttSSxNQUFNRixhQUFhQyxRQUFRLGlCQUFtQixHQUMvR0UsRUFBc0JILGFBQWFDLFFBQVEsaUJBQW1CbEksS0FBS21JLE1BQU1GLGFBQWFDLFFBQVEsa0JBQW9CLEVBRWxIRyxFQUFjLENBQUNDLEVBQU1oTSxLQUN6QixJQUFJaU0sRUFBTSxFQUNOQyxFQUFNRixFQUFNaEwsT0FBUyxFQUNyQkwsRUFBSXdMLEtBQUtDLE9BQU9ILEVBQU1DLEdBQU8sR0FDN0JHLEdBQVEsRUFDWixLQUFPSixHQUFPQyxJQUFRRyxHQUNwQkEsRUFBUUwsRUFBTXJMLEdBQUdYLEtBQU9BLEVBQ25CcU0sSUFDQ0wsRUFBTXJMLEdBQUdYLEdBQUtBLEVBQ2hCa00sRUFBTXZMLEVBQUksRUFFVnNMLEVBQU10TCxFQUFJLEVBRVpBLEVBQUl3TCxLQUFLQyxPQUFPSCxFQUFNQyxHQUFPLElBR2pDLE9BQU92TCxHQXFCSDJMLEVBQW1CQyxJQUN2QixNQUFNNUQsRUFBUTRELEVBQVEzRCxPQUNoQkssRUFBY3NELEVBQVFsRCxhQUN0QkgsRUFBVXFELEVBQVFqRCxTQUNsQkgsRUFBV29ELEVBQVFoRCxVQUNuQkksRUFBUzRDLEVBQVEvQyxRQUNqQkosRUFBU21ELEVBQVE5QyxRQUNqQnpKLEVBQUt1TSxFQUFRekQsSUFFYkUsRUFBTyxJQUFJd0MsRUFBSzdDLEVBQU9NLEVBQWFDLEVBQVNDLEVBQVVDLEVBQVFwSixHQUdyRSxPQUZBZ0osRUFBS1csT0FBU0EsRUFFUFgsR0FtQkh3RCxFQUFlZCxFQUFtQnBMLEtBQU1tTSxHQWhCZixDQUFDRixJQUM5QixNQUFNNUQsRUFBUTRELEVBQVEzRCxPQUNoQjVJLEVBQUt1TSxFQUFRekQsSUFDYjRELEVBQVFILEVBQVExRCxPQUVoQjhELEVBQVUsSUFBSXBCLEVBQVE1QyxFQUFPM0ksR0FFbkMsSUFBSSxJQUFJVyxFQUFJLEVBQUlBLEVBQUkrTCxFQUFNMUwsT0FBUUwsR0FBSyxFQUFHLENBQ3hDLElBQUlpTSxFQUFhTixFQUFnQkksRUFBTS9MLElBQ3ZDaU0sRUFBVzVNLEdBQUtXLEVBQ2hCZ00sRUFBUUUsUUFBUUQsR0FHbEIsT0FBT0QsR0FHdURHLENBQXVCTCxLQUN2Rk0sUUFBUUMsSUFBSSxZQUNaLElBQUlDLEVBQWdCQyxTQUFTcEIsRywrQkM5RWQsU0FBU3FCLEVBQWFDLEVBQVVDLEdBQzdDLEdBQUlBLEVBQUtyTSxPQUFTb00sRUFDaEIsTUFBTSxJQUFJakssVUFBVWlLLEVBQVcsYUFBZUEsRUFBVyxFQUFJLElBQU0sSUFBTSx1QkFBeUJDLEVBQUtyTSxPQUFTLFlDOEJyRyxTQUFTc00sRUFBT0MsR0FDN0JKLEVBQWEsRUFBR0ssV0FDaEIsSUFBSUMsRUFBUzdMLE9BQU9lLFVBQVV2QyxTQUFTd0MsS0FBSzJLLEdBRTVDLE9BQUlBLGFBQW9CM0QsTUFBNEIsaUJBQWIyRCxHQUFvQyxrQkFBWEUsRUFFdkQsSUFBSTdELEtBQUsyRCxFQUFTRyxXQUNJLGlCQUFiSCxHQUFvQyxvQkFBWEUsRUFDbEMsSUFBSTdELEtBQUsyRCxJQUVTLGlCQUFiQSxHQUFvQyxvQkFBWEUsR0FBb0Qsb0JBQVpWLFVBRTNFQSxRQUFRWSxLQUFLLG9KQUViWixRQUFRWSxNQUFLLElBQUlsSCxPQUFRbUgsUUFHcEIsSUFBSWhFLEtBQUtpRSxNQ1ZMLFNBQVNDLEVBQVdDLEVBQWVDLEdBQ2hEYixFQUFhLEVBQUdLLFdBQ2hCLElBQUlTLEVBQVdYLEVBQU9TLEdBQ2xCRyxFQUFZWixFQUFPVSxHQUNuQkcsRUFBT0YsRUFBU1AsVUFBWVEsRUFBVVIsVUFFMUMsT0FBSVMsRUFBTyxHQUNELEVBQ0NBLEVBQU8sRUFDVCxFQUVBQSxFQ3RCSSxTQUFTQyxFQUEyQkwsRUFBZUMsR0FDaEViLEVBQWEsRUFBR0ssV0FDaEIsSUFBSVMsRUFBV1gsRUFBT1MsR0FDbEJHLEVBQVlaLEVBQU9VLEdBQ25CSyxFQUFXSixFQUFTSyxjQUFnQkosRUFBVUksY0FDOUNDLEVBQVlOLEVBQVNPLFdBQWFOLEVBQVVNLFdBQ2hELE9BQWtCLEdBQVhILEVBQWdCRSxFQ1BWLFNBQVNFLEVBQW1CVixFQUFlQyxHQUN4RGIsRUFBYSxFQUFHSyxXQUNoQixJQUFJUyxFQUFXWCxFQUFPUyxHQUNsQkcsRUFBWVosRUFBT1UsR0FDbkJVLEVBQU9aLEVBQVdHLEVBQVVDLEdBQzVCUyxFQUFheEMsS0FBS3lDLElBQUlSLEVBQTJCSCxFQUFVQyxJQUMvREQsRUFBU1ksU0FBU1osRUFBU08sV0FBYUUsRUFBT0MsR0FHL0MsSUFBSUcsRUFBcUJoQixFQUFXRyxFQUFVQyxNQUFnQlEsRUFDMUQxSixFQUFTMEosR0FBUUMsRUFBYUcsR0FFbEMsT0FBa0IsSUFBWDlKLEVBQWUsRUFBSUEsRUNWYixTQUFTK0osRUFBeUJoQixFQUFlQyxHQUM5RGIsRUFBYSxFQUFHSyxXQUNoQixJQUFJUyxFQUFXWCxFQUFPUyxHQUNsQkcsRUFBWVosRUFBT1UsR0FDdkIsT0FBT0MsRUFBU1AsVUFBWVEsRUFBVVIsVUNKekIsU0FBU3NCLEVBQW9CakIsRUFBZUMsR0FDekRiLEVBQWEsRUFBR0ssV0FDaEIsSUFBSVcsRUFBT1ksRUFBeUJoQixFQUFlQyxHQUFrQixJQUNyRSxPQUFPRyxFQUFPLEVBQUloQyxLQUFLQyxNQUFNK0IsR0FBUWhDLEtBQUs4QyxLQUFLZCxHQ2hDakQsSUFBSWUsRUFBdUIsQ0FDekJDLGlCQUFrQixDQUNoQkMsSUFBSyxxQkFDTEMsTUFBTywrQkFFVEMsU0FBVSxDQUNSRixJQUFLLFdBQ0xDLE1BQU8scUJBRVRFLFlBQWEsZ0JBQ2JDLGlCQUFrQixDQUNoQkosSUFBSyxxQkFDTEMsTUFBTywrQkFFVEksU0FBVSxDQUNSTCxJQUFLLFdBQ0xDLE1BQU8scUJBRVRLLFlBQWEsQ0FDWE4sSUFBSyxlQUNMQyxNQUFPLHlCQUVUTSxPQUFRLENBQ05QLElBQUssU0FDTEMsTUFBTyxtQkFFVE8sTUFBTyxDQUNMUixJQUFLLFFBQ0xDLE1BQU8sa0JBRVRRLFlBQWEsQ0FDWFQsSUFBSyxlQUNMQyxNQUFPLHlCQUVUUyxPQUFRLENBQ05WLElBQUssU0FDTEMsTUFBTyxtQkFFVFUsYUFBYyxDQUNaWCxJQUFLLGdCQUNMQyxNQUFPLDBCQUVUVyxRQUFTLENBQ1BaLElBQUssVUFDTEMsTUFBTyxvQkFFVFksWUFBYSxDQUNYYixJQUFLLGVBQ0xDLE1BQU8seUJBRVRhLE9BQVEsQ0FDTmQsSUFBSyxTQUNMQyxNQUFPLG1CQUVUYyxXQUFZLENBQ1ZmLElBQUssY0FDTEMsTUFBTyx3QkFFVGUsYUFBYyxDQUNaaEIsSUFBSyxnQkFDTEMsTUFBTywyQkM1REksU0FBU2dCLEVBQWtCaEQsR0FDeEMsT0FBTyxTQUFVaUQsR0FDZixJQUFJcEwsRUFBVW9MLEdBQWdCLEdBQzFCQyxFQUFRckwsRUFBUXFMLE1BQVFDLE9BQU90TCxFQUFRcUwsT0FBU2xELEVBQUtvRCxhQUV6RCxPQURhcEQsRUFBS3FELFFBQVFILElBQVVsRCxFQUFLcUQsUUFBUXJELEVBQUtvRCxlQ0gxRCxJQ0Q0Q3BELEVEbUJ4Q3NELEVBQWEsQ0FDZkMsS0FBTVAsRUFBa0IsQ0FDdEJLLFFBcEJjLENBQ2hCRyxLQUFNLG1CQUNOQyxLQUFNLGFBQ05DLE9BQVEsV0FDUkMsTUFBTyxjQWlCTFAsYUFBYyxTQUVoQlEsS0FBTVosRUFBa0IsQ0FDdEJLLFFBbEJjLENBQ2hCRyxLQUFNLGlCQUNOQyxLQUFNLGNBQ05DLE9BQVEsWUFDUkMsTUFBTyxVQWVMUCxhQUFjLFNBRWhCUyxTQUFVYixFQUFrQixDQUMxQkssUUFoQmtCLENBQ3BCRyxLQUFNLHlCQUNOQyxLQUFNLHlCQUNOQyxPQUFRLHFCQUNSQyxNQUFPLHNCQWFMUCxhQUFjLFVFOUJkVSxFQUF1QixDQUN6QkMsU0FBVSxxQkFDVkMsVUFBVyxtQkFDWEMsTUFBTyxlQUNQQyxTQUFVLGtCQUNWQyxTQUFVLGNBQ1ZuQyxNQUFPLEtDTk0sU0FBU29DLEVBQWdCcEUsR0FDdEMsT0FBTyxTQUFVcUUsRUFBWXBCLEdBQzNCLElBRUlxQixFQUZBek0sRUFBVW9MLEdBQWdCLEdBSTlCLEdBQWdCLGdCQUhGcEwsRUFBUTBNLFFBQVVwQixPQUFPdEwsRUFBUTBNLFNBQVcsZUFHMUJ2RSxFQUFLd0UsaUJBQWtCLENBQ3JELElBQUlwQixFQUFlcEQsRUFBS3lFLHdCQUEwQnpFLEVBQUtvRCxhQUNuREYsRUFBUXJMLEVBQVFxTCxNQUFRQyxPQUFPdEwsRUFBUXFMLE9BQVNFLEVBQ3BEa0IsRUFBY3RFLEVBQUt3RSxpQkFBaUJ0QixJQUFVbEQsRUFBS3dFLGlCQUFpQnBCLE9BQy9ELENBQ0wsSUFBSXNCLEVBQWdCMUUsRUFBS29ELGFBRXJCdUIsRUFBUzlNLEVBQVFxTCxNQUFRQyxPQUFPdEwsRUFBUXFMLE9BQVNsRCxFQUFLb0QsYUFFMURrQixFQUFjdEUsRUFBSzRFLE9BQU9ELElBQVczRSxFQUFLNEUsT0FBT0YsR0FJbkQsT0FBT0osRUFES3RFLEVBQUs2RSxpQkFBbUI3RSxFQUFLNkUsaUJBQWlCUixHQUFjQSxJQ2xCN0QsU0FBU1MsRUFBYTlFLEdBQ25DLE9BQU8sU0FBVStFLEVBQWE5QixHQUM1QixJQUFJK0IsRUFBUzdCLE9BQU80QixHQUNoQmxOLEVBQVVvTCxHQUFnQixHQUMxQkMsRUFBUXJMLEVBQVFxTCxNQUNoQitCLEVBQWUvQixHQUFTbEQsRUFBS2tGLGNBQWNoQyxJQUFVbEQsRUFBS2tGLGNBQWNsRixFQUFLbUYsbUJBQzdFQyxFQUFjSixFQUFPSyxNQUFNSixHQUUvQixJQUFLRyxFQUNILE9BQU8sS0FHVCxJQUVJcFEsRUFGQXNRLEVBQWdCRixFQUFZLEdBQzVCRyxFQUFnQnJDLEdBQVNsRCxFQUFLdUYsY0FBY3JDLElBQVVsRCxFQUFLdUYsY0FBY3ZGLEVBQUt3RixtQkFlbEYsT0FYRXhRLEVBRG9ELG1CQUFsRFQsT0FBT2UsVUFBVXZDLFNBQVN3QyxLQUFLZ1EsR0EyQnZDLFNBQW1CNUcsRUFBTzhHLEdBQ3hCLElBQUssSUFBSXhNLEVBQU0sRUFBR0EsRUFBTTBGLEVBQU1oTCxPQUFRc0YsSUFDcEMsR0FBYzBGLEVBQU0xRixHQTNCRHJELEtBQUswUCxHQTRCdEIsT0FBT3JNLEVBN0JDeU0sQ0FBVUgsR0FrQnhCLFNBQWlCSSxFQUFRRixHQUN2QixJQUFLLElBQUl4TSxLQUFPME0sRUFDZCxHQUFJQSxFQUFPbkksZUFBZXZFLElBQWtCME0sRUFBTzFNLEdBZmhDckQsS0FBSzBQLEdBZ0J0QixPQUFPck0sRUFqQkMyTSxDQUFRTCxHQUtsQnZRLEVBQVFnTCxFQUFLNkYsY0FBZ0I3RixFQUFLNkYsY0FBYzdRLEdBQVNBLEVBRWxELENBQ0xBLE1BRkZBLEVBQVE2QyxFQUFRZ08sY0FBZ0JoTyxFQUFRZ08sY0FBYzdRLEdBQVNBLEVBRzdEOFEsS0FBTWQsRUFBT3hQLE1BQU04UCxFQUFjM1IsVUNEdkMsUUFkYSxDQUNYb1MsS0FBTSxRQUNOQyxlUDhDYSxTQUF3QkMsRUFBT2hPLEVBQU9KLEdBRW5ELElBQUlGLEVBVUosT0FYQUUsRUFBVUEsR0FBVyxHQUluQkYsRUFEeUMsaUJBQWhDa0ssRUFBcUJvRSxHQUNyQnBFLEVBQXFCb0UsR0FDWCxJQUFWaE8sRUFDQTRKLEVBQXFCb0UsR0FBT2xFLElBRTVCRixFQUFxQm9FLEdBQU9qRSxNQUFNaEUsUUFBUSxZQUFhL0YsR0FHOURKLEVBQVFxTyxVQUNOck8sRUFBUXNPLFdBQWEsRUFDaEIsTUFBUXhPLEVBRVJBLEVBQVMsT0FJYkEsR09qRVAyTCxXTGVGLEVLZEU4QyxlSFhhLFNBQXdCSCxFQUFPSSxFQUFPQyxFQUFXQyxHQUM5RCxPQUFPekMsRUFBcUJtQyxJR1c1Qk8sU0NvR2EsQ0FDYkMsY0E5QkYsU0FBdUJDLEVBQWFDLEdBQ2xDLElBQUlDLEVBQVNDLE9BQU9ILEdBVWhCSSxFQUFTRixFQUFTLElBRXRCLEdBQUlFLEVBQVMsSUFBTUEsRUFBUyxHQUMxQixPQUFRQSxFQUFTLElBQ2YsS0FBSyxFQUNILE9BQU9GLEVBQVMsS0FFbEIsS0FBSyxFQUNILE9BQU9BLEVBQVMsS0FFbEIsS0FBSyxFQUNILE9BQU9BLEVBQVMsS0FJdEIsT0FBT0EsRUFBUyxNQUtoQkcsSUFBSzNDLEVBQWdCLENBQ25CUSxPQTFIWSxDQUNkb0MsT0FBUSxDQUFDLElBQUssS0FDZEMsWUFBYSxDQUFDLEtBQU0sTUFDcEJDLEtBQU0sQ0FBQyxnQkFBaUIsZ0JBd0h0QjlELGFBQWMsU0FFaEIrRCxRQUFTL0MsRUFBZ0IsQ0FDdkJRLE9BekhnQixDQUNsQm9DLE9BQVEsQ0FBQyxJQUFLLElBQUssSUFBSyxLQUN4QkMsWUFBYSxDQUFDLEtBQU0sS0FBTSxLQUFNLE1BQ2hDQyxLQUFNLENBQUMsY0FBZSxjQUFlLGNBQWUsZ0JBdUhsRDlELGFBQWMsT0FDZHlCLGlCQUFrQixTQUFVc0MsR0FDMUIsT0FBT04sT0FBT00sR0FBVyxLQUc3QkMsTUFBT2hELEVBQWdCLENBQ3JCUSxPQXZIYyxDQUNoQm9DLE9BQVEsQ0FBQyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssS0FDaEVDLFlBQWEsQ0FBQyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sT0FDM0ZDLEtBQU0sQ0FBQyxVQUFXLFdBQVksUUFBUyxRQUFTLE1BQU8sT0FBUSxPQUFRLFNBQVUsWUFBYSxVQUFXLFdBQVksYUFxSG5IOUQsYUFBYyxTQUVoQmlFLElBQUtqRCxFQUFnQixDQUNuQlEsT0F0SFksQ0FDZG9DLE9BQVEsQ0FBQyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxLQUN2Q3JELE1BQU8sQ0FBQyxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxNQUM1Q3NELFlBQWEsQ0FBQyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxPQUN4REMsS0FBTSxDQUFDLFNBQVUsU0FBVSxVQUFXLFlBQWEsV0FBWSxTQUFVLGFBbUh2RTlELGFBQWMsU0FFaEJrRSxVQUFXbEQsRUFBZ0IsQ0FDekJRLE9BcEhrQixDQUNwQm9DLE9BQVEsQ0FDTk8sR0FBSSxJQUNKQyxHQUFJLElBQ0pDLFNBQVUsS0FDVkMsS0FBTSxJQUNOQyxRQUFTLFVBQ1RDLFVBQVcsWUFDWEMsUUFBUyxVQUNUQyxNQUFPLFNBRVRiLFlBQWEsQ0FDWE0sR0FBSSxLQUNKQyxHQUFJLEtBQ0pDLFNBQVUsV0FDVkMsS0FBTSxPQUNOQyxRQUFTLFVBQ1RDLFVBQVcsWUFDWEMsUUFBUyxVQUNUQyxNQUFPLFNBRVRaLEtBQU0sQ0FDSkssR0FBSSxPQUNKQyxHQUFJLE9BQ0pDLFNBQVUsV0FDVkMsS0FBTSxPQUNOQyxRQUFTLFVBQ1RDLFVBQVcsWUFDWEMsUUFBUyxVQUNUQyxNQUFPLFVBd0ZQMUUsYUFBYyxPQUNkb0IsaUJBdEY0QixDQUM5QndDLE9BQVEsQ0FDTk8sR0FBSSxJQUNKQyxHQUFJLElBQ0pDLFNBQVUsS0FDVkMsS0FBTSxJQUNOQyxRQUFTLGlCQUNUQyxVQUFXLG1CQUNYQyxRQUFTLGlCQUNUQyxNQUFPLFlBRVRiLFlBQWEsQ0FDWE0sR0FBSSxLQUNKQyxHQUFJLEtBQ0pDLFNBQVUsV0FDVkMsS0FBTSxPQUNOQyxRQUFTLGlCQUNUQyxVQUFXLG1CQUNYQyxRQUFTLGlCQUNUQyxNQUFPLFlBRVRaLEtBQU0sQ0FDSkssR0FBSSxPQUNKQyxHQUFJLE9BQ0pDLFNBQVUsV0FDVkMsS0FBTSxPQUNOQyxRQUFTLGlCQUNUQyxVQUFXLG1CQUNYQyxRQUFTLGlCQUNUQyxNQUFPLGFBMERQckQsdUJBQXdCLFVENUgxQlksTUVrQ1UsQ0FDVm9CLGVOeEQwQ3pHLEVNd0RQLENBQ2pDaUYsYUF2RDRCLHdCQXdENUI4QyxhQXZENEIsT0F3RDVCbEMsY0FBZSxTQUFVN1EsR0FDdkIsT0FBTzZLLFNBQVM3SyxFQUFPLE1OM0RwQixTQUFVK1AsRUFBYTlCLEdBQzVCLElBQUkrQixFQUFTN0IsT0FBTzRCLEdBQ2hCbE4sRUFBVW9MLEdBQWdCLEdBQzFCbUMsRUFBY0osRUFBT0ssTUFBTXJGLEVBQUtpRixjQUVwQyxJQUFLRyxFQUNILE9BQU8sS0FHVCxJQUFJRSxFQUFnQkYsRUFBWSxHQUM1QjRDLEVBQWNoRCxFQUFPSyxNQUFNckYsRUFBSytILGNBRXBDLElBQUtDLEVBQ0gsT0FBTyxLQUdULElBQUloVCxFQUFRZ0wsRUFBSzZGLGNBQWdCN0YsRUFBSzZGLGNBQWNtQyxFQUFZLElBQU1BLEVBQVksR0FFbEYsTUFBTyxDQUNMaFQsTUFGRkEsRUFBUTZDLEVBQVFnTyxjQUFnQmhPLEVBQVFnTyxjQUFjN1EsR0FBU0EsRUFHN0Q4USxLQUFNZCxFQUFPeFAsTUFBTThQLEVBQWMzUixXTTBDckNvVCxJQUFLakMsRUFBYSxDQUNoQkksY0E1RG1CLENBQ3JCOEIsT0FBUSxVQUNSQyxZQUFhLDZEQUNiQyxLQUFNLDhEQTBESi9CLGtCQUFtQixPQUNuQkksY0F6RG1CLENBQ3JCMEMsSUFBSyxDQUFDLE1BQU8sWUF5RFh6QyxrQkFBbUIsUUFFckIyQixRQUFTckMsRUFBYSxDQUNwQkksY0ExRHVCLENBQ3pCOEIsT0FBUSxXQUNSQyxZQUFhLFlBQ2JDLEtBQU0sa0NBd0RKL0Isa0JBQW1CLE9BQ25CSSxjQXZEdUIsQ0FDekIwQyxJQUFLLENBQUMsS0FBTSxLQUFNLEtBQU0sT0F1RHRCekMsa0JBQW1CLE1BQ25CSyxjQUFlLFNBQVUzTixHQUN2QixPQUFPQSxFQUFRLEtBR25Ca1AsTUFBT3RDLEVBQWEsQ0FDbEJJLGNBM0RxQixDQUN2QjhCLE9BQVEsZUFDUkMsWUFBYSxzREFDYkMsS0FBTSw2RkF5REovQixrQkFBbUIsT0FDbkJJLGNBeERxQixDQUN2QnlCLE9BQVEsQ0FBQyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sT0FDdEZpQixJQUFLLENBQUMsT0FBUSxNQUFPLFFBQVMsT0FBUSxRQUFTLFFBQVMsUUFBUyxPQUFRLE1BQU8sTUFBTyxNQUFPLFFBdUQ1RnpDLGtCQUFtQixRQUVyQjZCLElBQUt2QyxFQUFhLENBQ2hCSSxjQXhEbUIsQ0FDckI4QixPQUFRLFlBQ1JyRCxNQUFPLDJCQUNQc0QsWUFBYSxrQ0FDYkMsS0FBTSxnRUFxREovQixrQkFBbUIsT0FDbkJJLGNBcERtQixDQUNyQnlCLE9BQVEsQ0FBQyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxPQUNuRGlCLElBQUssQ0FBQyxPQUFRLE1BQU8sT0FBUSxNQUFPLE9BQVEsTUFBTyxTQW1EakR6QyxrQkFBbUIsUUFFckI4QixVQUFXeEMsRUFBYSxDQUN0QkksY0FwRHlCLENBQzNCOEIsT0FBUSw2REFDUmlCLElBQUssa0ZBbURIOUMsa0JBQW1CLE1BQ25CSSxjQWxEeUIsQ0FDM0IwQyxJQUFLLENBQ0hWLEdBQUksTUFDSkMsR0FBSSxNQUNKQyxTQUFVLE9BQ1ZDLEtBQU0sT0FDTkMsUUFBUyxXQUNUQyxVQUFXLGFBQ1hDLFFBQVMsV0FDVEMsTUFBTyxXQTBDUHRDLGtCQUFtQixTRnhFckIzTixRQUFTLENBQ1BxUSxhQUFjLEVBR2RDLHNCQUF1QixJR3pCWixTQUFTQyxFQUFZQyxHQUNsQyxPQ0ZhLFNBQWdCdFIsRUFBUXNSLEdBQ3JDLEdBQWMsTUFBVnRSLEVBQ0YsTUFBTSxJQUFJakIsVUFBVSxpRUFLdEIsSUFBSyxJQUFJd1MsS0FGVEQsRUFBY0EsR0FBZSxHQUd2QkEsRUFBWTdLLGVBQWU4SyxLQUM3QnZSLEVBQU91UixHQUFZRCxFQUFZQyxJQUluQyxPQUFPdlIsRURYQSxDQUFPLEdBQUlzUixHRUZwQixJQUFJRSxFQUF5QixJQUU3QixTQUFTQyxFQUF3QmpGLEdBQy9CLE9BQU9BLEVBQUtsRCxVQUFZa0ksRUFlWCxTQUFTRSxFQUFnQ0MsR0FDdEQsSUFBSW5GLEVBQU8sSUFBSWhILEtBQUttTSxFQUFVckksV0FDMUJzSSxFQUFxQjdKLEtBQUs4QyxLQUFLMkIsRUFBS3FGLHFCQUN4Q3JGLEVBQUtzRixXQUFXLEVBQUcsR0FDbkIsSUFDSUMsRUFEdUJILEVBQXFCLEdBQ2VKLEVBQXlCQyxFQUF3QmpGLElBQVNnRixFQUF5QkMsRUFBd0JqRixHQUMxSyxPQUFPb0YsRUFBcUJKLEVBQXlCTyxFQ2hCdkQsSUFBSUMsRUFBaUIsS0FFakJDLEVBQW1CLE1BK0dSLFNBQVMsRUFBZU4sRUFBV08sRUFBZWhHLEdBQy9EbkQsRUFBYSxFQUFHSyxXQUNoQixJQUFJdEksRUFBVW9MLEdBQWdCLEdBQzFCaUcsRUFBU3JSLEVBQVFxUixRQUFVLEVBRS9CLElBQUtBLEVBQU9sRCxlQUNWLE1BQU0sSUFBSW1ELFdBQVcsK0NBR3ZCLElBQUloRCxFQUFhMUYsRUFBV2lJLEVBQVdPLEdBRXZDLEdBQUlHLE1BQU1qRCxHQUNSLE1BQU0sSUFBSWdELFdBQVcsc0JBR3ZCLElBR0l2SSxFQUNBQyxFQUpBd0ksRUFBa0JqQixFQUFZdlEsR0FDbEN3UixFQUFnQm5ELFVBQVl4TSxRQUFRN0IsRUFBUXFPLFdBQzVDbUQsRUFBZ0JsRCxXQUFhQSxFQUl6QkEsRUFBYSxHQUNmdkYsRUFBV1gsRUFBT2dKLEdBQ2xCcEksRUFBWVosRUFBT3lJLEtBRW5COUgsRUFBV1gsRUFBT3lJLEdBQ2xCN0gsRUFBWVosRUFBT2dKLElBR3JCLElBR0lLLEVBSEFDLEVBQVU1SCxFQUFvQmQsRUFBV0QsR0FDekM0SSxHQUFtQmYsRUFBZ0M1SCxHQUFhNEgsRUFBZ0M3SCxJQUFhLElBQzdHNkksRUFBVTNLLEtBQUs0SyxPQUFPSCxFQUFVQyxHQUFtQixJQUd2RCxHQUFJQyxFQUFVLEVBQ1osT0FBSTVSLEVBQVE4UixlQUNOSixFQUFVLEVBQ0xMLEVBQU9sRCxlQUFlLG1CQUFvQixFQUFHcUQsR0FDM0NFLEVBQVUsR0FDWkwsRUFBT2xELGVBQWUsbUJBQW9CLEdBQUlxRCxHQUM1Q0UsRUFBVSxHQUNaTCxFQUFPbEQsZUFBZSxtQkFBb0IsR0FBSXFELEdBQzVDRSxFQUFVLEdBQ1pMLEVBQU9sRCxlQUFlLGNBQWUsS0FBTXFELEdBQ3pDRSxFQUFVLEdBQ1pMLEVBQU9sRCxlQUFlLG1CQUFvQixFQUFHcUQsR0FFN0NILEVBQU9sRCxlQUFlLFdBQVksRUFBR3FELEdBRzlCLElBQVpJLEVBQ0tQLEVBQU9sRCxlQUFlLG1CQUFvQixFQUFHcUQsR0FFN0NILEVBQU9sRCxlQUFlLFdBQVl5RCxFQUFTSixHQUlqRCxHQUFJSSxFQUFVLEdBQ25CLE9BQU9QLEVBQU9sRCxlQUFlLFdBQVl5RCxFQUFTSixHQUM3QyxHQUFJSSxFQUFVLEdBQ25CLE9BQU9QLEVBQU9sRCxlQUFlLGNBQWUsRUFBR3FELEdBQzFDLEdBQUlJLEVBQVVWLEVBQWdCLENBQ25DLElBQUlhLEVBQVE5SyxLQUFLNEssTUFBTUQsRUFBVSxJQUNqQyxPQUFPUCxFQUFPbEQsZUFBZSxjQUFlNEQsRUFBT1AsR0FDOUMsR0FBSUksRUFoTG9CLEtBaUw3QixPQUFPUCxFQUFPbEQsZUFBZSxRQUFTLEVBQUdxRCxHQUNwQyxHQUFJSSxFQUFVVCxFQUFrQixDQUNyQyxJQUFJYSxFQUFPL0ssS0FBSzRLLE1BQU1ELEVBQVVWLEdBQ2hDLE9BQU9HLEVBQU9sRCxlQUFlLFFBQVM2RCxFQUFNUixHQUN2QyxHQUFJSSxFQW5MZSxNQXFMeEIsT0FEQUgsRUFBU3hLLEtBQUs0SyxNQUFNRCxFQUFVVCxHQUN2QkUsRUFBT2xELGVBQWUsZUFBZ0JzRCxFQUFRRCxHQUt2RCxJQUZBQyxFQUFTbEksRUFBbUJQLEVBQVdELElBRTFCLEdBQUksQ0FDZixJQUFJa0osRUFBZWhMLEtBQUs0SyxNQUFNRCxFQUFVVCxHQUN4QyxPQUFPRSxFQUFPbEQsZUFBZSxVQUFXOEQsRUFBY1QsR0FFdEQsSUFBSVUsRUFBeUJULEVBQVMsR0FDbENVLEVBQVFsTCxLQUFLQyxNQUFNdUssRUFBUyxJQUVoQyxPQUFJUyxFQUF5QixFQUNwQmIsRUFBT2xELGVBQWUsY0FBZWdFLEVBQU9YLEdBQzFDVSxFQUF5QixFQUMzQmIsRUFBT2xELGVBQWUsYUFBY2dFLEVBQU9YLEdBRTNDSCxFQUFPbEQsZUFBZSxlQUFnQmdFLEVBQVEsRUFBR1gsR0NyRy9DLFNBQVNZLEVBQW9CdkIsRUFBV3pGLEdBRXJELE9BREFuRCxFQUFhLEVBQUdLLFdBQ1QsRUFBZ0J1SSxFQUFXbk0sS0FBSzJOLE1BQU9qSCxHQ3hHaEQsTUFBTWtILEVBQWV4TyxJQUNuQixNQUFNeU8sRUFBV25ULFNBQVMyQixjQUFjLE9BQ3hDd1IsRUFBU2xSLGFBQWEsUUFBUyxhQUMvQmtSLEVBQVNsUixhQUFhLEtBQU0sYUFBYXlDLEVBQUtJLFVBQVVKLEVBQUtoSixNQUc3RCxNQUFNMFgsRUFBY3BULFNBQVMyQixjQUFjLE9BQzNDeVIsRUFBWW5SLGFBQWEsS0FBTSxrQkFBa0J5QyxFQUFLSSxVQUFVSixFQUFLaEosTUFDckUwWCxFQUFZQyxVQUFVQyxJQUFJLGlCQUUxQixNQUFNQyxFQUFrQnZULFNBQVMyQixjQUFjLE9BQy9DNFIsRUFBZ0J0UixhQUFhLFFBQVMsc0JBQ3RDLE1BQU11UixFQUFjeFQsU0FBUzJCLGNBQWMsT0FDM0M2UixFQUFZdlIsYUFBYSxLQUFNLHlCQUF5QnlDLEVBQUtJLFVBQVVKLEVBQUtoSixNQUM1RThYLEVBQVlILFVBQVVDLElBQUksZ0JBQWdCNU8sRUFBS0csV0FBWSxnQkFDM0QsTUFBTTRPLEVBQVl6VCxTQUFTMkIsY0FBYyxNQUN6QzhSLEVBQVV4UixhQUFhLEtBQU0sc0JBQXNCeUMsRUFBS0ksVUFBVUosRUFBS2hKLE1BQ3ZFK1gsRUFBVUMsWUFBY2hQLEVBQUtMLE1BQzdCa1AsRUFBZ0JJLE9BQU9ILEVBQWFDLEdBRXBDLE1BQU1HLEVBQW1CNVQsU0FBUzJCLGNBQWMsT0FDaERpUyxFQUFpQjNSLGFBQWEsUUFBUyx1QkFFdkMsTUFBTTRSLEVBQWM3VCxTQUFTMkIsY0FBYyxRQUMzQ2tTLEVBQVlILFlBQWNWLEVBQW9CdE8sRUFBS29QLGtCQUFrQixDQUFDN0UsV0FBVyxJQUNqRjRFLEVBQVk1UixhQUFhLEtBQU0scUJBQXFCeUMsRUFBS0ksVUFBVUosRUFBS2hKLE1BRXhFLE1BQU1xWSxFQUFnQixJQUFJQyxNQUMxQkQsRUFBYzlSLGFBQWEsTUFBTyxHQUNsQzhSLEVBQWM5UixhQUFhLFFBQVMsaUJBQ3BDOFIsRUFBY0UsUUFBUUMsT0FBU3hQLEVBQUtoSixHQUNwQ3FZLEVBQWNFLFFBQVFFLFdBQWF6UCxFQUFLSSxPQUN4Q2lQLEVBQWNLLGlCQUFpQixTQUFTOVQsR0FBSytULEVBQWUvVCxLQUU1RCxNQUFNZ1UsRUFBa0IsSUFBSU4sTUFDNUJNLEVBQWdCclMsYUFBYSxNQUFPLEdBQ3BDcVMsRUFBZ0JyUyxhQUFhLFFBQVMsaUJBQ3RDcVMsRUFBZ0JMLFFBQVFDLE9BQVN4UCxFQUFLaEosR0FDdEM0WSxFQUFnQkwsUUFBUUUsV0FBYXpQLEVBQUtJLE9BQzFDd1AsRUFBZ0JGLGlCQUFpQixTQUFTOVQsR0FBS2lVLEVBQVdqVSxLQUUxRHNULEVBQWlCRCxPQUFPRSxFQUFhRSxFQUFlTyxHQUVwRCxNQUFNRSxFQUFpQnhVLFNBQVMyQixjQUFjLE9BQzlDNlMsRUFBZXZTLGFBQWEsUUFBUyxxQkFDckN1UyxFQUFlYixPQUFPSixFQUFpQkssR0FHdkMsTUFBTWEsRUFBb0J6VSxTQUFTMkIsY0FBYyxPQUNqRDhTLEVBQWtCeFMsYUFBYSxRQUFTLHdCQUV4QyxNQUFNeVMsRUFBa0IxVSxTQUFTMkIsY0FBYyxRQUMvQytTLEVBQWdCelMsYUFBYSxLQUFNLDRCQUE0QnlDLEVBQUtJLFVBQVVKLEVBQUtoSixNQUNuRmdaLEVBQWdCaEIsWUFBY2hQLEVBQUtDLFlBRW5DLE1BQU1nUSxFQUFhM1UsU0FBUzJCLGNBQWMsUUFDMUNnVCxFQUFXMVMsYUFBYSxLQUFNLHVCQUF1QnlDLEVBQUtJLFVBQVVKLEVBQUtoSixNQUN6RWlaLEVBQVd0QixVQUFVQyxJQUFJLGNBQWUsZUFBZTVPLEVBQUtXLFVBQzVEc1AsRUFBV2pCLFlBQWNoUCxFQUFLVyxPQUU5Qm9QLEVBQWtCZCxPQUFPZSxFQUFpQkMsR0FJMUMsTUFBTUMsRUFBYzVVLFNBQVMyQixjQUFjLE9BQzNDaVQsRUFBWTNTLGFBQWEsS0FBTSxrQkFBa0J5QyxFQUFLSSxVQUFVSixFQUFLaEosTUFDckVrWixFQUFZdkIsVUFBVUMsSUFBSSxnQkFBaUIsUUFFM0MsTUFBTXVCLEVBQXNCN1UsU0FBUzJCLGNBQWMsT0FDbkRrVCxFQUFvQnhCLFVBQVVDLElBQUksMEJBQ2xDLE1BQU13QixFQUFxQjlVLFNBQVMyQixjQUFjLFNBQ2xEbVQsRUFBbUI3UyxhQUFhLE9BQVEsUUFDeEM2UyxFQUFtQjdTLGFBQWEsS0FBTSxtQkFBbUJ5QyxFQUFLSSxVQUFVSixFQUFLaEosTUFDN0VvWixFQUFtQjdTLGFBQWEsUUFBU3lDLEVBQUtMLE9BRTlDLE1BQU0wUSxFQUEyQi9VLFNBQVMyQixjQUFjLFNBQ3hEb1QsRUFBeUI5UyxhQUFhLE9BQVEsUUFDOUM4UyxFQUF5QjlTLGFBQWEsS0FBTSx5QkFBeUJ5QyxFQUFLSSxVQUFVSixFQUFLaEosTUFDekZxWixFQUF5QjlTLGFBQWEsUUFBU3lDLEVBQUtDLGFBRXBELE1BQU1xUSxFQUFtQmhWLFNBQVMyQixjQUFjLFFBQ2hEcVQsRUFBaUIvUyxhQUFhLFFBQVMseUJBQ3ZDLE1BQU1nVCxFQUFvQmpWLFNBQVMyQixjQUFjLFNBQ2pEc1QsRUFBa0J2QixZQUFjLFlBQ2hDdUIsRUFBa0JoVCxhQUFhLE1BQU8sc0JBQXNCeUMsRUFBS0ksVUFBVUosRUFBS2hKLE1BQ2hGLE1BQU13WixFQUFxQmxWLFNBQVMyQixjQUFjLFVBQ2xEdVQsRUFBbUJqVCxhQUFhLEtBQU0sc0JBQXNCeUMsRUFBS0ksVUFBVUosRUFBS2hKLE1BQ2hGLE1BQU15WixFQUFzQm5WLFNBQVMyQixjQUFjLFVBQ25Ed1QsRUFBb0JsVCxhQUFhLFFBQVMsU0FDMUNrVCxFQUFvQnpCLFlBQWMsUUFDbEMsTUFBTTBCLEVBQXNCcFYsU0FBUzJCLGNBQWMsVUFDbkR5VCxFQUFvQm5ULGFBQWEsUUFBUyxVQUMxQ21ULEVBQW9CMUIsWUFBYyxTQUNsQyxNQUFNMkIsRUFBc0JyVixTQUFTMkIsY0FBYyxVQUNuRDBULEVBQW9CcFQsYUFBYSxRQUFTLE9BQzFDb1QsRUFBb0IzQixZQUFjLE1BRWxDd0IsRUFBbUJ2QixPQUFPd0IsRUFBcUJDLEVBQXFCQyxHQUNwRUgsRUFBbUJuWCxNQUFRMkcsRUFBS0csU0FDaENtUSxFQUFpQnJCLE9BQU9zQixFQUFtQkMsR0FHM0MsTUFBTUksRUFBaUJ0VixTQUFTMkIsY0FBYyxRQUM5QzJULEVBQWVyVCxhQUFhLFFBQVMseUJBQ3JDLE1BQU1zVCxFQUFrQnZWLFNBQVMyQixjQUFjLFNBQy9DNFQsRUFBZ0I3QixZQUFjLFVBQzlCNkIsRUFBZ0J0VCxhQUFhLE1BQU8sb0JBQW9CeUMsRUFBS0ksVUFBVUosRUFBS2hKLE1BQzVFLE1BQU04WixFQUFtQnhWLFNBQVMyQixjQUFjLFVBQ2hENlQsRUFBaUJ2VCxhQUFhLEtBQU0sb0JBQW9CeUMsRUFBS0ksVUFBVUosRUFBS2hKLE1BQzVFLE1BQU0rWixFQUFvQnpWLFNBQVMyQixjQUFjLFVBQ2pEOFQsRUFBa0J4VCxhQUFhLFFBQVMsU0FDeEN3VCxFQUFrQi9CLFlBQWMsUUFDaEMsTUFBTWdDLEVBQW9CMVYsU0FBUzJCLGNBQWMsVUFDakQrVCxFQUFrQnpULGFBQWEsUUFBUyxlQUN4Q3lULEVBQWtCaEMsWUFBYyxjQUNoQyxNQUFNaUMsRUFBb0IzVixTQUFTMkIsY0FBYyxVQUNqRGdVLEVBQWtCMVQsYUFBYSxRQUFTLFFBQ3hDMFQsRUFBa0JqQyxZQUFjLE9BRWhDOEIsRUFBaUI3QixPQUFPOEIsRUFBbUJDLEVBQW1CQyxHQUM5REgsRUFBaUJ6WCxNQUFRMkcsRUFBS1csT0FDOUJpUSxFQUFlM0IsT0FBTzRCLEVBQWlCQyxHQUV2QyxNQUFNSSxFQUFlNVYsU0FBUzJCLGNBQWMsUUFDNUNxVCxFQUFpQi9TLGFBQWEsUUFBUyx1QkFDdkMsTUFBTTRULEVBQWdCN1YsU0FBUzJCLGNBQWMsU0FDN0NrVSxFQUFjbkMsWUFBYyxZQUM1Qm1DLEVBQWM1VCxhQUFhLE1BQU8sa0JBQWtCeUMsRUFBS0ksVUFBVUosRUFBS2hKLE1BQ3hFLE1BQU1vYSxFQUFnQjlWLFNBQVMyQixjQUFjLFNBQzdDbVUsRUFBYzdULGFBQWEsT0FBUSxRQUNuQzZULEVBQWM3VCxhQUFhLEtBQU0sa0JBQWtCeUMsRUFBS0ksVUFBVUosRUFBS2hKLE1BQ3ZFa2EsRUFBYWpDLE9BQU9rQyxFQUFlQyxHQUVuQyxNQUFNQyxFQUFzQi9WLFNBQVMyQixjQUFjLE9BQ25Eb1UsRUFBb0I5VCxhQUFhLFFBQVMsMEJBQzFDLE1BQU0rVCxFQUFxQmhXLFNBQVMyQixjQUFjLFVBQ2xEcVUsRUFBbUIvQixRQUFRQyxPQUFTeFAsRUFBS2hKLEdBQ3pDc2EsRUFBbUIvQixRQUFRRSxXQUFhelAsRUFBS0ksT0FDN0NrUixFQUFtQjVCLGlCQUFpQixTQUFVOVQsR0FBTTJWLEVBQWUzVixLQUNuRTBWLEVBQW1CdEMsWUFBYyxTQUVqQyxNQUFNd0MsRUFBcUJsVyxTQUFTMkIsY0FBYyxVQWtCbEQsT0FqQkF1VSxFQUFtQnhDLFlBQWMsU0FDakN3QyxFQUFtQmpDLFFBQVFDLE9BQVN4UCxFQUFLaEosR0FDekN3YSxFQUFtQmpDLFFBQVFFLFdBQWF6UCxFQUFLSSxPQUc3Q29SLEVBQW1COUIsaUJBQWlCLFNBQVU5VCxHQUFLK1QsRUFBZS9ULEtBRWxFeVYsRUFBb0JwQyxPQUFPcUMsRUFBcUJFLEdBRWhEckIsRUFBb0JsQixPQUFPbUIsRUFBb0JDLEVBQTBCQyxFQUFrQk0sRUFBZ0JNLEVBQWNHLEdBR3pIbkIsRUFBWWpCLE9BQU9rQixHQUVuQnpCLEVBQVlPLE9BQU9hLEVBQWdCQyxHQUNuQ3RCLEVBQVNRLE9BQU9QLEVBQWF3QixHQUV0QnpCLEdDaktILEVBQVUsU0FDVixFQUFPLFNBNkJQZ0QsRUFBbUIsS0FDWG5XLFNBQVNDLGNBQWMsa0JBQzdCbEMsTUFBUSxHQUNIaUMsU0FBU0MsY0FBYyxxQkFDN0JvVCxVQUFVK0MsT0FBTyxTQTZDbEJDLEVBQWlCL1YsSUFDckIsSUFBSTVFLEVBQUs0RSxFQUFFUixPQUFPbVUsUUFBUXFDLFVBQ1R0VyxTQUFTQyxjQUFjLGVBQWV2RSxLQUM1Q3FDLE1BQVEsR0FDSWlDLFNBQVNDLGNBQWMscUJBQXFCdkUsS0FDbERxQyxNQUFRLEdBQ0xpQyxTQUFTQyxjQUFjLGtCQUFrQnZFLEtBQy9DcUMsTUFBUSxNQUNYaUMsU0FBU0MsY0FBYyxrQkFBa0J2RSxLQUMvQzJYLFVBQVUrQyxPQUFPLFNBNkJsQjdCLEVBQWNqVSxJQUNsQixJQUFJaVcsRUFBU2pXLEVBQUVSLE9BQU9tVSxRQUFRQyxPQUMxQnBQLEVBQVN4RSxFQUFFUixPQUFPbVUsUUFBUUUsV0FFMUJxQyxFQUFXeFcsU0FBU0MsY0FBYyxjQUFjNkUsS0FBVXlSLEtBQzNDdlcsU0FBU0MsY0FBYyxrQkFBa0I2RSxLQUMvQzdCLFlBQVl1VCxHQUl6QixJQUFJQyxFQUFjaFAsRUFBWVMsRUFBY3BELEdBQ3hDdUQsRUFBVUgsRUFBYXVPLEdBQzNCcE8sRUFBUXFPLFdBQVdILEdBRW5COU4sUUFBUUMsSUFBSSxnQkFBZ0JMLEVBQVFELFNBQ3BDZixhQUFhc1AsUUFBUSxlQUFnQnZYLEtBQUtDLFVBQVU2SSxLQUdoRG1NLEVBQWtCL1QsSUFDdEIsSUFBSWlXLEVBQVNqVyxFQUFFUixPQUFPbVUsUUFBUUMsT0FDMUJwUCxFQUFTeEUsRUFBRVIsT0FBT21VLFFBQVFFLFdBRTFCc0MsRUFBY2hQLEVBQVlTLEVBQWNwRCxHQUN4Q3VELEVBQVVILEVBQWF1TyxHQUN2QkcsRUFBWW5QLEVBQVlZLEVBQVFELE1BQU9tTyxHQUN2QzdSLEVBQU8yRCxFQUFRRCxNQUFNd08sR0FFUjVXLFNBQVNDLGNBQWMsb0JBQW9CNkUsS0FBVXlSLEtBQzNEeFksTUFBUTJHLEVBQUtMLE1BQ0RyRSxTQUFTQyxjQUFjLDBCQUEwQjZFLEtBQVV5UixLQUNqRXhZLE1BQVEyRyxFQUFLQyxZQUNWM0UsU0FBU0MsY0FBYyx1QkFBdUI2RSxLQUFVeVIsS0FDOUR4WSxNQUFRMkcsRUFBS0csU0FDVDdFLFNBQVNDLGNBQWMscUJBQXFCNkUsS0FBVXlSLEtBQzVEeFksTUFBUTJHLEVBQUtXLE9BRUxyRixTQUFTQyxjQUFjLG1CQUFtQjZFLEtBQVV5UixLQUM1RGxELFVBQVUrQyxPQUFPLFFBQ1RwVyxTQUFTQyxjQUFjLG1CQUFtQjZFLEtBQVV5UixLQUM1RGxELFVBQVUrQyxPQUFPLFNBR3pCSCxFQUFrQjNWLElBQ3RCLElBQUlpVyxFQUFTalcsRUFBRVIsT0FBT21VLFFBQVFDLE9BQzFCcFAsRUFBU3hFLEVBQUVSLE9BQU9tVSxRQUFRRSxXQUUxQnNDLEVBQWNoUCxFQUFZUyxFQUFjcEQsR0FDeEN1RCxFQUFVSCxFQUFhdU8sR0FDdkJHLEVBQVluUCxFQUFZWSxFQUFRRCxNQUFPbU8sR0FDdkM3UixFQUFPMkQsRUFBUUQsTUFBTXdPLEdBQ3pCLE1BQU1DLEVBQWVuUyxFQUFLRyxTQUNwQmlTLEVBQWFwUyxFQUFLVyxPQUV4QixJQUFJMFIsRUFBYS9XLFNBQVNDLGNBQWMsb0JBQW9CNkUsS0FBVXlSLEtBQ3RFN1IsRUFBS0wsTUFBUTBTLEVBQVdoWixNQUN4QixJQUFJaVosRUFBbUJoWCxTQUFTQyxjQUFjLDBCQUEwQjZFLEtBQVV5UixLQUNsRjdSLEVBQUtDLFlBQWNxUyxFQUFpQmpaLE1BQ3BDLElBQUlrWixFQUFnQmpYLFNBQVNDLGNBQWMsdUJBQXVCNkUsS0FBVXlSLEtBQzVFN1IsRUFBS0csU0FBV29TLEVBQWNsWixNQUU5QixJQUFJbVosRUFBWWxYLFNBQVNDLGNBQWMsbUJBQW1CNkUsS0FBVXlSLEtBQ3BFN1IsRUFBS0UsUUFBVXNTLEVBQVVuWixNQUV6QixJQUFJb1osRUFBY25YLFNBQVNDLGNBQWMscUJBQXFCNkUsS0FBVXlSLEtBQ3hFN1IsRUFBS1csT0FBUzhSLEVBQVlwWixNQUVMaUMsU0FBU0MsY0FBYyx1QkFBdUI2RSxLQUFVeVIsS0FDaEU3QyxZQUFjaFAsRUFBS0wsTUFFTHJFLFNBQVNDLGNBQWMsNkJBQTZCNkUsS0FBVXlSLEtBQ3RFN0MsWUFBY2hQLEVBQUtDLFlBRXRDLE1BQU15UyxFQUFrQnBYLFNBQVNDLGNBQWMsMEJBQTBCNkUsS0FBVXlSLEtBQ25GYSxFQUFnQi9ELFVBQVUxUSxPQUFPLGdCQUFnQmtVLEtBQ2pETyxFQUFnQi9ELFVBQVVDLElBQUksZ0JBQWdCNU8sRUFBS0csWUFFL0I3RSxTQUFTQyxjQUFjLHNCQUFzQjZFLEtBQVV5UixLQUMvRDdDLFlBQWNWLEVBQW9CdE8sRUFBS29QLGtCQUFrQixDQUFDN0UsV0FBVyxJQUVqRixNQUFNb0ksRUFBZ0JyWCxTQUFTQyxjQUFjLHdCQUF3QjZFLEtBQVV5UixLQUMvRWMsRUFBYzNELFlBQWNoUCxFQUFLVyxPQUNqQ2dTLEVBQWNoRSxVQUFVMVEsT0FBTyxlQUFlbVUsS0FDOUNPLEVBQWNoRSxVQUFVQyxJQUFJLGVBQWU1TyxFQUFLVyxVQUU1QnJGLFNBQVNDLGNBQWMsbUJBQW1CNkUsS0FBVXlSLEtBQzVEbEQsVUFBVStDLE9BQU8sUUFDVHBXLFNBQVNDLGNBQWMsbUJBQW1CNkUsS0FBVXlSLEtBQzVEbEQsVUFBVStDLE9BQU8sUUFDN0IvTyxhQUFhc1AsUUFBUSxlQUFnQnZYLEtBQUtDLFVBQVU2SSxLLCtCQ3hNdEQsTUFBTW9QLEVBQWtCalAsSUFDdEIsTUFBTWtQLEVBQVN2WCxTQUFTMkIsY0FBYyxPQUN0QzRWLEVBQU90VixhQUFhLEtBQU8scUJBQXFCb0csRUFBUTNNLE1BQ3hENmIsRUFBT2xFLFVBQVVDLElBQUkscUJBRXJCLE1BQU1rRSxFQUFleFgsU0FBUzJCLGNBQWMsUUFDNUM2VixFQUFhdlYsYUFBYSxLQUFNLHFCQUFxQm9HLEVBQVEzTSxNQUM3RDhiLEVBQWFuRSxVQUFVQyxJQUFJLGdCQUUzQixNQUFNbUUsRUFBZXpYLFNBQVMyQixjQUFjLFFBQzVDOFYsRUFBYXhWLGFBQWEsS0FBTSxxQkFBcUJvRyxFQUFRM00sTUFDN0QrYixFQUFhcEUsVUFBVUMsSUFBSSxlQUFnQixRQUUzQyxNQUFNb0UsRUFBTTFYLFNBQVMyQixjQUFjLFVBQ25DK1YsRUFBSXpWLGFBQWEsS0FBTSxzQkFBc0JvRyxFQUFRM00sTUFDckRnYyxFQUFJekQsUUFBUXFDLFVBQVlqTyxFQUFRM00sR0FDaENnYyxFQUFJdEQsaUJBQWlCLFNBQVM5VCxHRGxCaEIsQ0FBQ0EsSUFFZixJQUFJNUUsRUFBSzRFLEVBQUVSLE9BQU9tVSxRQUFRcUMsVUFDdEJxQixFQUFhM1gsU0FBU0MsY0FBYyxTQUFTdkUsS0FDN0NrYyxFQUFRNVgsU0FBU0MsY0FBYyxVQUNyQixPQUFWMlgsR0FDRkEsRUFBTXZFLFVBQVUrQyxPQUFPLFNBRXpCdUIsRUFBV3RFLFVBQVUrQyxPQUFPLFVDVU95QixDQUFRdlgsS0FDM0NvWCxFQUFJelYsYUFBYSxRQUFTLFlBQzFCeVYsRUFBSWhFLFlBQWNyTCxFQUFRaEUsTUFFMUIsTUFBTXlULEVBQW1CLElBQUk5RCxNQUM3QjhELEVBQWlCN1YsYUFBYSxNQUFPLEdBQ3JDNlYsRUFBaUI3VixhQUFhLFFBQVMsaUJBQ3ZDNlYsRUFBaUI3RCxRQUFRcUMsVUFBWWpPLEVBQVEzTSxHQUM3Q29jLEVBQWlCMUQsaUJBQWlCLFNBQVM5VCxHRG1CekIsQ0FBQ0EsSUFDbkIsSUFBSTVFLEVBQUs0RSxFQUFFUixPQUFPbVUsUUFBUXFDLFVBQ1R0VyxTQUFTQyxjQUFjLHNCQUFzQnZFLEtBQ3JEMlgsVUFBVStDLE9BQU8sUUFDVHBXLFNBQVNDLGNBQWMsc0JBQXNCdkUsS0FDckQyWCxVQUFVK0MsT0FBTyxTQ3hCc0IyQixDQUFZelgsS0FHNUQsTUFBTTBYLEVBQXFCLElBQUloRSxNQUMvQmdFLEVBQW1CL1YsYUFBYSxNQUFPLEdBQ3ZDK1YsRUFBbUIvVixhQUFhLFFBQVMsaUJBQ3pDK1YsRUFBbUIvRCxRQUFRcUMsVUFBWWpPLEVBQVEzTSxHQUMvQ3NjLEVBQW1CNUQsaUJBQWlCLFNBQVM5VCxHREN6QixDQUFDQSxJQUNyQixJQUFJNUUsRUFBSzRFLEVBQUVSLE9BQU9tVSxRQUFRcUMsVUFDdEIyQixFQUFXalksU0FBU0MsY0FBYyxzQkFBc0J2RSxLQUNqRHNFLFNBQVNDLGNBQWMsU0FDN0JnRCxZQUFZZ1YsR3hCbEJXLEVBQUMvUCxFQUFleE0sS0FDNUMsSUFBSW9FLEVBQVMySCxFQUFZUyxFQUFjeE0sR0FDdkN3TSxFQUFhOUQsT0FBT3RFLEVBQVMsSXdCa0I3Qm9ZLENBQXNCaFEsRUFBYXhNLEdBQ25DK00sUUFBUUMsSUFBSSxnQkFBZ0JSLEtBQzVCYixhQUFhc1AsUUFBUSxlQUFnQnZYLEtBQUtDLFVBQVU2SSxLQ1RGaVEsQ0FBYzdYLEtBR2hFa1gsRUFBYTdELE9BQU8rRCxFQUFLSSxFQUFrQkUsR0FHM0MsTUFBTUksRUFBcUJwWSxTQUFTMkIsY0FBYyxTQUNsRHlXLEVBQW1CblcsYUFBYSxPQUFRLFFBQ3hDbVcsRUFBbUJuVyxhQUFhLEtBQU0sc0JBQXNCb0csRUFBUTNNLE1BQ3BFMGMsRUFBbUJuVyxhQUFhLFFBQVNvRyxFQUFRaEUsT0FHakQsTUFBTWdVLEVBQXFCLElBQUlyRSxNQUMvQnFFLEVBQW1CcFcsYUFBYSxNQUFPLEdBQ3ZDb1csRUFBbUJwVyxhQUFhLFFBQVMsaUJBQ3pDb1csRUFBbUJwRSxRQUFRcUMsVUFBWWpPLEVBQVEzTSxHQUMvQzJjLEVBQW1CakUsaUJBQWlCLFNBQVU5VCxHRGV0QixDQUFDQSxJQUN6QixJQUFJNUUsRUFBSzRFLEVBQUVSLE9BQU9tVSxRQUFRcUMsVUFDMUIsTUFBTWdDLEVBQVF0WSxTQUFTQyxjQUFjLHVCQUF1QnZFLEt4QnpDckMsRUFBQ3dNLEVBQWV4TSxFQUFJcUMsS0FFM0NtSyxFQURhVCxFQUFZUyxFQUFjeE0sSUFDbEIySSxNQUFRdEcsRUFDN0JzSixhQUFhc1AsUUFBUSxlQUFnQnZYLEtBQUtDLFVBQVU2SSxLd0J1Q3BEcVEsQ0FBaUJyUSxFQUFjeE0sRUFBSTRjLEVBQU12YSxPQUMxQmlDLFNBQVNDLGNBQWMsdUJBQXVCdkUsS0FDdERnWSxZQUFjNEUsRUFBTXZhLE1BQ1ZpQyxTQUFTQyxjQUFjLHNCQUFzQnZFLEtBQ3JEMlgsVUFBVStDLE9BQU8sUUFDVHBXLFNBQVNDLGNBQWMsc0JBQXNCdkUsS0FDckQyWCxVQUFVK0MsT0FBTyxTQ3hCMEJvQyxDQUFrQmxZLEtBRXRFLE1BQU1tWSxFQUFxQixJQUFJekUsTUFZL0IsT0FYQXlFLEVBQW1CeFcsYUFBYSxNQUFPLEdBQ3ZDd1csRUFBbUJ4VyxhQUFhLFFBQVMsaUJBQ3pDd1csRUFBbUJ4RSxRQUFRcUMsVUFBWWpPLEVBQVEzTSxHQUMvQytjLEVBQW1CckUsaUJBQWlCLFNBQVM5VCxHREZ6QixDQUFDQSxJQUNyQixJQUFJNUUsRUFBSzRFLEVBQUVSLE9BQU9tVSxRQUFRcUMsVUFDVHRXLFNBQVNDLGNBQWMsc0JBQXNCdkUsS0FDckQyWCxVQUFVK0MsT0FBTyxRQUNUcFcsU0FBU0MsY0FBYyxzQkFBc0J2RSxLQUNyRDJYLFVBQVUrQyxPQUFPLFFBQzFCLE1BQU1rQyxFQUFRdFksU0FBU0MsY0FBYyx1QkFBdUJ2RSxLQUN0RGdkLEVBQVMxWSxTQUFTQyxjQUFjLHVCQUF1QnZFLEtBQzdENGMsRUFBTXZhLE1BQVEyYSxFQUFPaEYsYUNONkJpRixDQUFjclksS0FFaEVtWCxFQUFhOUQsT0FBT3lFLEVBQW9CQyxFQUFvQkksR0FFNURsQixFQUFPNUQsT0FBTzZELEVBQWNDLEdBRTVCdFEsRUFBZXdNLE9Gb0dELENBQUNpRixJQUVmLE1BQU1DLEVBQWE3WSxTQUFTMkIsY0FBYyxPQUMxQ2tYLEVBQVc1VyxhQUFhLFFBQVMsY0FDakM0VyxFQUFXNVcsYUFBYSxLQUFNLFFBQVEyVyxFQUFVbGQsTUFPaEQsTUFBTW9kLEVBQVM5WSxTQUFTMkIsY0FBYyxPQUN0Q21YLEVBQU83VyxhQUFhLFFBQVMsa0JBQzdCLE1BQU04VyxFQUFjL1ksU0FBUzJCLGNBQWMsTUFDM0NvWCxFQUFZOVcsYUFBYSxRQUFTLGdCQUNsQzhXLEVBQVlyRixZQUFja0YsRUFBVXZVLE1BS3BDLE1BQU0yVSxFQUFnQmhaLFNBQVMyQixjQUFjLFVBQzdDcVgsRUFBYy9FLFFBQVFxQyxVQUFZc0MsRUFBVWxkLEdBQzVDc2QsRUFBYzVFLGlCQUFpQixTQUFTOVQsR0FBSytWLEVBQWMvVixLQUUzRDBZLEVBQWMvVyxhQUFhLFFBQVMsbUJBQ3BDLE1BQU1nWCxFQUFlLElBQUlqRixNQUN6QmlGLEVBQWFoWCxhQUFhLE1BQU9xUixHQUNqQzJGLEVBQWFoWCxhQUFhLFFBQVMsaUJBQ25DLE1BQU1pWCxFQUFjbFosU0FBUzJCLGNBQWMsUUFDM0N1WCxFQUFZalgsYUFBYSxRQUFTLGlCQUNsQ2lYLEVBQVl4RixZQUFjLGFBQzFCc0YsRUFBY3JGLE9BQU9zRixFQUFjQyxHQUluQ0osRUFBT25GLE9BQU9vRixFQUFhQyxHQUkzQixNQUFNRyxFQUFxQm5aLFNBQVMyQixjQUFjLE9BQ2xEd1gsRUFBbUJsWCxhQUFhLFFBQVMseUJBQ3pDa1gsRUFBbUI5RixVQUFVQyxJQUFJLFFBQ2pDNkYsRUFBbUJsWCxhQUFhLEtBQU0saUJBQWlCMlcsRUFBVWxkLE1BRWpFLE1BQU0wZCxFQUFvQnBaLFNBQVMyQixjQUFjLFNBQ2pEeVgsRUFBa0JuWCxhQUFhLE9BQVEsUUFDdkNtWCxFQUFrQm5YLGFBQWEsS0FBTSxjQUFjMlcsRUFBVWxkLE1BQzdEMGQsRUFBa0JuWCxhQUFhLGNBQWUsOEJBRTlDLE1BQU1vWCxFQUEwQnJaLFNBQVMyQixjQUFjLFNBQ3ZEMFgsRUFBd0JwWCxhQUFhLE9BQVEsUUFDN0NvWCxFQUF3QnBYLGFBQWEsS0FBTSxvQkFBb0IyVyxFQUFVbGQsTUFDekUyZCxFQUF3QnBYLGFBQWEsY0FBZSwwQ0FFcEQsTUFBTXFYLEVBQWtCdFosU0FBUzJCLGNBQWMsUUFDL0MyWCxFQUFnQnJYLGFBQWEsUUFBUyx3QkFDdEMsTUFBTXNYLEVBQW1CdlosU0FBUzJCLGNBQWMsU0FDaEQ0WCxFQUFpQjdGLFlBQWMsWUFDL0I2RixFQUFpQnRYLGFBQWEsTUFBTyxpQkFBaUIyVyxFQUFVbGQsTUFDaEUsTUFBTThkLEVBQW9CeFosU0FBUzJCLGNBQWMsVUFDakQ2WCxFQUFrQnZYLGFBQWEsS0FBTSxpQkFBaUIyVyxFQUFVbGQsTUFDaEUsTUFBTStkLEVBQXFCelosU0FBUzJCLGNBQWMsVUFDbEQ4WCxFQUFtQnhYLGFBQWEsUUFBUyxTQUN6Q3dYLEVBQW1CL0YsWUFBYyxRQUNqQyxNQUFNZ0csRUFBcUIxWixTQUFTMkIsY0FBYyxVQUNsRCtYLEVBQW1CelgsYUFBYSxRQUFTLFVBQ3pDeVgsRUFBbUJoRyxZQUFjLFNBQ2pDLE1BQU1pRyxFQUFxQjNaLFNBQVMyQixjQUFjLFVBQ2xEZ1ksRUFBbUIxWCxhQUFhLFFBQVMsT0FDekMwWCxFQUFtQmpHLFlBQWMsTUFFakM4RixFQUFrQjdGLE9BQU84RixFQUFvQkMsRUFBb0JDLEdBQ2pFTCxFQUFnQjNGLE9BQU80RixFQUFrQkMsR0FFekMsTUFBTUksRUFBYzVaLFNBQVMyQixjQUFjLFFBQzNDMlgsRUFBZ0JyWCxhQUFhLFFBQVMsc0JBQ3RDLE1BQU00WCxFQUFlN1osU0FBUzJCLGNBQWMsU0FDNUNrWSxFQUFhbkcsWUFBYyxZQUMzQm1HLEVBQWE1WCxhQUFhLE1BQU8sYUFBYTJXLEVBQVVsZCxNQUN4RCxNQUFNb2UsRUFBZTlaLFNBQVMyQixjQUFjLFNBQzVDbVksRUFBYTdYLGFBQWEsT0FBUSxRQUNsQzZYLEVBQWE3WCxhQUFhLEtBQU0sYUFBYTJXLEVBQVVsZCxNQUN2RGtlLEVBQVlqRyxPQUFPa0csRUFBY0MsR0FFakMsTUFBTUMsRUFBcUIvWixTQUFTMkIsY0FBYyxPQUNsRG9ZLEVBQW1COVgsYUFBYSxRQUFTLHlCQUN6QyxNQUFNK1gsRUFBb0JoYSxTQUFTMkIsY0FBYyxVQUNqRHFZLEVBQWtCL0YsUUFBUXFDLFVBQVlzQyxFQUFVbGQsR0FDaERzZSxFQUFrQjVGLGlCQUFpQixTQUFVOVQsR0NqSy9CLENBQUNBLElBQ2YsSUFBSTVFLEVBQUs0RSxFQUFFUixPQUFPbVUsUUFBUXFDLFVBQ3RCRyxFQUFjaFAsRUFBWVMsRUFBY3hNLEdBQ3hDMk0sRUFBVUgsRUFBYXVPLEdBR3ZCcFMsRUFEYXJFLFNBQVNDLGNBQWMsZUFBZXZFLEtBQ2hDcUMsTUFFbkI0RyxFQURtQjNFLFNBQVNDLGNBQWMscUJBQXFCdkUsS0FDL0JxQyxNQUVoQzhHLEVBRGdCN0UsU0FBU0MsY0FBYyxrQkFBa0J2RSxLQUNoQ3FDLE1BR3pCdU8sRUFEWXRNLFNBQVNDLGNBQWMsY0FBY3ZFLEtBQ2hDcUMsTUFFckIsTUFBTTJHLEVBQU8sSUFBSSxFQUFLTCxFQUFRTSxFQUFhMkgsRUFBTXpILEVBQVVuSixFQUFJMk0sRUFBUTRSLGF4QnhFaEQsRUFBQ3ZTLEVBQU9oTSxFQUFJZ0osS0FFckJnRCxFQURERCxFQUFZQyxFQUFPaE0sSUFFeEI2TSxRQUFRN0QsSXdCc0VoQndWLENBQWlCaFMsRUFBY3hNLEVBQUlnSixHQUVqQjFFLFNBQVNDLGNBQWMsa0JBQWtCdkUsS0FDL0NpWSxPQUFRVCxFQUFZeE8sSUFFckIxRSxTQUFTQyxjQUFjLGtCQUFrQnZFLEtBQy9DMlgsVUFBVStDLE9BQU8sUUFDdEIvTyxhQUFhc1AsUUFBUSxlQUFnQnZYLEtBQUtDLFVBQVU2SSxLRDBJREssQ0FBUWpJLEtBQzNEMFosRUFBa0J0RyxZQUFjLGNBRWhDLE1BQU15RyxFQUFvQm5hLFNBQVMyQixjQUFjLFVBQ2pEd1ksRUFBa0J6RyxZQUFjLFNBQ2hDeUcsRUFBa0JsRyxRQUFRcUMsVUFBWXNDLEVBQVVsZCxHQUNoRHllLEVBQWtCL0YsaUJBQWlCLFNBQVU5VCxHQUFLK1YsRUFBYy9WLEtBRWhFeVosRUFBbUJwRyxPQUFPcUcsRUFBb0JHLEdBRTlDaEIsRUFBbUJ4RixPQUFPeUYsRUFBbUJDLEVBQXlCQyxFQUFpQk0sRUFBYUcsR0FHcEcsTUFBTUssRUFBZXBhLFNBQVMyQixjQUFjLE9BVTVDLE9BVEF5WSxFQUFhblksYUFBYSxLQUFNLGlCQUFpQjJXLEVBQVVsZCxNQUMzRDBlLEVBQWFuWSxhQUFhLFFBQVMsaUJBRW5DMlcsRUFBVXhRLE1BQU1yRyxTQUFTc1ksSUFDdkJELEVBQWF6RyxPQUFPVCxFQUFZbUgsSUFDekJELEtBR1R2QixFQUFXbEYsT0FBT21GLEVBQVFLLEVBQW9CaUIsR0FDdkN2QixHRW5OZXlCLENBQVFqUyxJQUV2QmtQLEdDL0RIZ0QsR0FIVSxTQUNILFNBRVd2YSxTQUFTQyxjQUFjLGVBbUMvQ3dJLFFBQVFDLElBQUksU0FDWjZSLEVBQWdCNUcsT0Q4QkcsQ0FBQzZHLElBRWxCLE1BQU0zQixFQUFhN1ksU0FBUzJCLGNBQWMsT0FDMUNrWCxFQUFXNVcsYUFBYSxLQUFNLGVBRTlCLE1BQU13WSxFQUFRemEsU0FBUzJCLGNBQWMsT0FDckM4WSxFQUFNeFksYUFBYSxRQUFTLGdCQUM1QndZLEVBQU0vRyxZQUFjLGNBRXBCLE1BQU1nSCxFQUFVMWEsU0FBUzJCLGNBQWMsVUFDdkMrWSxFQUFRelksYUFBYSxLQUFNLGVBQzNCLE1BQU0wWSxFQUFrQixJQUFJM0csTUFDNUIyRyxFQUFnQjFZLGFBQWEsTUFBTyxHQUNwQzBZLEVBQWdCMVksYUFBYSxRQUFTLGlCQUN0QyxNQUFNMlksRUFBYzVhLFNBQVMyQixjQUFjLFFBQzNDaVosRUFBWWxILFlBQWMsV0FDMUJnSCxFQUFRL0csT0FBT2lILEVBQWFELEdBQzVCRCxFQUFRdEcsaUJBQWlCLFNBQVMsSUFBTStCLE1BSXhDLE1BQU0wRSxFQUFjN2EsU0FBUzJCLGNBQWMsT0FDM0NrWixFQUFZNVksYUFBYSxLQUFNLG9CQUMvQjRZLEVBQVl4SCxVQUFVQyxJQUFJLFFBQzFCLE1BQU13SCxFQUFvQjlhLFNBQVMyQixjQUFjLFNBQ2pEbVosRUFBa0I3WSxhQUFhLE9BQVEsUUFDdkM2WSxFQUFrQjdZLGFBQWEsS0FBTSxpQkFDckM2WSxFQUFrQjdZLGFBQWEsY0FBZSxpQ0FDOUMsTUFBTThZLEVBQXdCL2EsU0FBUzJCLGNBQWMsT0FDckRvWixFQUFzQjlZLGFBQWEsUUFBUyw0QkFDNUMsTUFBTStZLEVBQXVCaGIsU0FBUzJCLGNBQWMsVUFFcERxWixFQUFxQjVHLGlCQUFpQixTQUFTLElEdkY5QixNQUNqQixJQUNJL1AsRUFEUXJFLFNBQVNDLGNBQWMsa0JBQ2pCbEMsTUFDbEI0SyxHQUFpQixFQUNqQixNQUFNTixFQUFVLElBQUksRUFBUWhFLEVBQU9zRSxHQUNuQ1QsRUFBYTFNLEtBQUs2TSxHQUNsQmhCLGFBQWFzUCxRQUFRLGdCQUFpQmhPLEdBQ3RDdEIsYUFBYXNQLFFBQVEsZUFBZ0J2WCxLQUFLQyxVQUFVNkksSUFFekNsSSxTQUFTQyxjQUFjLFNBQzdCMFQsT0FBUTJELEVBQWVqUCxJQUVqQnJJLFNBQVNDLGNBQWMscUJBQzdCb1QsVUFBVStDLE9BQU8sU0MwRStCNkUsS0FFckRELEVBQXFCdEgsWUFBYyxpQkFDbkMsTUFBTXdILEVBQXVCbGIsU0FBUzJCLGNBQWMsVUFDcER1WixFQUFxQnhILFlBQWMsU0FFbkN3SCxFQUFxQjlHLGlCQUFpQixTQUFTLElBQU0rQixNQUVyRDRFLEVBQXNCcEgsT0FBT3FILEVBQXFCRSxHQUNsREwsRUFBWWxILE9BQU9tSCxFQUFtQkMsR0FFdEMsTUFBTUksRUFBVW5iLFNBQVMyQixjQUFjLE9BU3ZDLE9BUkF3WixFQUFRbFosYUFBYSxLQUFNLFFBRTNCdVksRUFBU3pZLFNBQVFzWSxJQUNmYyxFQUFReEgsT0FBTzJELEVBQWUrQyxJQUN2QmMsS0FHVHRDLEVBQVdsRixPQUFPOEcsRUFBT0MsRUFBU0csRUFBY00sR0FDekN0QyxHQ2xGY3VDLENBQVdsVCxHQUFnQmYsSSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudGFiY29udGVudCB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uc2hvd24ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5hZGRfcHJval9pY29uIHtcXG4gIHdpZHRoOiAxcmVtO1xcbiAgaGVpZ2h0OiAxcmVtO1xcbn1cXG5cXG4uaGlkZSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnRhYmNvbnRlbnQge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnNob3duIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4uYWRkX3Byb2pfaWNvbiB7XFxuICB3aWR0aDogMXJlbTtcXG4gIGhlaWdodDogMXJlbTtcXG59XFxuXFxuLmhpZGUge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsImNsYXNzIFByb2plY3Qge1xuICBjb25zdHJ1Y3Rvcih0aXRsZSwgaWQpe1xuICAgIHRoaXMuX3RpdGxlID0gdGl0bGU7XG4gICAgdGhpcy5fdGFza3MgPSBbXTtcbiAgICB0aGlzLl9pZCA9IGlkO1xuICAgIHRoaXMuX3Rhc2tDb3VudGVyID0gMDtcbiAgfVxuICBnZXQgdGl0bGUoKXtcbiAgICByZXR1cm4gdGhpcy5fdGl0bGU7XG4gIH1cblxuICBnZXQgaWQoKXtcbiAgICByZXR1cm4gdGhpcy5faWQ7XG4gIH1cblxuICBnZXQgdGFza0NvdW50ZXIoKXtcbiAgICByZXR1cm4gdGhpcy5fdGFza0NvdW50ZXI7XG4gIH1cblxuICBzZXQgdGl0bGUodGl0bGUpe1xuICAgIHRoaXMuX3RpdGxlID0gdGl0bGU7XG4gIH1cblxuICBnZXQgdGFza3MoKXtcbiAgICByZXR1cm4gdGhpcy5fdGFza3M7XG4gIH1cblxuICBhZGRUYXNrKHRhc2spe1xuICAgIC8vIHNvcnQgdGFza3MgbGF0ZXJcbiAgICB0aGlzLl90YXNrcy5wdXNoKHRhc2spO1xuICAgIHRoaXMuX3Rhc2tDb3VudGVyICs9IDE7XG4gIH1cblxuICByZW1vdmVUYXNrKGlkKXtcbiAgICAvLyBmaW5kIGluZGV4IG9mIHRhc2sgYnkgaWRcbiAgICB0aGlzLl90YXNrcy5zcGxpY2UoaWQsMSk7Ly9pZCA9PT0+IHRyYW5zZm9ybWVyIGVuIGluZGV4XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvamVjdDsiLCJjbGFzcyBUYXNre1xuICBjb25zdHJ1Y3Rvcih0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUgPSA5MTEsIHByaW9yaXR5LCBwcm9qSWQsIGlkKXtcbiAgICB0aGlzLl90aXRsZSA9IHRpdGxlO1xuICAgIHRoaXMuX2Rlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgdGhpcy5fZHVlRGF0ZSA9IGR1ZURhdGU7XG4gICAgdGhpcy5fcHJpb3JpdHkgPSBwcmlvcml0eTsgLy8gaGlnaHQgbWVkaXVtIGxvd1xuICAgIHRoaXMuX3N0YXR1cyA9IFwiVG8tZG9cIjsvLyBcInRvZG9cIiAgPT09PT4gXCJwcm9ncmVzc1wiID09PT4gXCJkb25lXCJcbiAgICB0aGlzLl9wcm9qSWQgPSBwcm9qSWQ7XG4gICAgdGhpcy5faWQgPSBpZDtcbiAgfVxuXG4gIGdldCB0aXRsZSgpe1xuICAgIHJldHVybiB0aGlzLl90aXRsZTtcbiAgfVxuXG4gIHNldCB0aXRsZSh0aXRsZSl7XG4gICAgdGhpcy5fdGl0bGUgPSB0aXRsZTtcbiAgfVxuXG4gIGdldCBkZXNjcmlwdGlvbigpe1xuICAgIHJldHVybiB0aGlzLl9kZXNjcmlwdGlvbjtcbiAgfVxuXG4gIFxuICBnZXQgcHJvaklkKCl7XG4gICAgcmV0dXJuIHRoaXMuX3Byb2pJZDtcbiAgfVxuXG4gIFxuICBnZXQgaWQoKXtcbiAgICByZXR1cm4gdGhpcy5faWQ7XG4gIH1cblxuICBzZXQgZGVzY3JpcHRpb24oZGVzY3JpcHRpb24pe1xuICAgIHRoaXMuX2Rlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gIH1cblxuICBnZXQgZHVlRGF0ZSgpe1xuICAgIHJldHVybiB0aGlzLl9kdWVEYXRlO1xuICB9XG5cbiAgc2V0IGR1ZURhdGUoZHVlRGF0ZSl7XG4gICAgdGhpcy5fZHVlRGF0ZSA9IGR1ZURhdGU7XG4gIH1cblxuICBnZXQgcHJpb3JpdHkoKXtcbiAgICByZXR1cm4gdGhpcy5fcHJpb3JpdHk7XG4gIH1cblxuICBzZXQgcHJpb3JpdHkocHJpb3JpdHkpe1xuICAgIHRoaXMuX3ByaW9yaXR5ID0gcHJpb3JpdHk7XG4gIH1cblxuICBnZXQgc3RhdHVzKCl7XG4gICAgcmV0dXJuIHRoaXMuX3N0YXR1cztcbiAgfVxuXG4gIHNldCBpZCh2YWwpe1xuICAgIHRoaXMuX2lkID0gdmFsO1xuICB9XG5cbiAgc2V0IHN0YXR1cyhzdGF0dXMpe1xuICAgIHRoaXMuX3N0YXR1cyA9IHN0YXR1cztcbiAgfVxuXG4gIGZvcm1hdGVkRHVlRGF0ZSgpe1xuICAgIGxldCBkYXRlID0gbmV3IERhdGUodGhpcy5fZHVlRGF0ZSk7XG4gICAgcmV0dXJuIGRhdGU7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFzazsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IG1vZHVsZVsnZGVmYXVsdCddIDpcblx0XHQoKSA9PiBtb2R1bGU7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJpbXBvcnQgYXBpIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICAgICAgICBpbXBvcnQgY29udGVudCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsImNvbnN0IFByb2plY3QgPSByZXF1aXJlKCcuL3Byb2plY3QnKS5kZWZhdWx0O1xuY29uc3QgVGFzayA9IHJlcXVpcmUoJy4vdGFzaycpLmRlZmF1bHQ7XG5jb25zdCB0YXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xudGFza3NDb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrc19jb250YWluZXInKTtcblxuY29uc3QgcHJvamVjdHNMaXN0U3RvcmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Byb2plY3RzTGlzdCcpID8gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncHJvamVjdHNMaXN0JykpIDogW107XG5jb25zdCBjb3VudFByb2plY3RzU3RvcmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NvdW50UHJvamVjdHMnKSA/IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NvdW50UHJvamVjdHMnKSkgOiAwO1xuXG5jb25zdCBmaW5kUHJvamVjdCA9IChhcnJheSxpZCk9PntcbiAgbGV0IG1pbiA9IDA7XG4gIGxldCBtYXggPSBhcnJheS5sZW5ndGggLSAxO1xuICBsZXQgaSA9IE1hdGguZmxvb3IoKG1pbiArIG1heCkgLyAyKTtcbiAgbGV0IGZvdW5kID0gZmFsc2U7XG4gIHdoaWxlIChtaW4gPD0gbWF4ICYmICFmb3VuZCkge1xuICAgIGZvdW5kID0gYXJyYXlbaV0uaWQgPT09IGlkO1xuICAgIGlmICghZm91bmQpIHtcbiAgICAgIGlmIChhcnJheVtpXS5pZCA+IGlkKSB7XG4gICAgICAgIG1heCA9IGkgLSAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWluID0gaSArIDE7XG4gICAgICB9XG4gICAgICBpID0gTWF0aC5mbG9vcigobWluICsgbWF4KSAvIDIpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gaTtcbn1cblxuY29uc3QgZGVsZXRlRnJvbVByb2plY3RMaXN0ID0gKHByb2plY3RzTGlzdCAsIGlkKT0+e1xuICBsZXQgdGFyZ2V0ID0gZmluZFByb2plY3QocHJvamVjdHNMaXN0LCBpZCk7XG4gIHByb2plY3RzTGlzdC5zcGxpY2UodGFyZ2V0ICwgMSk7XG59XG5cbmNvbnN0IGVkaXRQcm9qZWN0VGl0bGUgPSAocHJvamVjdHNMaXN0ICwgaWQsIHZhbHVlKT0+e1xuICBsZXQgdGFyZ2V0ID0gZmluZFByb2plY3QocHJvamVjdHNMaXN0LCBpZCk7XG4gIHByb2plY3RzTGlzdFt0YXJnZXRdLnRpdGxlID0gdmFsdWU7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwcm9qZWN0c0xpc3QnLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0c0xpc3QpKTtcbn1cblxuY29uc3QgYWRkVGFza1RvUHJvamVjdCA9IChhcnJheSwgaWQsIHRhc2spPT57XG4gIGxldCB0YXJnZXQgPSBmaW5kUHJvamVjdChhcnJheSwgaWQpO1xuICBsZXQgcHJvamVjdCA9IGFycmF5W3RhcmdldF07XG4gIHByb2plY3QuYWRkVGFzayh0YXNrKTtcbn1cblxuXG5jb25zdCBwYXJzZUpzb25Ub1Rhc2sgPSAob2JqSnNvbikgPT4ge1xuICBjb25zdCB0aXRsZSA9IG9iakpzb24uX3RpdGxlO1xuICBjb25zdCBkZXNjcmlwdGlvbiA9IG9iakpzb24uX2Rlc2NyaXB0aW9uO1xuICBjb25zdCBkdWVEYXRlID0gb2JqSnNvbi5fZHVlRGF0ZTtcbiAgY29uc3QgcHJpb3JpdHkgPSBvYmpKc29uLl9wcmlvcml0eTsgLy8gaGlnaHQgbWVkaXVtIGxvd1xuICBjb25zdCBzdGF0dXMgPSBvYmpKc29uLl9zdGF0dXM7Ly8gXCJ0b2RvXCIgID09PT0+IFwicHJvZ3Jlc3NcIiA9PT0+IFwiZG9uZVwiXG4gIGNvbnN0IHByb2pJZCA9IG9iakpzb24uX3Byb2pJZDtcbiAgY29uc3QgaWQgPSBvYmpKc29uLl9pZDtcblxuICBjb25zdCB0YXNrID0gbmV3IFRhc2sodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgcHJvaklkLCBpZCk7XG4gIHRhc2suc3RhdHVzID0gc3RhdHVzO1xuXG4gIHJldHVybiB0YXNrO1xufVxuXG5jb25zdCByZWFkUHJvamVjdEZyb21TdG9yYWdlID0gKG9iakpzb24pID0+IHtcbiAgY29uc3QgdGl0bGUgPSBvYmpKc29uLl90aXRsZTtcbiAgY29uc3QgaWQgPSBvYmpKc29uLl9pZDtcbiAgY29uc3QgdGFza3MgPSBvYmpKc29uLl90YXNrcztcblxuICBjb25zdCBwcm9qZWN0ID0gbmV3IFByb2plY3QodGl0bGUsIGlkKTtcblxuICBmb3IobGV0IGkgPSAwIDsgaSA8IHRhc2tzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgbGV0IHBhcnNlZFRhc2sgPSBwYXJzZUpzb25Ub1Rhc2sodGFza3NbaV0pO1xuICAgIHBhcnNlZFRhc2suaWQgPSBpO1xuICAgIHByb2plY3QuYWRkVGFzayhwYXJzZWRUYXNrKTtcbiAgfVxuXG4gIHJldHVybiBwcm9qZWN0O1xufVxuXG5jb25zdCBwcm9qZWN0c0xpc3QgPSBwcm9qZWN0c0xpc3RTdG9yZWQubWFwKCAoZWxlbSkgPT4geyByZXR1cm4gcmVhZFByb2plY3RGcm9tU3RvcmFnZShlbGVtKX0pO1xuY29uc29sZS5sb2coJ3ZhcmlhYmxlJyk7XG5sZXQgY291bnRQcm9qZWN0cyA9IHBhcnNlSW50KGNvdW50UHJvamVjdHNTdG9yZWQpO1xuXG5leHBvcnQge3Byb2plY3RzTGlzdCwgY291bnRQcm9qZWN0cyAsIGRlbGV0ZUZyb21Qcm9qZWN0TGlzdCwgZWRpdFByb2plY3RUaXRsZSAsIHRhc2tzQ29udGFpbmVyLCBhZGRUYXNrVG9Qcm9qZWN0LCAgZmluZFByb2plY3R9OyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlcXVpcmVkQXJncyhyZXF1aXJlZCwgYXJncykge1xuICBpZiAoYXJncy5sZW5ndGggPCByZXF1aXJlZCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocmVxdWlyZWQgKyAnIGFyZ3VtZW50JyArIChyZXF1aXJlZCA+IDEgPyAncycgOiAnJykgKyAnIHJlcXVpcmVkLCBidXQgb25seSAnICsgYXJncy5sZW5ndGggKyAnIHByZXNlbnQnKTtcbiAgfVxufSIsImltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSAnLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanMnO1xuLyoqXG4gKiBAbmFtZSB0b0RhdGVcbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgQ29udmVydCB0aGUgZ2l2ZW4gYXJndW1lbnQgdG8gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbnZlcnQgdGhlIGdpdmVuIGFyZ3VtZW50IHRvIGFuIGluc3RhbmNlIG9mIERhdGUuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIGFuIGluc3RhbmNlIG9mIERhdGUsIHRoZSBmdW5jdGlvbiByZXR1cm5zIGl0cyBjbG9uZS5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYSBudW1iZXIsIGl0IGlzIHRyZWF0ZWQgYXMgYSB0aW1lc3RhbXAuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIG5vbmUgb2YgdGhlIGFib3ZlLCB0aGUgZnVuY3Rpb24gcmV0dXJucyBJbnZhbGlkIERhdGUuXG4gKlxuICogKipOb3RlKio6ICphbGwqIERhdGUgYXJndW1lbnRzIHBhc3NlZCB0byBhbnkgKmRhdGUtZm5zKiBmdW5jdGlvbiBpcyBwcm9jZXNzZWQgYnkgYHRvRGF0ZWAuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gYXJndW1lbnQgLSB0aGUgdmFsdWUgdG8gY29udmVydFxuICogQHJldHVybnMge0RhdGV9IHRoZSBwYXJzZWQgZGF0ZSBpbiB0aGUgbG9jYWwgdGltZSB6b25lXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDEgYXJndW1lbnQgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ2xvbmUgdGhlIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUobmV3IERhdGUoMjAxNCwgMSwgMTEsIDExLCAzMCwgMzApKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29udmVydCB0aGUgdGltZXN0YW1wIHRvIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUoMTM5MjA5ODQzMDAwMClcbiAqIC8vPT4gVHVlIEZlYiAxMSAyMDE0IDExOjMwOjMwXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9EYXRlKGFyZ3VtZW50KSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgYXJnU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZ3VtZW50KTsgLy8gQ2xvbmUgdGhlIGRhdGVcblxuICBpZiAoYXJndW1lbnQgaW5zdGFuY2VvZiBEYXRlIHx8IHR5cGVvZiBhcmd1bWVudCA9PT0gJ29iamVjdCcgJiYgYXJnU3RyID09PSAnW29iamVjdCBEYXRlXScpIHtcbiAgICAvLyBQcmV2ZW50IHRoZSBkYXRlIHRvIGxvc2UgdGhlIG1pbGxpc2Vjb25kcyB3aGVuIHBhc3NlZCB0byBuZXcgRGF0ZSgpIGluIElFMTBcbiAgICByZXR1cm4gbmV3IERhdGUoYXJndW1lbnQuZ2V0VGltZSgpKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgYXJndW1lbnQgPT09ICdudW1iZXInIHx8IGFyZ1N0ciA9PT0gJ1tvYmplY3QgTnVtYmVyXScpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoYXJndW1lbnQpO1xuICB9IGVsc2Uge1xuICAgIGlmICgodHlwZW9mIGFyZ3VtZW50ID09PSAnc3RyaW5nJyB8fCBhcmdTdHIgPT09ICdbb2JqZWN0IFN0cmluZ10nKSAmJiB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLndhcm4oXCJTdGFydGluZyB3aXRoIHYyLjAuMC1iZXRhLjEgZGF0ZS1mbnMgZG9lc24ndCBhY2NlcHQgc3RyaW5ncyBhcyBkYXRlIGFyZ3VtZW50cy4gUGxlYXNlIHVzZSBgcGFyc2VJU09gIHRvIHBhcnNlIHN0cmluZ3MuIFNlZTogaHR0cHM6Ly9naXQuaW8vZmp1bGVcIik7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG5cbiAgICAgIGNvbnNvbGUud2FybihuZXcgRXJyb3IoKS5zdGFjayk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gIH1cbn0iLCJpbXBvcnQgdG9EYXRlIGZyb20gJy4uL3RvRGF0ZS9pbmRleC5qcyc7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gJy4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzJztcbi8qKlxuICogQG5hbWUgY29tcGFyZUFzY1xuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBDb21wYXJlIHRoZSB0d28gZGF0ZXMgYW5kIHJldHVybiAtMSwgMCBvciAxLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ29tcGFyZSB0aGUgdHdvIGRhdGVzIGFuZCByZXR1cm4gMSBpZiB0aGUgZmlyc3QgZGF0ZSBpcyBhZnRlciB0aGUgc2Vjb25kLFxuICogLTEgaWYgdGhlIGZpcnN0IGRhdGUgaXMgYmVmb3JlIHRoZSBzZWNvbmQgb3IgMCBpZiBkYXRlcyBhcmUgZXF1YWwuXG4gKlxuICogIyMjIHYyLjAuMCBicmVha2luZyBjaGFuZ2VzOlxuICpcbiAqIC0gW0NoYW5nZXMgdGhhdCBhcmUgY29tbW9uIGZvciB0aGUgd2hvbGUgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdXBncmFkZUd1aWRlLm1kI0NvbW1vbi1DaGFuZ2VzKS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlTGVmdCAtIHRoZSBmaXJzdCBkYXRlIHRvIGNvbXBhcmVcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVSaWdodCAtIHRoZSBzZWNvbmQgZGF0ZSB0byBjb21wYXJlXG4gKiBAcmV0dXJucyB7TnVtYmVyfSB0aGUgcmVzdWx0IG9mIHRoZSBjb21wYXJpc29uXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDIgYXJndW1lbnRzIHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENvbXBhcmUgMTEgRmVicnVhcnkgMTk4NyBhbmQgMTAgSnVseSAxOTg5OlxuICogdmFyIHJlc3VsdCA9IGNvbXBhcmVBc2MobmV3IERhdGUoMTk4NywgMSwgMTEpLCBuZXcgRGF0ZSgxOTg5LCA2LCAxMCkpXG4gKiAvLz0+IC0xXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFNvcnQgdGhlIGFycmF5IG9mIGRhdGVzOlxuICogdmFyIHJlc3VsdCA9IFtcbiAqICAgbmV3IERhdGUoMTk5NSwgNiwgMiksXG4gKiAgIG5ldyBEYXRlKDE5ODcsIDEsIDExKSxcbiAqICAgbmV3IERhdGUoMTk4OSwgNiwgMTApXG4gKiBdLnNvcnQoY29tcGFyZUFzYylcbiAqIC8vPT4gW1xuICogLy8gICBXZWQgRmViIDExIDE5ODcgMDA6MDA6MDAsXG4gKiAvLyAgIE1vbiBKdWwgMTAgMTk4OSAwMDowMDowMCxcbiAqIC8vICAgU3VuIEp1bCAwMiAxOTk1IDAwOjAwOjAwXG4gKiAvLyBdXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29tcGFyZUFzYyhkaXJ0eURhdGVMZWZ0LCBkaXJ0eURhdGVSaWdodCkge1xuICByZXF1aXJlZEFyZ3MoMiwgYXJndW1lbnRzKTtcbiAgdmFyIGRhdGVMZWZ0ID0gdG9EYXRlKGRpcnR5RGF0ZUxlZnQpO1xuICB2YXIgZGF0ZVJpZ2h0ID0gdG9EYXRlKGRpcnR5RGF0ZVJpZ2h0KTtcbiAgdmFyIGRpZmYgPSBkYXRlTGVmdC5nZXRUaW1lKCkgLSBkYXRlUmlnaHQuZ2V0VGltZSgpO1xuXG4gIGlmIChkaWZmIDwgMCkge1xuICAgIHJldHVybiAtMTtcbiAgfSBlbHNlIGlmIChkaWZmID4gMCkge1xuICAgIHJldHVybiAxOyAvLyBSZXR1cm4gMCBpZiBkaWZmIGlzIDA7IHJldHVybiBOYU4gaWYgZGlmZiBpcyBOYU5cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZGlmZjtcbiAgfVxufSIsImltcG9ydCB0b0RhdGUgZnJvbSAnLi4vdG9EYXRlL2luZGV4LmpzJztcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSAnLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanMnO1xuLyoqXG4gKiBAbmFtZSBkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRoc1xuICogQGNhdGVnb3J5IE1vbnRoIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IEdldCB0aGUgbnVtYmVyIG9mIGNhbGVuZGFyIG1vbnRocyBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcy5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEdldCB0aGUgbnVtYmVyIG9mIGNhbGVuZGFyIG1vbnRocyBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcy5cbiAqXG4gKiAjIyMgdjIuMC4wIGJyZWFraW5nIGNoYW5nZXM6XG4gKlxuICogLSBbQ2hhbmdlcyB0aGF0IGFyZSBjb21tb24gZm9yIHRoZSB3aG9sZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjQ29tbW9uLUNoYW5nZXMpLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVMZWZ0IC0gdGhlIGxhdGVyIGRhdGVcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVSaWdodCAtIHRoZSBlYXJsaWVyIGRhdGVcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IHRoZSBudW1iZXIgb2YgY2FsZW5kYXIgbW9udGhzXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDIgYXJndW1lbnRzIHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEhvdyBtYW55IGNhbGVuZGFyIG1vbnRocyBhcmUgYmV0d2VlbiAzMSBKYW51YXJ5IDIwMTQgYW5kIDEgU2VwdGVtYmVyIDIwMTQ/XG4gKiB2YXIgcmVzdWx0ID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJNb250aHMoXG4gKiAgIG5ldyBEYXRlKDIwMTQsIDgsIDEpLFxuICogICBuZXcgRGF0ZSgyMDE0LCAwLCAzMSlcbiAqIClcbiAqIC8vPT4gOFxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzKGRpcnR5RGF0ZUxlZnQsIGRpcnR5RGF0ZVJpZ2h0KSB7XG4gIHJlcXVpcmVkQXJncygyLCBhcmd1bWVudHMpO1xuICB2YXIgZGF0ZUxlZnQgPSB0b0RhdGUoZGlydHlEYXRlTGVmdCk7XG4gIHZhciBkYXRlUmlnaHQgPSB0b0RhdGUoZGlydHlEYXRlUmlnaHQpO1xuICB2YXIgeWVhckRpZmYgPSBkYXRlTGVmdC5nZXRGdWxsWWVhcigpIC0gZGF0ZVJpZ2h0LmdldEZ1bGxZZWFyKCk7XG4gIHZhciBtb250aERpZmYgPSBkYXRlTGVmdC5nZXRNb250aCgpIC0gZGF0ZVJpZ2h0LmdldE1vbnRoKCk7XG4gIHJldHVybiB5ZWFyRGlmZiAqIDEyICsgbW9udGhEaWZmO1xufSIsImltcG9ydCB0b0RhdGUgZnJvbSAnLi4vdG9EYXRlL2luZGV4LmpzJztcbmltcG9ydCBkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocyBmcm9tICcuLi9kaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocy9pbmRleC5qcyc7XG5pbXBvcnQgY29tcGFyZUFzYyBmcm9tICcuLi9jb21wYXJlQXNjL2luZGV4LmpzJztcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSAnLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanMnO1xuLyoqXG4gKiBAbmFtZSBkaWZmZXJlbmNlSW5Nb250aHNcbiAqIEBjYXRlZ29yeSBNb250aCBIZWxwZXJzXG4gKiBAc3VtbWFyeSBHZXQgdGhlIG51bWJlciBvZiBmdWxsIG1vbnRocyBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcy5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEdldCB0aGUgbnVtYmVyIG9mIGZ1bGwgbW9udGhzIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzLlxuICpcbiAqICMjIyB2Mi4wLjAgYnJlYWtpbmcgY2hhbmdlczpcbiAqXG4gKiAtIFtDaGFuZ2VzIHRoYXQgYXJlIGNvbW1vbiBmb3IgdGhlIHdob2xlIGxpYnJhcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VwZ3JhZGVHdWlkZS5tZCNDb21tb24tQ2hhbmdlcykuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZUxlZnQgLSB0aGUgbGF0ZXIgZGF0ZVxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZVJpZ2h0IC0gdGhlIGVhcmxpZXIgZGF0ZVxuICogQHJldHVybnMge051bWJlcn0gdGhlIG51bWJlciBvZiBmdWxsIG1vbnRoc1xuICogQHRocm93cyB7VHlwZUVycm9yfSAyIGFyZ3VtZW50cyByZXF1aXJlZFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBIb3cgbWFueSBmdWxsIG1vbnRocyBhcmUgYmV0d2VlbiAzMSBKYW51YXJ5IDIwMTQgYW5kIDEgU2VwdGVtYmVyIDIwMTQ/XG4gKiB2YXIgcmVzdWx0ID0gZGlmZmVyZW5jZUluTW9udGhzKG5ldyBEYXRlKDIwMTQsIDgsIDEpLCBuZXcgRGF0ZSgyMDE0LCAwLCAzMSkpXG4gKiAvLz0+IDdcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaWZmZXJlbmNlSW5Nb250aHMoZGlydHlEYXRlTGVmdCwgZGlydHlEYXRlUmlnaHQpIHtcbiAgcmVxdWlyZWRBcmdzKDIsIGFyZ3VtZW50cyk7XG4gIHZhciBkYXRlTGVmdCA9IHRvRGF0ZShkaXJ0eURhdGVMZWZ0KTtcbiAgdmFyIGRhdGVSaWdodCA9IHRvRGF0ZShkaXJ0eURhdGVSaWdodCk7XG4gIHZhciBzaWduID0gY29tcGFyZUFzYyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KTtcbiAgdmFyIGRpZmZlcmVuY2UgPSBNYXRoLmFicyhkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KSk7XG4gIGRhdGVMZWZ0LnNldE1vbnRoKGRhdGVMZWZ0LmdldE1vbnRoKCkgLSBzaWduICogZGlmZmVyZW5jZSk7IC8vIE1hdGguYWJzKGRpZmYgaW4gZnVsbCBtb250aHMgLSBkaWZmIGluIGNhbGVuZGFyIG1vbnRocykgPT09IDEgaWYgbGFzdCBjYWxlbmRhciBtb250aCBpcyBub3QgZnVsbFxuICAvLyBJZiBzbywgcmVzdWx0IG11c3QgYmUgZGVjcmVhc2VkIGJ5IDEgaW4gYWJzb2x1dGUgdmFsdWVcblxuICB2YXIgaXNMYXN0TW9udGhOb3RGdWxsID0gY29tcGFyZUFzYyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KSA9PT0gLXNpZ247XG4gIHZhciByZXN1bHQgPSBzaWduICogKGRpZmZlcmVuY2UgLSBpc0xhc3RNb250aE5vdEZ1bGwpOyAvLyBQcmV2ZW50IG5lZ2F0aXZlIHplcm9cblxuICByZXR1cm4gcmVzdWx0ID09PSAwID8gMCA6IHJlc3VsdDtcbn0iLCJpbXBvcnQgdG9EYXRlIGZyb20gJy4uL3RvRGF0ZS9pbmRleC5qcyc7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gJy4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzJztcbi8qKlxuICogQG5hbWUgZGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzXG4gKiBAY2F0ZWdvcnkgTWlsbGlzZWNvbmQgSGVscGVyc1xuICogQHN1bW1hcnkgR2V0IHRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogR2V0IHRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzLlxuICpcbiAqICMjIyB2Mi4wLjAgYnJlYWtpbmcgY2hhbmdlczpcbiAqXG4gKiAtIFtDaGFuZ2VzIHRoYXQgYXJlIGNvbW1vbiBmb3IgdGhlIHdob2xlIGxpYnJhcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VwZ3JhZGVHdWlkZS5tZCNDb21tb24tQ2hhbmdlcykuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZUxlZnQgLSB0aGUgbGF0ZXIgZGF0ZVxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZVJpZ2h0IC0gdGhlIGVhcmxpZXIgZGF0ZVxuICogQHJldHVybnMge051bWJlcn0gdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHNcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSG93IG1hbnkgbWlsbGlzZWNvbmRzIGFyZSBiZXR3ZWVuXG4gKiAvLyAyIEp1bHkgMjAxNCAxMjozMDoyMC42MDAgYW5kIDIgSnVseSAyMDE0IDEyOjMwOjIxLjcwMD9cbiAqIHZhciByZXN1bHQgPSBkaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMoXG4gKiAgIG5ldyBEYXRlKDIwMTQsIDYsIDIsIDEyLCAzMCwgMjEsIDcwMCksXG4gKiAgIG5ldyBEYXRlKDIwMTQsIDYsIDIsIDEyLCAzMCwgMjAsIDYwMClcbiAqIClcbiAqIC8vPT4gMTEwMFxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRpZmZlcmVuY2VJbk1pbGxpc2Vjb25kcyhkaXJ0eURhdGVMZWZ0LCBkaXJ0eURhdGVSaWdodCkge1xuICByZXF1aXJlZEFyZ3MoMiwgYXJndW1lbnRzKTtcbiAgdmFyIGRhdGVMZWZ0ID0gdG9EYXRlKGRpcnR5RGF0ZUxlZnQpO1xuICB2YXIgZGF0ZVJpZ2h0ID0gdG9EYXRlKGRpcnR5RGF0ZVJpZ2h0KTtcbiAgcmV0dXJuIGRhdGVMZWZ0LmdldFRpbWUoKSAtIGRhdGVSaWdodC5nZXRUaW1lKCk7XG59IiwiaW1wb3J0IGRpZmZlcmVuY2VJbk1pbGxpc2Vjb25kcyBmcm9tICcuLi9kaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMvaW5kZXguanMnO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tICcuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qcyc7XG4vKipcbiAqIEBuYW1lIGRpZmZlcmVuY2VJblNlY29uZHNcbiAqIEBjYXRlZ29yeSBTZWNvbmQgSGVscGVyc1xuICogQHN1bW1hcnkgR2V0IHRoZSBudW1iZXIgb2Ygc2Vjb25kcyBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcy5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEdldCB0aGUgbnVtYmVyIG9mIHNlY29uZHMgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZXMuXG4gKlxuICogIyMjIHYyLjAuMCBicmVha2luZyBjaGFuZ2VzOlxuICpcbiAqIC0gW0NoYW5nZXMgdGhhdCBhcmUgY29tbW9uIGZvciB0aGUgd2hvbGUgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdXBncmFkZUd1aWRlLm1kI0NvbW1vbi1DaGFuZ2VzKS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlTGVmdCAtIHRoZSBsYXRlciBkYXRlXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlUmlnaHQgLSB0aGUgZWFybGllciBkYXRlXG4gKiBAcmV0dXJucyB7TnVtYmVyfSB0aGUgbnVtYmVyIG9mIHNlY29uZHNcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSG93IG1hbnkgc2Vjb25kcyBhcmUgYmV0d2VlblxuICogLy8gMiBKdWx5IDIwMTQgMTI6MzA6MDcuOTk5IGFuZCAyIEp1bHkgMjAxNCAxMjozMDoyMC4wMDA/XG4gKiB2YXIgcmVzdWx0ID0gZGlmZmVyZW5jZUluU2Vjb25kcyhcbiAqICAgbmV3IERhdGUoMjAxNCwgNiwgMiwgMTIsIDMwLCAyMCwgMCksXG4gKiAgIG5ldyBEYXRlKDIwMTQsIDYsIDIsIDEyLCAzMCwgNywgOTk5KVxuICogKVxuICogLy89PiAxMlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRpZmZlcmVuY2VJblNlY29uZHMoZGlydHlEYXRlTGVmdCwgZGlydHlEYXRlUmlnaHQpIHtcbiAgcmVxdWlyZWRBcmdzKDIsIGFyZ3VtZW50cyk7XG4gIHZhciBkaWZmID0gZGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzKGRpcnR5RGF0ZUxlZnQsIGRpcnR5RGF0ZVJpZ2h0KSAvIDEwMDA7XG4gIHJldHVybiBkaWZmID4gMCA/IE1hdGguZmxvb3IoZGlmZikgOiBNYXRoLmNlaWwoZGlmZik7XG59IiwidmFyIGZvcm1hdERpc3RhbmNlTG9jYWxlID0ge1xuICBsZXNzVGhhblhTZWNvbmRzOiB7XG4gICAgb25lOiAnbGVzcyB0aGFuIGEgc2Vjb25kJyxcbiAgICBvdGhlcjogJ2xlc3MgdGhhbiB7e2NvdW50fX0gc2Vjb25kcydcbiAgfSxcbiAgeFNlY29uZHM6IHtcbiAgICBvbmU6ICcxIHNlY29uZCcsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gc2Vjb25kcydcbiAgfSxcbiAgaGFsZkFNaW51dGU6ICdoYWxmIGEgbWludXRlJyxcbiAgbGVzc1RoYW5YTWludXRlczoge1xuICAgIG9uZTogJ2xlc3MgdGhhbiBhIG1pbnV0ZScsXG4gICAgb3RoZXI6ICdsZXNzIHRoYW4ge3tjb3VudH19IG1pbnV0ZXMnXG4gIH0sXG4gIHhNaW51dGVzOiB7XG4gICAgb25lOiAnMSBtaW51dGUnLFxuICAgIG90aGVyOiAne3tjb3VudH19IG1pbnV0ZXMnXG4gIH0sXG4gIGFib3V0WEhvdXJzOiB7XG4gICAgb25lOiAnYWJvdXQgMSBob3VyJyxcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSBob3VycydcbiAgfSxcbiAgeEhvdXJzOiB7XG4gICAgb25lOiAnMSBob3VyJyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBob3VycydcbiAgfSxcbiAgeERheXM6IHtcbiAgICBvbmU6ICcxIGRheScsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gZGF5cydcbiAgfSxcbiAgYWJvdXRYV2Vla3M6IHtcbiAgICBvbmU6ICdhYm91dCAxIHdlZWsnLFxuICAgIG90aGVyOiAnYWJvdXQge3tjb3VudH19IHdlZWtzJ1xuICB9LFxuICB4V2Vla3M6IHtcbiAgICBvbmU6ICcxIHdlZWsnLFxuICAgIG90aGVyOiAne3tjb3VudH19IHdlZWtzJ1xuICB9LFxuICBhYm91dFhNb250aHM6IHtcbiAgICBvbmU6ICdhYm91dCAxIG1vbnRoJyxcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSBtb250aHMnXG4gIH0sXG4gIHhNb250aHM6IHtcbiAgICBvbmU6ICcxIG1vbnRoJyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBtb250aHMnXG4gIH0sXG4gIGFib3V0WFllYXJzOiB7XG4gICAgb25lOiAnYWJvdXQgMSB5ZWFyJyxcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSB5ZWFycydcbiAgfSxcbiAgeFllYXJzOiB7XG4gICAgb25lOiAnMSB5ZWFyJyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSB5ZWFycydcbiAgfSxcbiAgb3ZlclhZZWFyczoge1xuICAgIG9uZTogJ292ZXIgMSB5ZWFyJyxcbiAgICBvdGhlcjogJ292ZXIge3tjb3VudH19IHllYXJzJ1xuICB9LFxuICBhbG1vc3RYWWVhcnM6IHtcbiAgICBvbmU6ICdhbG1vc3QgMSB5ZWFyJyxcbiAgICBvdGhlcjogJ2FsbW9zdCB7e2NvdW50fX0geWVhcnMnXG4gIH1cbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXREaXN0YW5jZSh0b2tlbiwgY291bnQsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciByZXN1bHQ7XG5cbiAgaWYgKHR5cGVvZiBmb3JtYXREaXN0YW5jZUxvY2FsZVt0b2tlbl0gPT09ICdzdHJpbmcnKSB7XG4gICAgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VMb2NhbGVbdG9rZW5dO1xuICB9IGVsc2UgaWYgKGNvdW50ID09PSAxKSB7XG4gICAgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VMb2NhbGVbdG9rZW5dLm9uZTtcbiAgfSBlbHNlIHtcbiAgICByZXN1bHQgPSBmb3JtYXREaXN0YW5jZUxvY2FsZVt0b2tlbl0ub3RoZXIucmVwbGFjZSgne3tjb3VudH19JywgY291bnQpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuYWRkU3VmZml4KSB7XG4gICAgaWYgKG9wdGlvbnMuY29tcGFyaXNvbiA+IDApIHtcbiAgICAgIHJldHVybiAnaW4gJyArIHJlc3VsdDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHJlc3VsdCArICcgYWdvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJ1aWxkRm9ybWF0TG9uZ0ZuKGFyZ3MpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChkaXJ0eU9wdGlvbnMpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGRpcnR5T3B0aW9ucyB8fCB7fTtcbiAgICB2YXIgd2lkdGggPSBvcHRpb25zLndpZHRoID8gU3RyaW5nKG9wdGlvbnMud2lkdGgpIDogYXJncy5kZWZhdWx0V2lkdGg7XG4gICAgdmFyIGZvcm1hdCA9IGFyZ3MuZm9ybWF0c1t3aWR0aF0gfHwgYXJncy5mb3JtYXRzW2FyZ3MuZGVmYXVsdFdpZHRoXTtcbiAgICByZXR1cm4gZm9ybWF0O1xuICB9O1xufSIsImltcG9ydCBidWlsZEZvcm1hdExvbmdGbiBmcm9tICcuLi8uLi8uLi9fbGliL2J1aWxkRm9ybWF0TG9uZ0ZuL2luZGV4LmpzJztcbnZhciBkYXRlRm9ybWF0cyA9IHtcbiAgZnVsbDogJ0VFRUUsIE1NTU0gZG8sIHknLFxuICBsb25nOiAnTU1NTSBkbywgeScsXG4gIG1lZGl1bTogJ01NTSBkLCB5JyxcbiAgc2hvcnQ6ICdNTS9kZC95eXl5J1xufTtcbnZhciB0aW1lRm9ybWF0cyA9IHtcbiAgZnVsbDogJ2g6bW06c3MgYSB6enp6JyxcbiAgbG9uZzogJ2g6bW06c3MgYSB6JyxcbiAgbWVkaXVtOiAnaDptbTpzcyBhJyxcbiAgc2hvcnQ6ICdoOm1tIGEnXG59O1xudmFyIGRhdGVUaW1lRm9ybWF0cyA9IHtcbiAgZnVsbDogXCJ7e2RhdGV9fSAnYXQnIHt7dGltZX19XCIsXG4gIGxvbmc6IFwie3tkYXRlfX0gJ2F0JyB7e3RpbWV9fVwiLFxuICBtZWRpdW06ICd7e2RhdGV9fSwge3t0aW1lfX0nLFxuICBzaG9ydDogJ3t7ZGF0ZX19LCB7e3RpbWV9fSdcbn07XG52YXIgZm9ybWF0TG9uZyA9IHtcbiAgZGF0ZTogYnVpbGRGb3JtYXRMb25nRm4oe1xuICAgIGZvcm1hdHM6IGRhdGVGb3JtYXRzLFxuICAgIGRlZmF1bHRXaWR0aDogJ2Z1bGwnXG4gIH0pLFxuICB0aW1lOiBidWlsZEZvcm1hdExvbmdGbih7XG4gICAgZm9ybWF0czogdGltZUZvcm1hdHMsXG4gICAgZGVmYXVsdFdpZHRoOiAnZnVsbCdcbiAgfSksXG4gIGRhdGVUaW1lOiBidWlsZEZvcm1hdExvbmdGbih7XG4gICAgZm9ybWF0czogZGF0ZVRpbWVGb3JtYXRzLFxuICAgIGRlZmF1bHRXaWR0aDogJ2Z1bGwnXG4gIH0pXG59O1xuZXhwb3J0IGRlZmF1bHQgZm9ybWF0TG9uZzsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZE1hdGNoUGF0dGVybkZuKGFyZ3MpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChkaXJ0eVN0cmluZywgZGlydHlPcHRpb25zKSB7XG4gICAgdmFyIHN0cmluZyA9IFN0cmluZyhkaXJ0eVN0cmluZyk7XG4gICAgdmFyIG9wdGlvbnMgPSBkaXJ0eU9wdGlvbnMgfHwge307XG4gICAgdmFyIG1hdGNoUmVzdWx0ID0gc3RyaW5nLm1hdGNoKGFyZ3MubWF0Y2hQYXR0ZXJuKTtcblxuICAgIGlmICghbWF0Y2hSZXN1bHQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBtYXRjaGVkU3RyaW5nID0gbWF0Y2hSZXN1bHRbMF07XG4gICAgdmFyIHBhcnNlUmVzdWx0ID0gc3RyaW5nLm1hdGNoKGFyZ3MucGFyc2VQYXR0ZXJuKTtcblxuICAgIGlmICghcGFyc2VSZXN1bHQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciB2YWx1ZSA9IGFyZ3MudmFsdWVDYWxsYmFjayA/IGFyZ3MudmFsdWVDYWxsYmFjayhwYXJzZVJlc3VsdFswXSkgOiBwYXJzZVJlc3VsdFswXTtcbiAgICB2YWx1ZSA9IG9wdGlvbnMudmFsdWVDYWxsYmFjayA/IG9wdGlvbnMudmFsdWVDYWxsYmFjayh2YWx1ZSkgOiB2YWx1ZTtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgcmVzdDogc3RyaW5nLnNsaWNlKG1hdGNoZWRTdHJpbmcubGVuZ3RoKVxuICAgIH07XG4gIH07XG59IiwidmFyIGZvcm1hdFJlbGF0aXZlTG9jYWxlID0ge1xuICBsYXN0V2VlazogXCInbGFzdCcgZWVlZSAnYXQnIHBcIixcbiAgeWVzdGVyZGF5OiBcIid5ZXN0ZXJkYXkgYXQnIHBcIixcbiAgdG9kYXk6IFwiJ3RvZGF5IGF0JyBwXCIsXG4gIHRvbW9ycm93OiBcIid0b21vcnJvdyBhdCcgcFwiLFxuICBuZXh0V2VlazogXCJlZWVlICdhdCcgcFwiLFxuICBvdGhlcjogJ1AnXG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0UmVsYXRpdmUodG9rZW4sIF9kYXRlLCBfYmFzZURhdGUsIF9vcHRpb25zKSB7XG4gIHJldHVybiBmb3JtYXRSZWxhdGl2ZUxvY2FsZVt0b2tlbl07XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnVpbGRMb2NhbGl6ZUZuKGFyZ3MpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChkaXJ0eUluZGV4LCBkaXJ0eU9wdGlvbnMpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGRpcnR5T3B0aW9ucyB8fCB7fTtcbiAgICB2YXIgY29udGV4dCA9IG9wdGlvbnMuY29udGV4dCA/IFN0cmluZyhvcHRpb25zLmNvbnRleHQpIDogJ3N0YW5kYWxvbmUnO1xuICAgIHZhciB2YWx1ZXNBcnJheTtcblxuICAgIGlmIChjb250ZXh0ID09PSAnZm9ybWF0dGluZycgJiYgYXJncy5mb3JtYXR0aW5nVmFsdWVzKSB7XG4gICAgICB2YXIgZGVmYXVsdFdpZHRoID0gYXJncy5kZWZhdWx0Rm9ybWF0dGluZ1dpZHRoIHx8IGFyZ3MuZGVmYXVsdFdpZHRoO1xuICAgICAgdmFyIHdpZHRoID0gb3B0aW9ucy53aWR0aCA/IFN0cmluZyhvcHRpb25zLndpZHRoKSA6IGRlZmF1bHRXaWR0aDtcbiAgICAgIHZhbHVlc0FycmF5ID0gYXJncy5mb3JtYXR0aW5nVmFsdWVzW3dpZHRoXSB8fCBhcmdzLmZvcm1hdHRpbmdWYWx1ZXNbZGVmYXVsdFdpZHRoXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF9kZWZhdWx0V2lkdGggPSBhcmdzLmRlZmF1bHRXaWR0aDtcblxuICAgICAgdmFyIF93aWR0aCA9IG9wdGlvbnMud2lkdGggPyBTdHJpbmcob3B0aW9ucy53aWR0aCkgOiBhcmdzLmRlZmF1bHRXaWR0aDtcblxuICAgICAgdmFsdWVzQXJyYXkgPSBhcmdzLnZhbHVlc1tfd2lkdGhdIHx8IGFyZ3MudmFsdWVzW19kZWZhdWx0V2lkdGhdO1xuICAgIH1cblxuICAgIHZhciBpbmRleCA9IGFyZ3MuYXJndW1lbnRDYWxsYmFjayA/IGFyZ3MuYXJndW1lbnRDYWxsYmFjayhkaXJ0eUluZGV4KSA6IGRpcnR5SW5kZXg7XG4gICAgcmV0dXJuIHZhbHVlc0FycmF5W2luZGV4XTtcbiAgfTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZE1hdGNoRm4oYXJncykge1xuICByZXR1cm4gZnVuY3Rpb24gKGRpcnR5U3RyaW5nLCBkaXJ0eU9wdGlvbnMpIHtcbiAgICB2YXIgc3RyaW5nID0gU3RyaW5nKGRpcnR5U3RyaW5nKTtcbiAgICB2YXIgb3B0aW9ucyA9IGRpcnR5T3B0aW9ucyB8fCB7fTtcbiAgICB2YXIgd2lkdGggPSBvcHRpb25zLndpZHRoO1xuICAgIHZhciBtYXRjaFBhdHRlcm4gPSB3aWR0aCAmJiBhcmdzLm1hdGNoUGF0dGVybnNbd2lkdGhdIHx8IGFyZ3MubWF0Y2hQYXR0ZXJuc1thcmdzLmRlZmF1bHRNYXRjaFdpZHRoXTtcbiAgICB2YXIgbWF0Y2hSZXN1bHQgPSBzdHJpbmcubWF0Y2gobWF0Y2hQYXR0ZXJuKTtcblxuICAgIGlmICghbWF0Y2hSZXN1bHQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBtYXRjaGVkU3RyaW5nID0gbWF0Y2hSZXN1bHRbMF07XG4gICAgdmFyIHBhcnNlUGF0dGVybnMgPSB3aWR0aCAmJiBhcmdzLnBhcnNlUGF0dGVybnNbd2lkdGhdIHx8IGFyZ3MucGFyc2VQYXR0ZXJuc1thcmdzLmRlZmF1bHRQYXJzZVdpZHRoXTtcbiAgICB2YXIgdmFsdWU7XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHBhcnNlUGF0dGVybnMpID09PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICB2YWx1ZSA9IGZpbmRJbmRleChwYXJzZVBhdHRlcm5zLCBmdW5jdGlvbiAocGF0dGVybikge1xuICAgICAgICByZXR1cm4gcGF0dGVybi50ZXN0KG1hdGNoZWRTdHJpbmcpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlID0gZmluZEtleShwYXJzZVBhdHRlcm5zLCBmdW5jdGlvbiAocGF0dGVybikge1xuICAgICAgICByZXR1cm4gcGF0dGVybi50ZXN0KG1hdGNoZWRTdHJpbmcpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdmFsdWUgPSBhcmdzLnZhbHVlQ2FsbGJhY2sgPyBhcmdzLnZhbHVlQ2FsbGJhY2sodmFsdWUpIDogdmFsdWU7XG4gICAgdmFsdWUgPSBvcHRpb25zLnZhbHVlQ2FsbGJhY2sgPyBvcHRpb25zLnZhbHVlQ2FsbGJhY2sodmFsdWUpIDogdmFsdWU7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIHJlc3Q6IHN0cmluZy5zbGljZShtYXRjaGVkU3RyaW5nLmxlbmd0aClcbiAgICB9O1xuICB9O1xufVxuXG5mdW5jdGlvbiBmaW5kS2V5KG9iamVjdCwgcHJlZGljYXRlKSB7XG4gIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICBpZiAob2JqZWN0Lmhhc093blByb3BlcnR5KGtleSkgJiYgcHJlZGljYXRlKG9iamVjdFtrZXldKSkge1xuICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gZmluZEluZGV4KGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgZm9yICh2YXIga2V5ID0gMDsga2V5IDwgYXJyYXkubGVuZ3RoOyBrZXkrKykge1xuICAgIGlmIChwcmVkaWNhdGUoYXJyYXlba2V5XSkpIHtcbiAgICAgIHJldHVybiBrZXk7XG4gICAgfVxuICB9XG59IiwiaW1wb3J0IGZvcm1hdERpc3RhbmNlIGZyb20gJy4vX2xpYi9mb3JtYXREaXN0YW5jZS9pbmRleC5qcyc7XG5pbXBvcnQgZm9ybWF0TG9uZyBmcm9tICcuL19saWIvZm9ybWF0TG9uZy9pbmRleC5qcyc7XG5pbXBvcnQgZm9ybWF0UmVsYXRpdmUgZnJvbSAnLi9fbGliL2Zvcm1hdFJlbGF0aXZlL2luZGV4LmpzJztcbmltcG9ydCBsb2NhbGl6ZSBmcm9tICcuL19saWIvbG9jYWxpemUvaW5kZXguanMnO1xuaW1wb3J0IG1hdGNoIGZyb20gJy4vX2xpYi9tYXRjaC9pbmRleC5qcyc7XG4vKipcbiAqIEB0eXBlIHtMb2NhbGV9XG4gKiBAY2F0ZWdvcnkgTG9jYWxlc1xuICogQHN1bW1hcnkgRW5nbGlzaCBsb2NhbGUgKFVuaXRlZCBTdGF0ZXMpLlxuICogQGxhbmd1YWdlIEVuZ2xpc2hcbiAqIEBpc28tNjM5LTIgZW5nXG4gKiBAYXV0aG9yIFNhc2hhIEtvc3MgW0Brb3Nzbm9jb3JwXXtAbGluayBodHRwczovL2dpdGh1Yi5jb20va29zc25vY29ycH1cbiAqIEBhdXRob3IgTGVzaGEgS29zcyBbQGxlc2hha29zc117QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2xlc2hha29zc31cbiAqL1xuXG52YXIgbG9jYWxlID0ge1xuICBjb2RlOiAnZW4tVVMnLFxuICBmb3JtYXREaXN0YW5jZTogZm9ybWF0RGlzdGFuY2UsXG4gIGZvcm1hdExvbmc6IGZvcm1hdExvbmcsXG4gIGZvcm1hdFJlbGF0aXZlOiBmb3JtYXRSZWxhdGl2ZSxcbiAgbG9jYWxpemU6IGxvY2FsaXplLFxuICBtYXRjaDogbWF0Y2gsXG4gIG9wdGlvbnM6IHtcbiAgICB3ZWVrU3RhcnRzT246IDBcbiAgICAvKiBTdW5kYXkgKi9cbiAgICAsXG4gICAgZmlyc3RXZWVrQ29udGFpbnNEYXRlOiAxXG4gIH1cbn07XG5leHBvcnQgZGVmYXVsdCBsb2NhbGU7IiwiaW1wb3J0IGJ1aWxkTG9jYWxpemVGbiBmcm9tICcuLi8uLi8uLi9fbGliL2J1aWxkTG9jYWxpemVGbi9pbmRleC5qcyc7XG52YXIgZXJhVmFsdWVzID0ge1xuICBuYXJyb3c6IFsnQicsICdBJ10sXG4gIGFiYnJldmlhdGVkOiBbJ0JDJywgJ0FEJ10sXG4gIHdpZGU6IFsnQmVmb3JlIENocmlzdCcsICdBbm5vIERvbWluaSddXG59O1xudmFyIHF1YXJ0ZXJWYWx1ZXMgPSB7XG4gIG5hcnJvdzogWycxJywgJzInLCAnMycsICc0J10sXG4gIGFiYnJldmlhdGVkOiBbJ1ExJywgJ1EyJywgJ1EzJywgJ1E0J10sXG4gIHdpZGU6IFsnMXN0IHF1YXJ0ZXInLCAnMm5kIHF1YXJ0ZXInLCAnM3JkIHF1YXJ0ZXInLCAnNHRoIHF1YXJ0ZXInXSAvLyBOb3RlOiBpbiBFbmdsaXNoLCB0aGUgbmFtZXMgb2YgZGF5cyBvZiB0aGUgd2VlayBhbmQgbW9udGhzIGFyZSBjYXBpdGFsaXplZC5cbiAgLy8gSWYgeW91IGFyZSBtYWtpbmcgYSBuZXcgbG9jYWxlIGJhc2VkIG9uIHRoaXMgb25lLCBjaGVjayBpZiB0aGUgc2FtZSBpcyB0cnVlIGZvciB0aGUgbGFuZ3VhZ2UgeW91J3JlIHdvcmtpbmcgb24uXG4gIC8vIEdlbmVyYWxseSwgZm9ybWF0dGVkIGRhdGVzIHNob3VsZCBsb29rIGxpa2UgdGhleSBhcmUgaW4gdGhlIG1pZGRsZSBvZiBhIHNlbnRlbmNlLFxuICAvLyBlLmcuIGluIFNwYW5pc2ggbGFuZ3VhZ2UgdGhlIHdlZWtkYXlzIGFuZCBtb250aHMgc2hvdWxkIGJlIGluIHRoZSBsb3dlcmNhc2UuXG5cbn07XG52YXIgbW9udGhWYWx1ZXMgPSB7XG4gIG5hcnJvdzogWydKJywgJ0YnLCAnTScsICdBJywgJ00nLCAnSicsICdKJywgJ0EnLCAnUycsICdPJywgJ04nLCAnRCddLFxuICBhYmJyZXZpYXRlZDogWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddLFxuICB3aWRlOiBbJ0phbnVhcnknLCAnRmVicnVhcnknLCAnTWFyY2gnLCAnQXByaWwnLCAnTWF5JywgJ0p1bmUnLCAnSnVseScsICdBdWd1c3QnLCAnU2VwdGVtYmVyJywgJ09jdG9iZXInLCAnTm92ZW1iZXInLCAnRGVjZW1iZXInXVxufTtcbnZhciBkYXlWYWx1ZXMgPSB7XG4gIG5hcnJvdzogWydTJywgJ00nLCAnVCcsICdXJywgJ1QnLCAnRicsICdTJ10sXG4gIHNob3J0OiBbJ1N1JywgJ01vJywgJ1R1JywgJ1dlJywgJ1RoJywgJ0ZyJywgJ1NhJ10sXG4gIGFiYnJldmlhdGVkOiBbJ1N1bicsICdNb24nLCAnVHVlJywgJ1dlZCcsICdUaHUnLCAnRnJpJywgJ1NhdCddLFxuICB3aWRlOiBbJ1N1bmRheScsICdNb25kYXknLCAnVHVlc2RheScsICdXZWRuZXNkYXknLCAnVGh1cnNkYXknLCAnRnJpZGF5JywgJ1NhdHVyZGF5J11cbn07XG52YXIgZGF5UGVyaW9kVmFsdWVzID0ge1xuICBuYXJyb3c6IHtcbiAgICBhbTogJ2EnLFxuICAgIHBtOiAncCcsXG4gICAgbWlkbmlnaHQ6ICdtaScsXG4gICAgbm9vbjogJ24nLFxuICAgIG1vcm5pbmc6ICdtb3JuaW5nJyxcbiAgICBhZnRlcm5vb246ICdhZnRlcm5vb24nLFxuICAgIGV2ZW5pbmc6ICdldmVuaW5nJyxcbiAgICBuaWdodDogJ25pZ2h0J1xuICB9LFxuICBhYmJyZXZpYXRlZDoge1xuICAgIGFtOiAnQU0nLFxuICAgIHBtOiAnUE0nLFxuICAgIG1pZG5pZ2h0OiAnbWlkbmlnaHQnLFxuICAgIG5vb246ICdub29uJyxcbiAgICBtb3JuaW5nOiAnbW9ybmluZycsXG4gICAgYWZ0ZXJub29uOiAnYWZ0ZXJub29uJyxcbiAgICBldmVuaW5nOiAnZXZlbmluZycsXG4gICAgbmlnaHQ6ICduaWdodCdcbiAgfSxcbiAgd2lkZToge1xuICAgIGFtOiAnYS5tLicsXG4gICAgcG06ICdwLm0uJyxcbiAgICBtaWRuaWdodDogJ21pZG5pZ2h0JyxcbiAgICBub29uOiAnbm9vbicsXG4gICAgbW9ybmluZzogJ21vcm5pbmcnLFxuICAgIGFmdGVybm9vbjogJ2FmdGVybm9vbicsXG4gICAgZXZlbmluZzogJ2V2ZW5pbmcnLFxuICAgIG5pZ2h0OiAnbmlnaHQnXG4gIH1cbn07XG52YXIgZm9ybWF0dGluZ0RheVBlcmlvZFZhbHVlcyA9IHtcbiAgbmFycm93OiB7XG4gICAgYW06ICdhJyxcbiAgICBwbTogJ3AnLFxuICAgIG1pZG5pZ2h0OiAnbWknLFxuICAgIG5vb246ICduJyxcbiAgICBtb3JuaW5nOiAnaW4gdGhlIG1vcm5pbmcnLFxuICAgIGFmdGVybm9vbjogJ2luIHRoZSBhZnRlcm5vb24nLFxuICAgIGV2ZW5pbmc6ICdpbiB0aGUgZXZlbmluZycsXG4gICAgbmlnaHQ6ICdhdCBuaWdodCdcbiAgfSxcbiAgYWJicmV2aWF0ZWQ6IHtcbiAgICBhbTogJ0FNJyxcbiAgICBwbTogJ1BNJyxcbiAgICBtaWRuaWdodDogJ21pZG5pZ2h0JyxcbiAgICBub29uOiAnbm9vbicsXG4gICAgbW9ybmluZzogJ2luIHRoZSBtb3JuaW5nJyxcbiAgICBhZnRlcm5vb246ICdpbiB0aGUgYWZ0ZXJub29uJyxcbiAgICBldmVuaW5nOiAnaW4gdGhlIGV2ZW5pbmcnLFxuICAgIG5pZ2h0OiAnYXQgbmlnaHQnXG4gIH0sXG4gIHdpZGU6IHtcbiAgICBhbTogJ2EubS4nLFxuICAgIHBtOiAncC5tLicsXG4gICAgbWlkbmlnaHQ6ICdtaWRuaWdodCcsXG4gICAgbm9vbjogJ25vb24nLFxuICAgIG1vcm5pbmc6ICdpbiB0aGUgbW9ybmluZycsXG4gICAgYWZ0ZXJub29uOiAnaW4gdGhlIGFmdGVybm9vbicsXG4gICAgZXZlbmluZzogJ2luIHRoZSBldmVuaW5nJyxcbiAgICBuaWdodDogJ2F0IG5pZ2h0J1xuICB9XG59O1xuXG5mdW5jdGlvbiBvcmRpbmFsTnVtYmVyKGRpcnR5TnVtYmVyLCBfZGlydHlPcHRpb25zKSB7XG4gIHZhciBudW1iZXIgPSBOdW1iZXIoZGlydHlOdW1iZXIpOyAvLyBJZiBvcmRpbmFsIG51bWJlcnMgZGVwZW5kIG9uIGNvbnRleHQsIGZvciBleGFtcGxlLFxuICAvLyBpZiB0aGV5IGFyZSBkaWZmZXJlbnQgZm9yIGRpZmZlcmVudCBncmFtbWF0aWNhbCBnZW5kZXJzLFxuICAvLyB1c2UgYG9wdGlvbnMudW5pdGA6XG4gIC8vXG4gIC8vICAgdmFyIG9wdGlvbnMgPSBkaXJ0eU9wdGlvbnMgfHwge31cbiAgLy8gICB2YXIgdW5pdCA9IFN0cmluZyhvcHRpb25zLnVuaXQpXG4gIC8vXG4gIC8vIHdoZXJlIGB1bml0YCBjYW4gYmUgJ3llYXInLCAncXVhcnRlcicsICdtb250aCcsICd3ZWVrJywgJ2RhdGUnLCAnZGF5T2ZZZWFyJyxcbiAgLy8gJ2RheScsICdob3VyJywgJ21pbnV0ZScsICdzZWNvbmQnXG5cbiAgdmFyIHJlbTEwMCA9IG51bWJlciAlIDEwMDtcblxuICBpZiAocmVtMTAwID4gMjAgfHwgcmVtMTAwIDwgMTApIHtcbiAgICBzd2l0Y2ggKHJlbTEwMCAlIDEwKSB7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHJldHVybiBudW1iZXIgKyAnc3QnO1xuXG4gICAgICBjYXNlIDI6XG4gICAgICAgIHJldHVybiBudW1iZXIgKyAnbmQnO1xuXG4gICAgICBjYXNlIDM6XG4gICAgICAgIHJldHVybiBudW1iZXIgKyAncmQnO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudW1iZXIgKyAndGgnO1xufVxuXG52YXIgbG9jYWxpemUgPSB7XG4gIG9yZGluYWxOdW1iZXI6IG9yZGluYWxOdW1iZXIsXG4gIGVyYTogYnVpbGRMb2NhbGl6ZUZuKHtcbiAgICB2YWx1ZXM6IGVyYVZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6ICd3aWRlJ1xuICB9KSxcbiAgcXVhcnRlcjogYnVpbGRMb2NhbGl6ZUZuKHtcbiAgICB2YWx1ZXM6IHF1YXJ0ZXJWYWx1ZXMsXG4gICAgZGVmYXVsdFdpZHRoOiAnd2lkZScsXG4gICAgYXJndW1lbnRDYWxsYmFjazogZnVuY3Rpb24gKHF1YXJ0ZXIpIHtcbiAgICAgIHJldHVybiBOdW1iZXIocXVhcnRlcikgLSAxO1xuICAgIH1cbiAgfSksXG4gIG1vbnRoOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogbW9udGhWYWx1ZXMsXG4gICAgZGVmYXVsdFdpZHRoOiAnd2lkZSdcbiAgfSksXG4gIGRheTogYnVpbGRMb2NhbGl6ZUZuKHtcbiAgICB2YWx1ZXM6IGRheVZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6ICd3aWRlJ1xuICB9KSxcbiAgZGF5UGVyaW9kOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogZGF5UGVyaW9kVmFsdWVzLFxuICAgIGRlZmF1bHRXaWR0aDogJ3dpZGUnLFxuICAgIGZvcm1hdHRpbmdWYWx1ZXM6IGZvcm1hdHRpbmdEYXlQZXJpb2RWYWx1ZXMsXG4gICAgZGVmYXVsdEZvcm1hdHRpbmdXaWR0aDogJ3dpZGUnXG4gIH0pXG59O1xuZXhwb3J0IGRlZmF1bHQgbG9jYWxpemU7IiwiaW1wb3J0IGJ1aWxkTWF0Y2hQYXR0ZXJuRm4gZnJvbSAnLi4vLi4vLi4vX2xpYi9idWlsZE1hdGNoUGF0dGVybkZuL2luZGV4LmpzJztcbmltcG9ydCBidWlsZE1hdGNoRm4gZnJvbSAnLi4vLi4vLi4vX2xpYi9idWlsZE1hdGNoRm4vaW5kZXguanMnO1xudmFyIG1hdGNoT3JkaW5hbE51bWJlclBhdHRlcm4gPSAvXihcXGQrKSh0aHxzdHxuZHxyZCk/L2k7XG52YXIgcGFyc2VPcmRpbmFsTnVtYmVyUGF0dGVybiA9IC9cXGQrL2k7XG52YXIgbWF0Y2hFcmFQYXR0ZXJucyA9IHtcbiAgbmFycm93OiAvXihifGEpL2ksXG4gIGFiYnJldmlhdGVkOiAvXihiXFwuP1xccz9jXFwuP3xiXFwuP1xccz9jXFwuP1xccz9lXFwuP3xhXFwuP1xccz9kXFwuP3xjXFwuP1xccz9lXFwuPykvaSxcbiAgd2lkZTogL14oYmVmb3JlIGNocmlzdHxiZWZvcmUgY29tbW9uIGVyYXxhbm5vIGRvbWluaXxjb21tb24gZXJhKS9pXG59O1xudmFyIHBhcnNlRXJhUGF0dGVybnMgPSB7XG4gIGFueTogWy9eYi9pLCAvXihhfGMpL2ldXG59O1xudmFyIG1hdGNoUXVhcnRlclBhdHRlcm5zID0ge1xuICBuYXJyb3c6IC9eWzEyMzRdL2ksXG4gIGFiYnJldmlhdGVkOiAvXnFbMTIzNF0vaSxcbiAgd2lkZTogL15bMTIzNF0odGh8c3R8bmR8cmQpPyBxdWFydGVyL2lcbn07XG52YXIgcGFyc2VRdWFydGVyUGF0dGVybnMgPSB7XG4gIGFueTogWy8xL2ksIC8yL2ksIC8zL2ksIC80L2ldXG59O1xudmFyIG1hdGNoTW9udGhQYXR0ZXJucyA9IHtcbiAgbmFycm93OiAvXltqZm1hc29uZF0vaSxcbiAgYWJicmV2aWF0ZWQ6IC9eKGphbnxmZWJ8bWFyfGFwcnxtYXl8anVufGp1bHxhdWd8c2VwfG9jdHxub3Z8ZGVjKS9pLFxuICB3aWRlOiAvXihqYW51YXJ5fGZlYnJ1YXJ5fG1hcmNofGFwcmlsfG1heXxqdW5lfGp1bHl8YXVndXN0fHNlcHRlbWJlcnxvY3RvYmVyfG5vdmVtYmVyfGRlY2VtYmVyKS9pXG59O1xudmFyIHBhcnNlTW9udGhQYXR0ZXJucyA9IHtcbiAgbmFycm93OiBbL15qL2ksIC9eZi9pLCAvXm0vaSwgL15hL2ksIC9ebS9pLCAvXmovaSwgL15qL2ksIC9eYS9pLCAvXnMvaSwgL15vL2ksIC9ebi9pLCAvXmQvaV0sXG4gIGFueTogWy9eamEvaSwgL15mL2ksIC9ebWFyL2ksIC9eYXAvaSwgL15tYXkvaSwgL15qdW4vaSwgL15qdWwvaSwgL15hdS9pLCAvXnMvaSwgL15vL2ksIC9ebi9pLCAvXmQvaV1cbn07XG52YXIgbWF0Y2hEYXlQYXR0ZXJucyA9IHtcbiAgbmFycm93OiAvXltzbXR3Zl0vaSxcbiAgc2hvcnQ6IC9eKHN1fG1vfHR1fHdlfHRofGZyfHNhKS9pLFxuICBhYmJyZXZpYXRlZDogL14oc3VufG1vbnx0dWV8d2VkfHRodXxmcml8c2F0KS9pLFxuICB3aWRlOiAvXihzdW5kYXl8bW9uZGF5fHR1ZXNkYXl8d2VkbmVzZGF5fHRodXJzZGF5fGZyaWRheXxzYXR1cmRheSkvaVxufTtcbnZhciBwYXJzZURheVBhdHRlcm5zID0ge1xuICBuYXJyb3c6IFsvXnMvaSwgL15tL2ksIC9edC9pLCAvXncvaSwgL150L2ksIC9eZi9pLCAvXnMvaV0sXG4gIGFueTogWy9ec3UvaSwgL15tL2ksIC9edHUvaSwgL153L2ksIC9edGgvaSwgL15mL2ksIC9ec2EvaV1cbn07XG52YXIgbWF0Y2hEYXlQZXJpb2RQYXR0ZXJucyA9IHtcbiAgbmFycm93OiAvXihhfHB8bWl8bnwoaW4gdGhlfGF0KSAobW9ybmluZ3xhZnRlcm5vb258ZXZlbmluZ3xuaWdodCkpL2ksXG4gIGFueTogL14oW2FwXVxcLj9cXHM/bVxcLj98bWlkbmlnaHR8bm9vbnwoaW4gdGhlfGF0KSAobW9ybmluZ3xhZnRlcm5vb258ZXZlbmluZ3xuaWdodCkpL2lcbn07XG52YXIgcGFyc2VEYXlQZXJpb2RQYXR0ZXJucyA9IHtcbiAgYW55OiB7XG4gICAgYW06IC9eYS9pLFxuICAgIHBtOiAvXnAvaSxcbiAgICBtaWRuaWdodDogL15taS9pLFxuICAgIG5vb246IC9ebm8vaSxcbiAgICBtb3JuaW5nOiAvbW9ybmluZy9pLFxuICAgIGFmdGVybm9vbjogL2FmdGVybm9vbi9pLFxuICAgIGV2ZW5pbmc6IC9ldmVuaW5nL2ksXG4gICAgbmlnaHQ6IC9uaWdodC9pXG4gIH1cbn07XG52YXIgbWF0Y2ggPSB7XG4gIG9yZGluYWxOdW1iZXI6IGJ1aWxkTWF0Y2hQYXR0ZXJuRm4oe1xuICAgIG1hdGNoUGF0dGVybjogbWF0Y2hPcmRpbmFsTnVtYmVyUGF0dGVybixcbiAgICBwYXJzZVBhdHRlcm46IHBhcnNlT3JkaW5hbE51bWJlclBhdHRlcm4sXG4gICAgdmFsdWVDYWxsYmFjazogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICByZXR1cm4gcGFyc2VJbnQodmFsdWUsIDEwKTtcbiAgICB9XG4gIH0pLFxuICBlcmE6IGJ1aWxkTWF0Y2hGbih7XG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hFcmFQYXR0ZXJucyxcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogJ3dpZGUnLFxuICAgIHBhcnNlUGF0dGVybnM6IHBhcnNlRXJhUGF0dGVybnMsXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6ICdhbnknXG4gIH0pLFxuICBxdWFydGVyOiBidWlsZE1hdGNoRm4oe1xuICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoUXVhcnRlclBhdHRlcm5zLFxuICAgIGRlZmF1bHRNYXRjaFdpZHRoOiAnd2lkZScsXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VRdWFydGVyUGF0dGVybnMsXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6ICdhbnknLFxuICAgIHZhbHVlQ2FsbGJhY2s6IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgcmV0dXJuIGluZGV4ICsgMTtcbiAgICB9XG4gIH0pLFxuICBtb250aDogYnVpbGRNYXRjaEZuKHtcbiAgICBtYXRjaFBhdHRlcm5zOiBtYXRjaE1vbnRoUGF0dGVybnMsXG4gICAgZGVmYXVsdE1hdGNoV2lkdGg6ICd3aWRlJyxcbiAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZU1vbnRoUGF0dGVybnMsXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6ICdhbnknXG4gIH0pLFxuICBkYXk6IGJ1aWxkTWF0Y2hGbih7XG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hEYXlQYXR0ZXJucyxcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogJ3dpZGUnLFxuICAgIHBhcnNlUGF0dGVybnM6IHBhcnNlRGF5UGF0dGVybnMsXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6ICdhbnknXG4gIH0pLFxuICBkYXlQZXJpb2Q6IGJ1aWxkTWF0Y2hGbih7XG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hEYXlQZXJpb2RQYXR0ZXJucyxcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogJ2FueScsXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VEYXlQZXJpb2RQYXR0ZXJucyxcbiAgICBkZWZhdWx0UGFyc2VXaWR0aDogJ2FueSdcbiAgfSlcbn07XG5leHBvcnQgZGVmYXVsdCBtYXRjaDsiLCJpbXBvcnQgYXNzaWduIGZyb20gJy4uL2Fzc2lnbi9pbmRleC5qcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjbG9uZU9iamVjdChkaXJ0eU9iamVjdCkge1xuICByZXR1cm4gYXNzaWduKHt9LCBkaXJ0eU9iamVjdCk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgZGlydHlPYmplY3QpIHtcbiAgaWYgKHRhcmdldCA9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXNzaWduIHJlcXVpcmVzIHRoYXQgaW5wdXQgcGFyYW1ldGVyIG5vdCBiZSBudWxsIG9yIHVuZGVmaW5lZCcpO1xuICB9XG5cbiAgZGlydHlPYmplY3QgPSBkaXJ0eU9iamVjdCB8fCB7fTtcblxuICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBkaXJ0eU9iamVjdCkge1xuICAgIGlmIChkaXJ0eU9iamVjdC5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICAgIHRhcmdldFtwcm9wZXJ0eV0gPSBkaXJ0eU9iamVjdFtwcm9wZXJ0eV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJ2YXIgTUlMTElTRUNPTkRTX0lOX01JTlVURSA9IDYwMDAwO1xuXG5mdW5jdGlvbiBnZXREYXRlTWlsbGlzZWNvbmRzUGFydChkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFRpbWUoKSAlIE1JTExJU0VDT05EU19JTl9NSU5VVEU7XG59XG4vKipcbiAqIEdvb2dsZSBDaHJvbWUgYXMgb2YgNjcuMC4zMzk2Ljg3IGludHJvZHVjZWQgdGltZXpvbmVzIHdpdGggb2Zmc2V0IHRoYXQgaW5jbHVkZXMgc2Vjb25kcy5cbiAqIFRoZXkgdXN1YWxseSBhcHBlYXIgZm9yIGRhdGVzIHRoYXQgZGVub3RlIHRpbWUgYmVmb3JlIHRoZSB0aW1lem9uZXMgd2VyZSBpbnRyb2R1Y2VkXG4gKiAoZS5nLiBmb3IgJ0V1cm9wZS9QcmFndWUnIHRpbWV6b25lIHRoZSBvZmZzZXQgaXMgR01UKzAwOjU3OjQ0IGJlZm9yZSAxIE9jdG9iZXIgMTg5MVxuICogYW5kIEdNVCswMTowMDowMCBhZnRlciB0aGF0IGRhdGUpXG4gKlxuICogRGF0ZSNnZXRUaW1lem9uZU9mZnNldCByZXR1cm5zIHRoZSBvZmZzZXQgaW4gbWludXRlcyBhbmQgd291bGQgcmV0dXJuIDU3IGZvciB0aGUgZXhhbXBsZSBhYm92ZSxcbiAqIHdoaWNoIHdvdWxkIGxlYWQgdG8gaW5jb3JyZWN0IGNhbGN1bGF0aW9ucy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIHRpbWV6b25lIG9mZnNldCBpbiBtaWxsaXNlY29uZHMgdGhhdCB0YWtlcyBzZWNvbmRzIGluIGFjY291bnQuXG4gKi9cblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzKGRpcnR5RGF0ZSkge1xuICB2YXIgZGF0ZSA9IG5ldyBEYXRlKGRpcnR5RGF0ZS5nZXRUaW1lKCkpO1xuICB2YXIgYmFzZVRpbWV6b25lT2Zmc2V0ID0gTWF0aC5jZWlsKGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKSk7XG4gIGRhdGUuc2V0U2Vjb25kcygwLCAwKTtcbiAgdmFyIGhhc05lZ2F0aXZlVVRDT2Zmc2V0ID0gYmFzZVRpbWV6b25lT2Zmc2V0ID4gMDtcbiAgdmFyIG1pbGxpc2Vjb25kc1BhcnRPZlRpbWV6b25lT2Zmc2V0ID0gaGFzTmVnYXRpdmVVVENPZmZzZXQgPyAoTUlMTElTRUNPTkRTX0lOX01JTlVURSArIGdldERhdGVNaWxsaXNlY29uZHNQYXJ0KGRhdGUpKSAlIE1JTExJU0VDT05EU19JTl9NSU5VVEUgOiBnZXREYXRlTWlsbGlzZWNvbmRzUGFydChkYXRlKTtcbiAgcmV0dXJuIGJhc2VUaW1lem9uZU9mZnNldCAqIE1JTExJU0VDT05EU19JTl9NSU5VVEUgKyBtaWxsaXNlY29uZHNQYXJ0T2ZUaW1lem9uZU9mZnNldDtcbn0iLCJpbXBvcnQgY29tcGFyZUFzYyBmcm9tICcuLi9jb21wYXJlQXNjL2luZGV4LmpzJztcbmltcG9ydCBkaWZmZXJlbmNlSW5Nb250aHMgZnJvbSAnLi4vZGlmZmVyZW5jZUluTW9udGhzL2luZGV4LmpzJztcbmltcG9ydCBkaWZmZXJlbmNlSW5TZWNvbmRzIGZyb20gJy4uL2RpZmZlcmVuY2VJblNlY29uZHMvaW5kZXguanMnO1xuaW1wb3J0IGRlZmF1bHRMb2NhbGUgZnJvbSAnLi4vbG9jYWxlL2VuLVVTL2luZGV4LmpzJztcbmltcG9ydCB0b0RhdGUgZnJvbSAnLi4vdG9EYXRlL2luZGV4LmpzJztcbmltcG9ydCBjbG9uZU9iamVjdCBmcm9tICcuLi9fbGliL2Nsb25lT2JqZWN0L2luZGV4LmpzJztcbmltcG9ydCBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzIGZyb20gJy4uL19saWIvZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcy9pbmRleC5qcyc7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gJy4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzJztcbnZhciBNSU5VVEVTX0lOX0RBWSA9IDE0NDA7XG52YXIgTUlOVVRFU19JTl9BTE1PU1RfVFdPX0RBWVMgPSAyNTIwO1xudmFyIE1JTlVURVNfSU5fTU9OVEggPSA0MzIwMDtcbnZhciBNSU5VVEVTX0lOX1RXT19NT05USFMgPSA4NjQwMDtcbi8qKlxuICogQG5hbWUgZm9ybWF0RGlzdGFuY2VcbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgUmV0dXJuIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcyBpbiB3b3Jkcy5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFJldHVybiB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZXMgaW4gd29yZHMuXG4gKlxuICogfCBEaXN0YW5jZSBiZXR3ZWVuIGRhdGVzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFJlc3VsdCAgICAgICAgICAgICAgfFxuICogfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tfFxuICogfCAwIC4uLiAzMCBzZWNzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGxlc3MgdGhhbiBhIG1pbnV0ZSAgfFxuICogfCAzMCBzZWNzIC4uLiAxIG1pbiAzMCBzZWNzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDEgbWludXRlICAgICAgICAgICAgfFxuICogfCAxIG1pbiAzMCBzZWNzIC4uLiA0NCBtaW5zIDMwIHNlY3MgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFsyLi40NF0gbWludXRlcyAgICAgfFxuICogfCA0NCBtaW5zIC4uLiAzMCBzZWNzIC4uLiA4OSBtaW5zIDMwIHNlY3MgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFib3V0IDEgaG91ciAgICAgICAgfFxuICogfCA4OSBtaW5zIDMwIHNlY3MgLi4uIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgICAgICAgICAgICAgICAgICAgICAgICB8IGFib3V0IFsyLi4yNF0gaG91cnMgfFxuICogfCAyMyBocnMgNTkgbWlucyAzMCBzZWNzIC4uLiA0MSBocnMgNTkgbWlucyAzMCBzZWNzICAgICAgICAgICAgICAgICB8IDEgZGF5ICAgICAgICAgICAgICAgfFxuICogfCA0MSBocnMgNTkgbWlucyAzMCBzZWNzIC4uLiAyOSBkYXlzIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgICAgICAgICB8IFsyLi4zMF0gZGF5cyAgICAgICAgfFxuICogfCAyOSBkYXlzIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgLi4uIDQ0IGRheXMgMjMgaHJzIDU5IG1pbnMgMzAgc2VjcyB8IGFib3V0IDEgbW9udGggICAgICAgfFxuICogfCA0NCBkYXlzIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgLi4uIDU5IGRheXMgMjMgaHJzIDU5IG1pbnMgMzAgc2VjcyB8IGFib3V0IDIgbW9udGhzICAgICAgfFxuICogfCA1OSBkYXlzIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgLi4uIDEgeXIgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFsyLi4xMl0gbW9udGhzICAgICAgfFxuICogfCAxIHlyIC4uLiAxIHlyIDMgbW9udGhzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFib3V0IDEgeWVhciAgICAgICAgfFxuICogfCAxIHlyIDMgbW9udGhzIC4uLiAxIHlyIDkgbW9udGggcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IG92ZXIgMSB5ZWFyICAgICAgICAgfFxuICogfCAxIHlyIDkgbW9udGhzIC4uLiAyIHlycyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFsbW9zdCAyIHllYXJzICAgICAgfFxuICogfCBOIHlycyAuLi4gTiB5cnMgMyBtb250aHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFib3V0IE4geWVhcnMgICAgICAgfFxuICogfCBOIHlycyAzIG1vbnRocyAuLi4gTiB5cnMgOSBtb250aHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IG92ZXIgTiB5ZWFycyAgICAgICAgfFxuICogfCBOIHlycyA5IG1vbnRocyAuLi4gTisxIHlycyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFsbW9zdCBOKzEgeWVhcnMgICAgfFxuICpcbiAqIFdpdGggYG9wdGlvbnMuaW5jbHVkZVNlY29uZHMgPT0gdHJ1ZWA6XG4gKiB8IERpc3RhbmNlIGJldHdlZW4gZGF0ZXMgfCBSZXN1bHQgICAgICAgICAgICAgICB8XG4gKiB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS18XG4gKiB8IDAgc2VjcyAuLi4gNSBzZWNzICAgICAgfCBsZXNzIHRoYW4gNSBzZWNvbmRzICB8XG4gKiB8IDUgc2VjcyAuLi4gMTAgc2VjcyAgICAgfCBsZXNzIHRoYW4gMTAgc2Vjb25kcyB8XG4gKiB8IDEwIHNlY3MgLi4uIDIwIHNlY3MgICAgfCBsZXNzIHRoYW4gMjAgc2Vjb25kcyB8XG4gKiB8IDIwIHNlY3MgLi4uIDQwIHNlY3MgICAgfCBoYWxmIGEgbWludXRlICAgICAgICB8XG4gKiB8IDQwIHNlY3MgLi4uIDYwIHNlY3MgICAgfCBsZXNzIHRoYW4gYSBtaW51dGUgICB8XG4gKiB8IDYwIHNlY3MgLi4uIDkwIHNlY3MgICAgfCAxIG1pbnV0ZSAgICAgICAgICAgICB8XG4gKlxuICogIyMjIHYyLjAuMCBicmVha2luZyBjaGFuZ2VzOlxuICpcbiAqIC0gW0NoYW5nZXMgdGhhdCBhcmUgY29tbW9uIGZvciB0aGUgd2hvbGUgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdXBncmFkZUd1aWRlLm1kI0NvbW1vbi1DaGFuZ2VzKS5cbiAqXG4gKiAtIFRoZSBmdW5jdGlvbiB3YXMgcmVuYW1lZCBmcm9tIGBkaXN0YW5jZUluV29yZHMgYCB0byBgZm9ybWF0RGlzdGFuY2VgXG4gKiAgIHRvIG1ha2UgaXRzIG5hbWUgY29uc2lzdGVudCB3aXRoIGBmb3JtYXRgIGFuZCBgZm9ybWF0UmVsYXRpdmVgLlxuICpcbiAqIC0gVGhlIG9yZGVyIG9mIGFyZ3VtZW50cyBpcyBzd2FwcGVkIHRvIG1ha2UgdGhlIGZ1bmN0aW9uXG4gKiAgIGNvbnNpc3RlbnQgd2l0aCBgZGlmZmVyZW5jZUluLi4uYCBmdW5jdGlvbnMuXG4gKlxuICogICBgYGBqYXZhc2NyaXB0XG4gKiAgIC8vIEJlZm9yZSB2Mi4wLjBcbiAqXG4gKiAgIGRpc3RhbmNlSW5Xb3JkcyhcbiAqICAgICBuZXcgRGF0ZSgxOTg2LCAzLCA0LCAxMCwgMzIsIDApLFxuICogICAgIG5ldyBEYXRlKDE5ODYsIDMsIDQsIDExLCAzMiwgMCksXG4gKiAgICAgeyBhZGRTdWZmaXg6IHRydWUgfVxuICogICApIC8vPT4gJ2luIGFib3V0IDEgaG91cidcbiAqXG4gKiAgIC8vIHYyLjAuMCBvbndhcmRcbiAqXG4gKiAgIGZvcm1hdERpc3RhbmNlKFxuICogICAgIG5ldyBEYXRlKDE5ODYsIDMsIDQsIDExLCAzMiwgMCksXG4gKiAgICAgbmV3IERhdGUoMTk4NiwgMywgNCwgMTAsIDMyLCAwKSxcbiAqICAgICB7IGFkZFN1ZmZpeDogdHJ1ZSB9XG4gKiAgICkgLy89PiAnaW4gYWJvdXQgMSBob3VyJ1xuICogICBgYGBcbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlIC0gdGhlIGRhdGVcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGJhc2VEYXRlIC0gdGhlIGRhdGUgdG8gY29tcGFyZSB3aXRoXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gYW4gb2JqZWN0IHdpdGggb3B0aW9ucy5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuaW5jbHVkZVNlY29uZHM9ZmFsc2VdIC0gZGlzdGFuY2VzIGxlc3MgdGhhbiBhIG1pbnV0ZSBhcmUgbW9yZSBkZXRhaWxlZFxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hZGRTdWZmaXg9ZmFsc2VdIC0gcmVzdWx0IGluZGljYXRlcyBpZiB0aGUgc2Vjb25kIGRhdGUgaXMgZWFybGllciBvciBsYXRlciB0aGFuIHRoZSBmaXJzdFxuICogQHBhcmFtIHtMb2NhbGV9IFtvcHRpb25zLmxvY2FsZT1kZWZhdWx0TG9jYWxlXSAtIHRoZSBsb2NhbGUgb2JqZWN0LiBTZWUgW0xvY2FsZV17QGxpbmsgaHR0cHM6Ly9kYXRlLWZucy5vcmcvZG9jcy9Mb2NhbGV9XG4gKiBAcmV0dXJucyB7U3RyaW5nfSB0aGUgZGlzdGFuY2UgaW4gd29yZHNcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGBkYXRlYCBtdXN0IG5vdCBiZSBJbnZhbGlkIERhdGVcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGBiYXNlRGF0ZWAgbXVzdCBub3QgYmUgSW52YWxpZCBEYXRlXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy5sb2NhbGVgIG11c3QgY29udGFpbiBgZm9ybWF0RGlzdGFuY2VgIHByb3BlcnR5XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFdoYXQgaXMgdGhlIGRpc3RhbmNlIGJldHdlZW4gMiBKdWx5IDIwMTQgYW5kIDEgSmFudWFyeSAyMDE1P1xuICogdmFyIHJlc3VsdCA9IGZvcm1hdERpc3RhbmNlKG5ldyBEYXRlKDIwMTQsIDYsIDIpLCBuZXcgRGF0ZSgyMDE1LCAwLCAxKSlcbiAqIC8vPT4gJzYgbW9udGhzJ1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBXaGF0IGlzIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIDEgSmFudWFyeSAyMDE1IDAwOjAwOjE1XG4gKiAvLyBhbmQgMSBKYW51YXJ5IDIwMTUgMDA6MDA6MDAsIGluY2x1ZGluZyBzZWNvbmRzP1xuICogdmFyIHJlc3VsdCA9IGZvcm1hdERpc3RhbmNlKFxuICogICBuZXcgRGF0ZSgyMDE1LCAwLCAxLCAwLCAwLCAxNSksXG4gKiAgIG5ldyBEYXRlKDIwMTUsIDAsIDEsIDAsIDAsIDApLFxuICogICB7IGluY2x1ZGVTZWNvbmRzOiB0cnVlIH1cbiAqIClcbiAqIC8vPT4gJ2xlc3MgdGhhbiAyMCBzZWNvbmRzJ1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBXaGF0IGlzIHRoZSBkaXN0YW5jZSBmcm9tIDEgSmFudWFyeSAyMDE2XG4gKiAvLyB0byAxIEphbnVhcnkgMjAxNSwgd2l0aCBhIHN1ZmZpeD9cbiAqIHZhciByZXN1bHQgPSBmb3JtYXREaXN0YW5jZShuZXcgRGF0ZSgyMDE1LCAwLCAxKSwgbmV3IERhdGUoMjAxNiwgMCwgMSksIHtcbiAqICAgYWRkU3VmZml4OiB0cnVlXG4gKiB9KVxuICogLy89PiAnYWJvdXQgMSB5ZWFyIGFnbydcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gV2hhdCBpcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiAxIEF1Z3VzdCAyMDE2IGFuZCAxIEphbnVhcnkgMjAxNSBpbiBFc3BlcmFudG8/XG4gKiBpbXBvcnQgeyBlb0xvY2FsZSB9IGZyb20gJ2RhdGUtZm5zL2xvY2FsZS9lbydcbiAqIHZhciByZXN1bHQgPSBmb3JtYXREaXN0YW5jZShuZXcgRGF0ZSgyMDE2LCA3LCAxKSwgbmV3IERhdGUoMjAxNSwgMCwgMSksIHtcbiAqICAgbG9jYWxlOiBlb0xvY2FsZVxuICogfSlcbiAqIC8vPT4gJ3BsaSBvbCAxIGphcm8nXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0RGlzdGFuY2UoZGlydHlEYXRlLCBkaXJ0eUJhc2VEYXRlLCBkaXJ0eU9wdGlvbnMpIHtcbiAgcmVxdWlyZWRBcmdzKDIsIGFyZ3VtZW50cyk7XG4gIHZhciBvcHRpb25zID0gZGlydHlPcHRpb25zIHx8IHt9O1xuICB2YXIgbG9jYWxlID0gb3B0aW9ucy5sb2NhbGUgfHwgZGVmYXVsdExvY2FsZTtcblxuICBpZiAoIWxvY2FsZS5mb3JtYXREaXN0YW5jZSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdsb2NhbGUgbXVzdCBjb250YWluIGZvcm1hdERpc3RhbmNlIHByb3BlcnR5Jyk7XG4gIH1cblxuICB2YXIgY29tcGFyaXNvbiA9IGNvbXBhcmVBc2MoZGlydHlEYXRlLCBkaXJ0eUJhc2VEYXRlKTtcblxuICBpZiAoaXNOYU4oY29tcGFyaXNvbikpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW52YWxpZCB0aW1lIHZhbHVlJyk7XG4gIH1cblxuICB2YXIgbG9jYWxpemVPcHRpb25zID0gY2xvbmVPYmplY3Qob3B0aW9ucyk7XG4gIGxvY2FsaXplT3B0aW9ucy5hZGRTdWZmaXggPSBCb29sZWFuKG9wdGlvbnMuYWRkU3VmZml4KTtcbiAgbG9jYWxpemVPcHRpb25zLmNvbXBhcmlzb24gPSBjb21wYXJpc29uO1xuICB2YXIgZGF0ZUxlZnQ7XG4gIHZhciBkYXRlUmlnaHQ7XG5cbiAgaWYgKGNvbXBhcmlzb24gPiAwKSB7XG4gICAgZGF0ZUxlZnQgPSB0b0RhdGUoZGlydHlCYXNlRGF0ZSk7XG4gICAgZGF0ZVJpZ2h0ID0gdG9EYXRlKGRpcnR5RGF0ZSk7XG4gIH0gZWxzZSB7XG4gICAgZGF0ZUxlZnQgPSB0b0RhdGUoZGlydHlEYXRlKTtcbiAgICBkYXRlUmlnaHQgPSB0b0RhdGUoZGlydHlCYXNlRGF0ZSk7XG4gIH1cblxuICB2YXIgc2Vjb25kcyA9IGRpZmZlcmVuY2VJblNlY29uZHMoZGF0ZVJpZ2h0LCBkYXRlTGVmdCk7XG4gIHZhciBvZmZzZXRJblNlY29uZHMgPSAoZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhkYXRlUmlnaHQpIC0gZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhkYXRlTGVmdCkpIC8gMTAwMDtcbiAgdmFyIG1pbnV0ZXMgPSBNYXRoLnJvdW5kKChzZWNvbmRzIC0gb2Zmc2V0SW5TZWNvbmRzKSAvIDYwKTtcbiAgdmFyIG1vbnRoczsgLy8gMCB1cCB0byAyIG1pbnNcblxuICBpZiAobWludXRlcyA8IDIpIHtcbiAgICBpZiAob3B0aW9ucy5pbmNsdWRlU2Vjb25kcykge1xuICAgICAgaWYgKHNlY29uZHMgPCA1KSB7XG4gICAgICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoJ2xlc3NUaGFuWFNlY29uZHMnLCA1LCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfSBlbHNlIGlmIChzZWNvbmRzIDwgMTApIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnbGVzc1RoYW5YU2Vjb25kcycsIDEwLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfSBlbHNlIGlmIChzZWNvbmRzIDwgMjApIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnbGVzc1RoYW5YU2Vjb25kcycsIDIwLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfSBlbHNlIGlmIChzZWNvbmRzIDwgNDApIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnaGFsZkFNaW51dGUnLCBudWxsLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfSBlbHNlIGlmIChzZWNvbmRzIDwgNjApIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnbGVzc1RoYW5YTWludXRlcycsIDEsIGxvY2FsaXplT3B0aW9ucyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKCd4TWludXRlcycsIDEsIGxvY2FsaXplT3B0aW9ucyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChtaW51dGVzID09PSAwKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoJ2xlc3NUaGFuWE1pbnV0ZXMnLCAxLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgneE1pbnV0ZXMnLCBtaW51dGVzLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfVxuICAgIH0gLy8gMiBtaW5zIHVwIHRvIDAuNzUgaHJzXG5cbiAgfSBlbHNlIGlmIChtaW51dGVzIDwgNDUpIHtcbiAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKCd4TWludXRlcycsIG1pbnV0ZXMsIGxvY2FsaXplT3B0aW9ucyk7IC8vIDAuNzUgaHJzIHVwIHRvIDEuNSBocnNcbiAgfSBlbHNlIGlmIChtaW51dGVzIDwgOTApIHtcbiAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKCdhYm91dFhIb3VycycsIDEsIGxvY2FsaXplT3B0aW9ucyk7IC8vIDEuNSBocnMgdXAgdG8gMjQgaHJzXG4gIH0gZWxzZSBpZiAobWludXRlcyA8IE1JTlVURVNfSU5fREFZKSB7XG4gICAgdmFyIGhvdXJzID0gTWF0aC5yb3VuZChtaW51dGVzIC8gNjApO1xuICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoJ2Fib3V0WEhvdXJzJywgaG91cnMsIGxvY2FsaXplT3B0aW9ucyk7IC8vIDEgZGF5IHVwIHRvIDEuNzUgZGF5c1xuICB9IGVsc2UgaWYgKG1pbnV0ZXMgPCBNSU5VVEVTX0lOX0FMTU9TVF9UV09fREFZUykge1xuICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoJ3hEYXlzJywgMSwgbG9jYWxpemVPcHRpb25zKTsgLy8gMS43NSBkYXlzIHVwIHRvIDMwIGRheXNcbiAgfSBlbHNlIGlmIChtaW51dGVzIDwgTUlOVVRFU19JTl9NT05USCkge1xuICAgIHZhciBkYXlzID0gTWF0aC5yb3VuZChtaW51dGVzIC8gTUlOVVRFU19JTl9EQVkpO1xuICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoJ3hEYXlzJywgZGF5cywgbG9jYWxpemVPcHRpb25zKTsgLy8gMSBtb250aCB1cCB0byAyIG1vbnRoc1xuICB9IGVsc2UgaWYgKG1pbnV0ZXMgPCBNSU5VVEVTX0lOX1RXT19NT05USFMpIHtcbiAgICBtb250aHMgPSBNYXRoLnJvdW5kKG1pbnV0ZXMgLyBNSU5VVEVTX0lOX01PTlRIKTtcbiAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKCdhYm91dFhNb250aHMnLCBtb250aHMsIGxvY2FsaXplT3B0aW9ucyk7XG4gIH1cblxuICBtb250aHMgPSBkaWZmZXJlbmNlSW5Nb250aHMoZGF0ZVJpZ2h0LCBkYXRlTGVmdCk7IC8vIDIgbW9udGhzIHVwIHRvIDEyIG1vbnRoc1xuXG4gIGlmIChtb250aHMgPCAxMikge1xuICAgIHZhciBuZWFyZXN0TW9udGggPSBNYXRoLnJvdW5kKG1pbnV0ZXMgLyBNSU5VVEVTX0lOX01PTlRIKTtcbiAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKCd4TW9udGhzJywgbmVhcmVzdE1vbnRoLCBsb2NhbGl6ZU9wdGlvbnMpOyAvLyAxIHllYXIgdXAgdG8gbWF4IERhdGVcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9udGhzU2luY2VTdGFydE9mWWVhciA9IG1vbnRocyAlIDEyO1xuICAgIHZhciB5ZWFycyA9IE1hdGguZmxvb3IobW9udGhzIC8gMTIpOyAvLyBOIHllYXJzIHVwIHRvIDEgeWVhcnMgMyBtb250aHNcblxuICAgIGlmIChtb250aHNTaW5jZVN0YXJ0T2ZZZWFyIDwgMykge1xuICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnYWJvdXRYWWVhcnMnLCB5ZWFycywgbG9jYWxpemVPcHRpb25zKTsgLy8gTiB5ZWFycyAzIG1vbnRocyB1cCB0byBOIHllYXJzIDkgbW9udGhzXG4gICAgfSBlbHNlIGlmIChtb250aHNTaW5jZVN0YXJ0T2ZZZWFyIDwgOSkge1xuICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnb3ZlclhZZWFycycsIHllYXJzLCBsb2NhbGl6ZU9wdGlvbnMpOyAvLyBOIHllYXJzIDkgbW9udGhzIHVwIHRvIE4geWVhciAxMiBtb250aHNcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnYWxtb3N0WFllYXJzJywgeWVhcnMgKyAxLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgIH1cbiAgfVxufSIsImltcG9ydCBkaXN0YW5jZUluV29yZHMgZnJvbSAnLi4vZm9ybWF0RGlzdGFuY2UvaW5kZXguanMnO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tICcuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qcyc7XG4vKipcbiAqIEBuYW1lIGZvcm1hdERpc3RhbmNlVG9Ob3dcbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgUmV0dXJuIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlIGFuZCBub3cgaW4gd29yZHMuXG4gKiBAcHVyZSBmYWxzZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJuIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlIGFuZCBub3cgaW4gd29yZHMuXG4gKlxuICogfCBEaXN0YW5jZSB0byBub3cgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFJlc3VsdCAgICAgICAgICAgICAgfFxuICogfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tfFxuICogfCAwIC4uLiAzMCBzZWNzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGxlc3MgdGhhbiBhIG1pbnV0ZSAgfFxuICogfCAzMCBzZWNzIC4uLiAxIG1pbiAzMCBzZWNzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDEgbWludXRlICAgICAgICAgICAgfFxuICogfCAxIG1pbiAzMCBzZWNzIC4uLiA0NCBtaW5zIDMwIHNlY3MgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFsyLi40NF0gbWludXRlcyAgICAgfFxuICogfCA0NCBtaW5zIC4uLiAzMCBzZWNzIC4uLiA4OSBtaW5zIDMwIHNlY3MgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFib3V0IDEgaG91ciAgICAgICAgfFxuICogfCA4OSBtaW5zIDMwIHNlY3MgLi4uIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgICAgICAgICAgICAgICAgICAgICAgICB8IGFib3V0IFsyLi4yNF0gaG91cnMgfFxuICogfCAyMyBocnMgNTkgbWlucyAzMCBzZWNzIC4uLiA0MSBocnMgNTkgbWlucyAzMCBzZWNzICAgICAgICAgICAgICAgICB8IDEgZGF5ICAgICAgICAgICAgICAgfFxuICogfCA0MSBocnMgNTkgbWlucyAzMCBzZWNzIC4uLiAyOSBkYXlzIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgICAgICAgICB8IFsyLi4zMF0gZGF5cyAgICAgICAgfFxuICogfCAyOSBkYXlzIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgLi4uIDQ0IGRheXMgMjMgaHJzIDU5IG1pbnMgMzAgc2VjcyB8IGFib3V0IDEgbW9udGggICAgICAgfFxuICogfCA0NCBkYXlzIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgLi4uIDU5IGRheXMgMjMgaHJzIDU5IG1pbnMgMzAgc2VjcyB8IGFib3V0IDIgbW9udGhzICAgICAgfFxuICogfCA1OSBkYXlzIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgLi4uIDEgeXIgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFsyLi4xMl0gbW9udGhzICAgICAgfFxuICogfCAxIHlyIC4uLiAxIHlyIDMgbW9udGhzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFib3V0IDEgeWVhciAgICAgICAgfFxuICogfCAxIHlyIDMgbW9udGhzIC4uLiAxIHlyIDkgbW9udGggcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IG92ZXIgMSB5ZWFyICAgICAgICAgfFxuICogfCAxIHlyIDkgbW9udGhzIC4uLiAyIHlycyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFsbW9zdCAyIHllYXJzICAgICAgfFxuICogfCBOIHlycyAuLi4gTiB5cnMgMyBtb250aHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFib3V0IE4geWVhcnMgICAgICAgfFxuICogfCBOIHlycyAzIG1vbnRocyAuLi4gTiB5cnMgOSBtb250aHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IG92ZXIgTiB5ZWFycyAgICAgICAgfFxuICogfCBOIHlycyA5IG1vbnRocyAuLi4gTisxIHlycyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFsbW9zdCBOKzEgeWVhcnMgICAgfFxuICpcbiAqIFdpdGggYG9wdGlvbnMuaW5jbHVkZVNlY29uZHMgPT0gdHJ1ZWA6XG4gKiB8IERpc3RhbmNlIHRvIG5vdyAgICAgfCBSZXN1bHQgICAgICAgICAgICAgICB8XG4gKiB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS18XG4gKiB8IDAgc2VjcyAuLi4gNSBzZWNzICAgfCBsZXNzIHRoYW4gNSBzZWNvbmRzICB8XG4gKiB8IDUgc2VjcyAuLi4gMTAgc2VjcyAgfCBsZXNzIHRoYW4gMTAgc2Vjb25kcyB8XG4gKiB8IDEwIHNlY3MgLi4uIDIwIHNlY3MgfCBsZXNzIHRoYW4gMjAgc2Vjb25kcyB8XG4gKiB8IDIwIHNlY3MgLi4uIDQwIHNlY3MgfCBoYWxmIGEgbWludXRlICAgICAgICB8XG4gKiB8IDQwIHNlY3MgLi4uIDYwIHNlY3MgfCBsZXNzIHRoYW4gYSBtaW51dGUgICB8XG4gKiB8IDYwIHNlY3MgLi4uIDkwIHNlY3MgfCAxIG1pbnV0ZSAgICAgICAgICAgICB8XG4gKlxuICogPiDimqDvuI8gUGxlYXNlIG5vdGUgdGhhdCB0aGlzIGZ1bmN0aW9uIGlzIG5vdCBwcmVzZW50IGluIHRoZSBGUCBzdWJtb2R1bGUgYXNcbiAqID4gaXQgdXNlcyBgRGF0ZS5ub3coKWAgaW50ZXJuYWxseSBoZW5jZSBpbXB1cmUgYW5kIGNhbid0IGJlIHNhZmVseSBjdXJyaWVkLlxuICpcbiAqICMjIyB2Mi4wLjAgYnJlYWtpbmcgY2hhbmdlczpcbiAqXG4gKiAtIFtDaGFuZ2VzIHRoYXQgYXJlIGNvbW1vbiBmb3IgdGhlIHdob2xlIGxpYnJhcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VwZ3JhZGVHdWlkZS5tZCNDb21tb24tQ2hhbmdlcykuXG4gKlxuICogLSBUaGUgZnVuY3Rpb24gd2FzIHJlbmFtZWQgZnJvbSBgZGlzdGFuY2VJbldvcmRzVG9Ob3cgYCB0byBgZm9ybWF0RGlzdGFuY2VUb05vd2BcbiAqICAgdG8gbWFrZSBpdHMgbmFtZSBjb25zaXN0ZW50IHdpdGggYGZvcm1hdGAgYW5kIGBmb3JtYXRSZWxhdGl2ZWAuXG4gKlxuICogICBgYGBqYXZhc2NyaXB0XG4gKiAgIC8vIEJlZm9yZSB2Mi4wLjBcbiAqXG4gKiAgIGRpc3RhbmNlSW5Xb3Jkc1RvTm93KG5ldyBEYXRlKDIwMTQsIDYsIDIpLCB7IGFkZFN1ZmZpeDogdHJ1ZSB9KVxuICogICAvLz0+ICdpbiA2IG1vbnRocydcbiAqXG4gKiAgIC8vIHYyLjAuMCBvbndhcmRcbiAqXG4gKiAgIGZvcm1hdERpc3RhbmNlVG9Ob3cobmV3IERhdGUoMjAxNCwgNiwgMiksIHsgYWRkU3VmZml4OiB0cnVlIH0pXG4gKiAgIC8vPT4gJ2luIDYgbW9udGhzJ1xuICogICBgYGBcbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlIC0gdGhlIGdpdmVuIGRhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSB0aGUgb2JqZWN0IHdpdGggb3B0aW9uc1xuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5pbmNsdWRlU2Vjb25kcz1mYWxzZV0gLSBkaXN0YW5jZXMgbGVzcyB0aGFuIGEgbWludXRlIGFyZSBtb3JlIGRldGFpbGVkXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFkZFN1ZmZpeD1mYWxzZV0gLSByZXN1bHQgc3BlY2lmaWVzIGlmIG5vdyBpcyBlYXJsaWVyIG9yIGxhdGVyIHRoYW4gdGhlIHBhc3NlZCBkYXRlXG4gKiBAcGFyYW0ge0xvY2FsZX0gW29wdGlvbnMubG9jYWxlPWRlZmF1bHRMb2NhbGVdIC0gdGhlIGxvY2FsZSBvYmplY3QuIFNlZSBbTG9jYWxlXXtAbGluayBodHRwczovL2RhdGUtZm5zLm9yZy9kb2NzL0xvY2FsZX1cbiAqIEByZXR1cm5zIHtTdHJpbmd9IHRoZSBkaXN0YW5jZSBpbiB3b3Jkc1xuICogQHRocm93cyB7VHlwZUVycm9yfSAxIGFyZ3VtZW50IHJlcXVpcmVkXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgZGF0ZWAgbXVzdCBub3QgYmUgSW52YWxpZCBEYXRlXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy5sb2NhbGVgIG11c3QgY29udGFpbiBgZm9ybWF0RGlzdGFuY2VgIHByb3BlcnR5XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElmIHRvZGF5IGlzIDEgSmFudWFyeSAyMDE1LCB3aGF0IGlzIHRoZSBkaXN0YW5jZSB0byAyIEp1bHkgMjAxND9cbiAqIHZhciByZXN1bHQgPSBmb3JtYXREaXN0YW5jZVRvTm93KFxuICogICBuZXcgRGF0ZSgyMDE0LCA2LCAyKVxuICogKVxuICogLy89PiAnNiBtb250aHMnXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElmIG5vdyBpcyAxIEphbnVhcnkgMjAxNSAwMDowMDowMCxcbiAqIC8vIHdoYXQgaXMgdGhlIGRpc3RhbmNlIHRvIDEgSmFudWFyeSAyMDE1IDAwOjAwOjE1LCBpbmNsdWRpbmcgc2Vjb25kcz9cbiAqIHZhciByZXN1bHQgPSBmb3JtYXREaXN0YW5jZVRvTm93KFxuICogICBuZXcgRGF0ZSgyMDE1LCAwLCAxLCAwLCAwLCAxNSksXG4gKiAgIHtpbmNsdWRlU2Vjb25kczogdHJ1ZX1cbiAqIClcbiAqIC8vPT4gJ2xlc3MgdGhhbiAyMCBzZWNvbmRzJ1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBJZiB0b2RheSBpcyAxIEphbnVhcnkgMjAxNSxcbiAqIC8vIHdoYXQgaXMgdGhlIGRpc3RhbmNlIHRvIDEgSmFudWFyeSAyMDE2LCB3aXRoIGEgc3VmZml4P1xuICogdmFyIHJlc3VsdCA9IGZvcm1hdERpc3RhbmNlVG9Ob3coXG4gKiAgIG5ldyBEYXRlKDIwMTYsIDAsIDEpLFxuICogICB7YWRkU3VmZml4OiB0cnVlfVxuICogKVxuICogLy89PiAnaW4gYWJvdXQgMSB5ZWFyJ1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBJZiB0b2RheSBpcyAxIEphbnVhcnkgMjAxNSxcbiAqIC8vIHdoYXQgaXMgdGhlIGRpc3RhbmNlIHRvIDEgQXVndXN0IDIwMTYgaW4gRXNwZXJhbnRvP1xuICogdmFyIGVvTG9jYWxlID0gcmVxdWlyZSgnZGF0ZS1mbnMvbG9jYWxlL2VvJylcbiAqIHZhciByZXN1bHQgPSBmb3JtYXREaXN0YW5jZVRvTm93KFxuICogICBuZXcgRGF0ZSgyMDE2LCA3LCAxKSxcbiAqICAge2xvY2FsZTogZW9Mb2NhbGV9XG4gKiApXG4gKiAvLz0+ICdwbGkgb2wgMSBqYXJvJ1xuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvcm1hdERpc3RhbmNlVG9Ob3coZGlydHlEYXRlLCBkaXJ0eU9wdGlvbnMpIHtcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHJldHVybiBkaXN0YW5jZUluV29yZHMoZGlydHlEYXRlLCBEYXRlLm5vdygpLCBkaXJ0eU9wdGlvbnMpO1xufSIsImltcG9ydCBhZGRUYXNrSWNvbiBmcm9tIFwiLi9hZGQucG5nXCI7XG5pbXBvcnQgeyBjYW5jZWxBZGRUYXNrICwgYWRkVGFzaywgZGVsZXRlVGFzaywgY2FuY2VsRWRpdFRhc2sgLCBzdWJtaXRFZGl0VGFza30gZnJvbSBcIi4vbGlzdG5lcnNcIjtcbmltcG9ydCBlZGl0VGFza0ljb24gZnJvbSBcIi4vcGVuY2lsLnBuZ1wiO1xuaW1wb3J0IGRlbGV0ZVRhc2tJY29uICBmcm9tIFwiLi9jYW5jZWwucG5nXCI7XG5pbXBvcnQgZm9ybWF0RGlzdGFuY2VUb05vdyBmcm9tICdkYXRlLWZucy9mb3JtYXREaXN0YW5jZVRvTm93J1xuXG5jb25zdCBkaXNwbGF5VGFzayA9ICh0YXNrKT0+e1xuICBjb25zdCB0YXNrQ2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICB0YXNrQ2FyZC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3Rhc2tfY2FyZCcpO1xuICB0YXNrQ2FyZC5zZXRBdHRyaWJ1dGUoJ2lkJywgYHRhc2tfY2FyZF8ke3Rhc2sucHJvaklkfV8ke3Rhc2suaWR9YCk7XG5cbiAgLy8gZGlzcGxheWluZyB0aGUgdGFzayBtb2RlXG4gIGNvbnN0IGRpdlNob3dNb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRpdlNob3dNb2RlLnNldEF0dHJpYnV0ZSgnaWQnLCBgdGFza19zaG93X21vZGVfJHt0YXNrLnByb2pJZH1fJHt0YXNrLmlkfWApO1xuICBkaXZTaG93TW9kZS5jbGFzc0xpc3QuYWRkKCdzaG93X2Rpdl90YXNrJyk7XG5cbiAgY29uc3QgZGl2U2hvd01vZGVMZWZ0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRpdlNob3dNb2RlTGVmdC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2Rpdl9zaG93X21vZGVfbGVmdCcpO1xuICBjb25zdCBwcmlvcml0eUJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBwcmlvcml0eUJveC5zZXRBdHRyaWJ1dGUoJ2lkJywgYGRpc3BsYXlfdGFza19wcmlvcml0eV8ke3Rhc2sucHJvaklkfV8ke3Rhc2suaWR9YCk7XG4gIHByaW9yaXR5Qm94LmNsYXNzTGlzdC5hZGQoYHByaW9yaXR5X2JveF8ke3Rhc2sucHJpb3JpdHl9YCwgXCJwcmlvcml0eV9ib3hcIik7XG4gIGNvbnN0IHRhc2tUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XG4gIHRhc2tUaXRsZS5zZXRBdHRyaWJ1dGUoJ2lkJywgYGRpc3BsYXlfdGFza190aXRsZV8ke3Rhc2sucHJvaklkfV8ke3Rhc2suaWR9YCk7XG4gIHRhc2tUaXRsZS50ZXh0Q29udGVudCA9IHRhc2sudGl0bGU7XG4gIGRpdlNob3dNb2RlTGVmdC5hcHBlbmQocHJpb3JpdHlCb3gsIHRhc2tUaXRsZSk7XG5cbiAgY29uc3QgZGl2U2hvd01vZGVSaWdodCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXZTaG93TW9kZVJpZ2h0LnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnZGl2X3Nob3dfbW9kZV9yaWdodCcpO1xuXG4gIGNvbnN0IHNwYW5EdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICBzcGFuRHVlRGF0ZS50ZXh0Q29udGVudCA9IGZvcm1hdERpc3RhbmNlVG9Ob3codGFzay5mb3JtYXRlZER1ZURhdGUoKSx7YWRkU3VmZml4OiB0cnVlfSk7XG4gIHNwYW5EdWVEYXRlLnNldEF0dHJpYnV0ZSgnaWQnLCBgZGlzcGxheV90YXNrX2RhdGVfJHt0YXNrLnByb2pJZH1fJHt0YXNrLmlkfWApO1xuXG4gIGNvbnN0IGVkaXRUYXNrSW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgZWRpdFRhc2tJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGVkaXRUYXNrSWNvbik7XG4gIGVkaXRUYXNrSW1hZ2Uuc2V0QXR0cmlidXRlKCdjbGFzcycsICdhZGRfcHJval9pY29uJyk7XG4gIGVkaXRUYXNrSW1hZ2UuZGF0YXNldC5UYXNrSWQgPSB0YXNrLmlkO1xuICBlZGl0VGFza0ltYWdlLmRhdGFzZXQuVGFza1Byb2pJZCA9IHRhc2sucHJvaklkO1xuICBlZGl0VGFza0ltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiBjYW5jZWxFZGl0VGFzayhlKSk7XG5cbiAgY29uc3QgZGVsZXRlVGFza0ltYWdlID0gbmV3IEltYWdlKCk7XG4gIGRlbGV0ZVRhc2tJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGRlbGV0ZVRhc2tJY29uKTtcbiAgZGVsZXRlVGFza0ltYWdlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Byb2pfaWNvbicpO1xuICBkZWxldGVUYXNrSW1hZ2UuZGF0YXNldC5UYXNrSWQgPSB0YXNrLmlkO1xuICBkZWxldGVUYXNrSW1hZ2UuZGF0YXNldC5UYXNrUHJvaklkID0gdGFzay5wcm9qSWQ7XG4gIGRlbGV0ZVRhc2tJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4gZGVsZXRlVGFzayhlKSk7XG5cbiAgZGl2U2hvd01vZGVSaWdodC5hcHBlbmQoc3BhbkR1ZURhdGUsIGVkaXRUYXNrSW1hZ2UsIGRlbGV0ZVRhc2tJbWFnZSk7XG5cbiAgY29uc3QgZGl2U2hvd01vZGVUb3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZGl2U2hvd01vZGVUb3Auc2V0QXR0cmlidXRlKCdjbGFzcycsICdkaXZfc2hvd19tb2RlX3RvcCcpO1xuICBkaXZTaG93TW9kZVRvcC5hcHBlbmQoZGl2U2hvd01vZGVMZWZ0LCBkaXZTaG93TW9kZVJpZ2h0KTtcbiAgLy8gZGVzY3JpcHRpb24gaW4gdGhlIGJ1dHRvbVxuXG4gIGNvbnN0IGRpdlNob3dNb2RlQnV0dG9tID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRpdlNob3dNb2RlQnV0dG9tLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnZGl2X3Nob3dfbW9kZV9idXR0b20nKTtcblxuICBjb25zdCBzcGFuRGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHNwYW5EZXNjcmlwdGlvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgYGRpc3BsYXlfdGFza19kZXNjcmlwdGlvbl8ke3Rhc2sucHJvaklkfV8ke3Rhc2suaWR9YCk7XG4gIHNwYW5EZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IHRhc2suZGVzY3JpcHRpb247XG5cbiAgY29uc3Qgc3BhblN0YXR1cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgc3BhblN0YXR1cy5zZXRBdHRyaWJ1dGUoJ2lkJywgYGRpc3BsYXlfdGFza19zdGF0dXNfJHt0YXNrLnByb2pJZH1fJHt0YXNrLmlkfWApO1xuICBzcGFuU3RhdHVzLmNsYXNzTGlzdC5hZGQoJ3Rhc2tfc3RhdHVzJywgYHRhc2tfc3RhdHVzXyR7dGFzay5zdGF0dXN9YCk7XG4gIHNwYW5TdGF0dXMudGV4dENvbnRlbnQgPSB0YXNrLnN0YXR1cztcblxuICBkaXZTaG93TW9kZUJ1dHRvbS5hcHBlbmQoc3BhbkRlc2NyaXB0aW9uLCBzcGFuU3RhdHVzKTtcblxuICAvLyBlZGl0aW5nIHRoZSB0YXNrIG1vZGVcblxuICBjb25zdCBkaXZFZGl0TW9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXZFZGl0TW9kZS5zZXRBdHRyaWJ1dGUoJ2lkJywgYHRhc2tfZWRpdF9tb2RlXyR7dGFzay5wcm9qSWR9XyR7dGFzay5pZH1gKTtcbiAgZGl2RWRpdE1vZGUuY2xhc3NMaXN0LmFkZCgnZWRpdF9kaXZfdGFzaycsICdoaWRlJyk7XG4gIC8vIEVkaXQgRm9ybVxuICBjb25zdCBlZGl0VGFza0Zvcm1XcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGVkaXRUYXNrRm9ybVdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnZWRpdF90YXNrX2Zvcm1fd3JhcHBlcicpO1xuICBjb25zdCBlZGl0VGFza1RpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBlZGl0VGFza1RpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTtcbiAgZWRpdFRhc2tUaXRsZUlucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCBgZWRpdF90YXNrX3RpdGxlXyR7dGFzay5wcm9qSWR9XyR7dGFzay5pZH1gKTtcbiAgZWRpdFRhc2tUaXRsZUlucHV0LnNldEF0dHJpYnV0ZSgndmFsdWUnLCB0YXNrLnRpdGxlKTtcblxuICBjb25zdCBlZGl0VGFza0Rlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBlZGl0VGFza0Rlc2NyaXB0aW9uSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTtcbiAgZWRpdFRhc2tEZXNjcmlwdGlvbklucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCBgZWRpdF90YXNrX2Rlc2NyaXB0aW9uXyR7dGFzay5wcm9qSWR9XyR7dGFzay5pZH1gKTtcbiAgZWRpdFRhc2tEZXNjcmlwdGlvbklucHV0LnNldEF0dHJpYnV0ZSgndmFsdWUnLCB0YXNrLmRlc2NyaXB0aW9uKTtcblxuICBjb25zdCBlZGl0UHJpb3JpdHlTcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICBlZGl0UHJpb3JpdHlTcGFuLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnZWRpdF90YXNrX3NlbGVjdF9zcGFuJyk7XG4gIGNvbnN0IGVkaXRQcmlvcml0eUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgZWRpdFByaW9yaXR5TGFiZWwudGV4dENvbnRlbnQgPSAnUHJpb3JpdHk6J1xuICBlZGl0UHJpb3JpdHlMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGBlZGl0X3Rhc2tfcHJpb3JpdHlfJHt0YXNrLnByb2pJZH1fJHt0YXNrLmlkfWApO1xuICBjb25zdCBlZGl0UHJpb3JpdHlTZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWxlY3QnKTtcbiAgZWRpdFByaW9yaXR5U2VsZWN0LnNldEF0dHJpYnV0ZSgnaWQnLCBgZWRpdF90YXNrX3ByaW9yaXR5XyR7dGFzay5wcm9qSWR9XyR7dGFzay5pZH1gKTtcbiAgY29uc3QgZWRpdFByaW9yaXR5T3B0aW9uMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICBlZGl0UHJpb3JpdHlPcHRpb24xLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnaGlnaHQnKTtcbiAgZWRpdFByaW9yaXR5T3B0aW9uMS50ZXh0Q29udGVudCA9ICdIaWdodCc7XG4gIGNvbnN0IGVkaXRQcmlvcml0eU9wdGlvbjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgZWRpdFByaW9yaXR5T3B0aW9uMi5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJ21lZGl1bScpO1xuICBlZGl0UHJpb3JpdHlPcHRpb24yLnRleHRDb250ZW50ID0gJ01lZGl1bSc7XG4gIGNvbnN0IGVkaXRQcmlvcml0eU9wdGlvbjMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgZWRpdFByaW9yaXR5T3B0aW9uMy5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJ2xvdycpO1xuICBlZGl0UHJpb3JpdHlPcHRpb24zLnRleHRDb250ZW50ID0gJ0xvdyc7XG4gIFxuICBlZGl0UHJpb3JpdHlTZWxlY3QuYXBwZW5kKGVkaXRQcmlvcml0eU9wdGlvbjEsIGVkaXRQcmlvcml0eU9wdGlvbjIsIGVkaXRQcmlvcml0eU9wdGlvbjMpO1xuICBlZGl0UHJpb3JpdHlTZWxlY3QudmFsdWUgPSB0YXNrLnByaW9yaXR5O1xuICBlZGl0UHJpb3JpdHlTcGFuLmFwcGVuZChlZGl0UHJpb3JpdHlMYWJlbCwgZWRpdFByaW9yaXR5U2VsZWN0KTtcblxuXG4gIGNvbnN0IGVkaXRTdGF0dXNTcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICBlZGl0U3RhdHVzU3Bhbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2VkaXRfdGFza19zZWxlY3Rfc3BhbicpO1xuICBjb25zdCBlZGl0U3RhdHVzTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICBlZGl0U3RhdHVzTGFiZWwudGV4dENvbnRlbnQgPSAnU3RhdHVzOidcbiAgZWRpdFN0YXR1c0xhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgYGVkaXRfdGFza19zdGF0dXNfJHt0YXNrLnByb2pJZH1fJHt0YXNrLmlkfWApO1xuICBjb25zdCBlZGl0U3RhdHVzU2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0Jyk7XG4gIGVkaXRTdGF0dXNTZWxlY3Quc2V0QXR0cmlidXRlKCdpZCcsIGBlZGl0X3Rhc2tfc3RhdHVzXyR7dGFzay5wcm9qSWR9XyR7dGFzay5pZH1gKTtcbiAgY29uc3QgZWRpdFN0YXR1c09wdGlvbjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgZWRpdFN0YXR1c09wdGlvbjEuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdUby1kbycpO1xuICBlZGl0U3RhdHVzT3B0aW9uMS50ZXh0Q29udGVudCA9ICdUby1kbyc7XG4gIGNvbnN0IGVkaXRTdGF0dXNPcHRpb24yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gIGVkaXRTdGF0dXNPcHRpb24yLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnSW4tcHJvZ3Jlc3MnKTtcbiAgZWRpdFN0YXR1c09wdGlvbjIudGV4dENvbnRlbnQgPSAnSW4gcHJvZ3Jlc3MnO1xuICBjb25zdCBlZGl0U3RhdHVzT3B0aW9uMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICBlZGl0U3RhdHVzT3B0aW9uMy5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJ0RvbmUnKTtcbiAgZWRpdFN0YXR1c09wdGlvbjMudGV4dENvbnRlbnQgPSAnRG9uZSc7XG4gIFxuICBlZGl0U3RhdHVzU2VsZWN0LmFwcGVuZChlZGl0U3RhdHVzT3B0aW9uMSwgZWRpdFN0YXR1c09wdGlvbjIsIGVkaXRTdGF0dXNPcHRpb24zKTtcbiAgZWRpdFN0YXR1c1NlbGVjdC52YWx1ZSA9IHRhc2suc3RhdHVzO1xuICBlZGl0U3RhdHVzU3Bhbi5hcHBlbmQoZWRpdFN0YXR1c0xhYmVsLCBlZGl0U3RhdHVzU2VsZWN0KTtcblxuICBjb25zdCBlZGl0RGF0ZVNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIGVkaXRQcmlvcml0eVNwYW4uc2V0QXR0cmlidXRlKCdjbGFzcycsICdlZGl0X3Rhc2tfZGF0ZV9zcGFuJyk7XG4gIGNvbnN0IGVkaXREYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICBlZGl0RGF0ZUxhYmVsLnRleHRDb250ZW50ID0gJ1NjaGVkdWxlOidcbiAgZWRpdERhdGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGBlZGl0X3Rhc2tfZGF0ZV8ke3Rhc2sucHJvaklkfV8ke3Rhc2suaWR9YCk7XG4gIGNvbnN0IGVkaXREYXRlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBlZGl0RGF0ZUlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICdkYXRlJyk7XG4gIGVkaXREYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsIGBlZGl0X3Rhc2tfZGF0ZV8ke3Rhc2sucHJvaklkfV8ke3Rhc2suaWR9YCk7XG4gIGVkaXREYXRlU3Bhbi5hcHBlbmQoZWRpdERhdGVMYWJlbCwgZWRpdERhdGVJbnB1dCk7XG5cbiAgY29uc3QgZWRpdFRhc2tGb3JtQnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBlZGl0VGFza0Zvcm1CdXR0b25zLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnZWRpdF90YXNrX2Zvcm1fYnV0dG9ucycpO1xuICBjb25zdCBlZGl0VGFza0Zvcm1TdWJtaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgZWRpdFRhc2tGb3JtU3VibWl0LmRhdGFzZXQuVGFza0lkID0gdGFzay5pZDtcbiAgZWRpdFRhc2tGb3JtU3VibWl0LmRhdGFzZXQuVGFza1Byb2pJZCA9IHRhc2sucHJvaklkO1xuICBlZGl0VGFza0Zvcm1TdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4gc3VibWl0RWRpdFRhc2soZSkpO1xuICBlZGl0VGFza0Zvcm1TdWJtaXQudGV4dENvbnRlbnQgPSAnU3VibWl0JztcblxuICBjb25zdCBlZGl0VGFza0Zvcm1DYW5jZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgZWRpdFRhc2tGb3JtQ2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCc7XG4gIGVkaXRUYXNrRm9ybUNhbmNlbC5kYXRhc2V0LlRhc2tJZCA9IHRhc2suaWQ7XG4gIGVkaXRUYXNrRm9ybUNhbmNlbC5kYXRhc2V0LlRhc2tQcm9qSWQgPSB0YXNrLnByb2pJZDtcblxuXG4gIGVkaXRUYXNrRm9ybUNhbmNlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICBlID0+IGNhbmNlbEVkaXRUYXNrKGUpKTtcblxuICBlZGl0VGFza0Zvcm1CdXR0b25zLmFwcGVuZChlZGl0VGFza0Zvcm1TdWJtaXQgLCBlZGl0VGFza0Zvcm1DYW5jZWwpO1xuXG4gIGVkaXRUYXNrRm9ybVdyYXBwZXIuYXBwZW5kKGVkaXRUYXNrVGl0bGVJbnB1dCwgZWRpdFRhc2tEZXNjcmlwdGlvbklucHV0LCBlZGl0UHJpb3JpdHlTcGFuLCBlZGl0U3RhdHVzU3BhbiwgZWRpdERhdGVTcGFuLCBlZGl0VGFza0Zvcm1CdXR0b25zKTtcblxuICAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIGRpdkVkaXRNb2RlLmFwcGVuZChlZGl0VGFza0Zvcm1XcmFwcGVyKTtcblxuICBkaXZTaG93TW9kZS5hcHBlbmQoZGl2U2hvd01vZGVUb3AsIGRpdlNob3dNb2RlQnV0dG9tKTtcbiAgdGFza0NhcmQuYXBwZW5kKGRpdlNob3dNb2RlLCBkaXZFZGl0TW9kZSk7XG5cbiAgcmV0dXJuIHRhc2tDYXJkO1xufVxuXG5jb25zdCB0YXNrTmF2ID0gKG15cHJvamVjdCkgPT4ge1xuICAvLyB3cmFwcGVyXG4gIGNvbnN0IGRpdk5hdldyYXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZGl2TmF2V3JhcC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3RhYmNvbnRlbnQnKTtcbiAgZGl2TmF2V3JhcC5zZXRBdHRyaWJ1dGUoJ2lkJywgYHByb2pfJHtteXByb2plY3QuaWR9YCk7XG5cbiAgLy8gY29uc3QgYnJhbmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgLy8gYnJhbmQuc2V0QXR0cmlidXRlKCdjbGFzcycsICdwcm9qZWN0X3RpdGxlJyk7XG4gIC8vIGJyYW5kLnRleHRDb250ZW50ID0gbXlwcm9qZWN0LnRpdGxlICsgJ3RoZSBpZCcgKyBteXByb2plY3QuaWQ7XG5cbiAgLy8gcHJvamVjdCBoZWFkZXJcbiAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGhlYWRlci5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3Byb2plY3RfaGVhZGVyJyk7XG4gIGNvbnN0IGhlYWRlclRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgaGVhZGVyVGl0bGUuc2V0QXR0cmlidXRlKCdjbGFzcycsICdoZWFkZXJfdGl0bGUnKTtcbiAgaGVhZGVyVGl0bGUudGV4dENvbnRlbnQgPSBteXByb2plY3QudGl0bGU7XG5cblxuICAvLyBhZGQgdGFzayBoZWFkZXJcbiAgXG4gIGNvbnN0IGhlYWRlckFkZFRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgaGVhZGVyQWRkVGFzay5kYXRhc2V0LnByb2plY3RJZCA9IG15cHJvamVjdC5pZDtcbiAgaGVhZGVyQWRkVGFzay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4gY2FuY2VsQWRkVGFzayhlKSk7XG5cbiAgaGVhZGVyQWRkVGFzay5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2hlYWRlcl9hZGRfdGFzaycpO1xuICBjb25zdCBhZGRUYXNrSW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgYWRkVGFza0ltYWdlLnNldEF0dHJpYnV0ZSgnc3JjJywgYWRkVGFza0ljb24pO1xuICBhZGRUYXNrSW1hZ2Uuc2V0QXR0cmlidXRlKCdjbGFzcycsICdhZGRfcHJval9pY29uJyk7XG4gIGNvbnN0IGFkZFRhc2tTcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICBhZGRUYXNrU3Bhbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZF90YXNrX3NwYW4nKTtcbiAgYWRkVGFza1NwYW4udGV4dENvbnRlbnQgPSAnQWRkIGEgVGFzayc7XG4gIGhlYWRlckFkZFRhc2suYXBwZW5kKGFkZFRhc2tJbWFnZSwgYWRkVGFza1NwYW4pO1xuXG5cblxuICBoZWFkZXIuYXBwZW5kKGhlYWRlclRpdGxlLCBoZWFkZXJBZGRUYXNrKTtcblxuICAvLyBhZGQgdGFzayBmb3JtXG5cbiAgY29uc3QgYWRkVGFza0Zvcm1XcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGFkZFRhc2tGb3JtV3JhcHBlci5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZF90YXNrX2Zvcm1fd3JhcHBlcicpO1xuICBhZGRUYXNrRm9ybVdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnaGlkZScpO1xuICBhZGRUYXNrRm9ybVdyYXBwZXIuc2V0QXR0cmlidXRlKCdpZCcsIGBhZGRfdGFza19mb3JtXyR7bXlwcm9qZWN0LmlkfWApO1xuXG4gIGNvbnN0IGFkZFRhc2tUaXRsZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgYWRkVGFza1RpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTtcbiAgYWRkVGFza1RpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsIGB0YXNrX3RpdGxlXyR7bXlwcm9qZWN0LmlkfWApO1xuICBhZGRUYXNrVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgJ1R5cGUgeW91ciB0YXNrIHRpdGxlIGhlcmUhJyk7XG5cbiAgY29uc3QgYWRkVGFza0Rlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBhZGRUYXNrRGVzY3JpcHRpb25JbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICBhZGRUYXNrRGVzY3JpcHRpb25JbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgYHRhc2tfZGVzY3JpcHRpb25fJHtteXByb2plY3QuaWR9YCk7XG4gIGFkZFRhc2tEZXNjcmlwdGlvbklucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAnVHlwZSBhIGRlc2NyaXB0aW9uIGZvciB5b3VyIHRhc2sgaGVyZSEnKTtcblxuICBjb25zdCBhZGRQcmlvcml0eVNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIGFkZFByaW9yaXR5U3Bhbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZF90YXNrX3NlbGVjdF9zcGFuJyk7XG4gIGNvbnN0IGFkZFByaW9yaXR5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICBhZGRQcmlvcml0eUxhYmVsLnRleHRDb250ZW50ID0gJ1ByaW9yaXR5OidcbiAgYWRkUHJpb3JpdHlMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGB0YXNrX3ByaW9yaXR5XyR7bXlwcm9qZWN0LmlkfWApO1xuICBjb25zdCBhZGRQcmlvcml0eVNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuICBhZGRQcmlvcml0eVNlbGVjdC5zZXRBdHRyaWJ1dGUoJ2lkJywgYHRhc2tfcHJpb3JpdHlfJHtteXByb2plY3QuaWR9YCk7XG4gIGNvbnN0IGFkZFByaW9yaXR5T3B0aW9uMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICBhZGRQcmlvcml0eU9wdGlvbjEuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdoaWdodCcpO1xuICBhZGRQcmlvcml0eU9wdGlvbjEudGV4dENvbnRlbnQgPSAnSGlnaHQnO1xuICBjb25zdCBhZGRQcmlvcml0eU9wdGlvbjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgYWRkUHJpb3JpdHlPcHRpb24yLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnbWVkaXVtJyk7XG4gIGFkZFByaW9yaXR5T3B0aW9uMi50ZXh0Q29udGVudCA9ICdNZWRpdW0nO1xuICBjb25zdCBhZGRQcmlvcml0eU9wdGlvbjMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgYWRkUHJpb3JpdHlPcHRpb24zLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnbG93Jyk7XG4gIGFkZFByaW9yaXR5T3B0aW9uMy50ZXh0Q29udGVudCA9ICdMb3cnO1xuXG4gIGFkZFByaW9yaXR5U2VsZWN0LmFwcGVuZChhZGRQcmlvcml0eU9wdGlvbjEsIGFkZFByaW9yaXR5T3B0aW9uMiwgYWRkUHJpb3JpdHlPcHRpb24zKTtcbiAgYWRkUHJpb3JpdHlTcGFuLmFwcGVuZChhZGRQcmlvcml0eUxhYmVsLCBhZGRQcmlvcml0eVNlbGVjdCk7XG5cbiAgY29uc3QgYWRkRGF0ZVNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIGFkZFByaW9yaXR5U3Bhbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZF90YXNrX2RhdGVfc3BhbicpO1xuICBjb25zdCBhZGREYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICBhZGREYXRlTGFiZWwudGV4dENvbnRlbnQgPSAnU2NoZWR1bGU6J1xuICBhZGREYXRlTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCBgdGFza19kYXRlXyR7bXlwcm9qZWN0LmlkfWApO1xuICBjb25zdCBhZGREYXRlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBhZGREYXRlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2RhdGUnKTtcbiAgYWRkRGF0ZUlucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCBgdGFza19kYXRlXyR7bXlwcm9qZWN0LmlkfWApO1xuICBhZGREYXRlU3Bhbi5hcHBlbmQoYWRkRGF0ZUxhYmVsLCBhZGREYXRlSW5wdXQpO1xuXG4gIGNvbnN0IGFkZFRhc2tGb3JtQnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBhZGRUYXNrRm9ybUJ1dHRvbnMuc2V0QXR0cmlidXRlKCdjbGFzcycsICdhZGRfdGFza19mb3JtX2J1dHRvbnMnKTtcbiAgY29uc3QgYWRkVGFza0Zvcm1DcmVhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgYWRkVGFza0Zvcm1DcmVhdGUuZGF0YXNldC5wcm9qZWN0SWQgPSBteXByb2plY3QuaWQ7XG4gIGFkZFRhc2tGb3JtQ3JlYXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IGFkZFRhc2soZSkpO1xuICBhZGRUYXNrRm9ybUNyZWF0ZS50ZXh0Q29udGVudCA9ICdDcmVhdGUgVGFzayc7XG5cbiAgY29uc3QgYWRkVGFza0Zvcm1DYW5jZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgYWRkVGFza0Zvcm1DYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsJztcbiAgYWRkVGFza0Zvcm1DYW5jZWwuZGF0YXNldC5wcm9qZWN0SWQgPSBteXByb2plY3QuaWQ7XG4gIGFkZFRhc2tGb3JtQ2FuY2VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgIGUgPT4gY2FuY2VsQWRkVGFzayhlKSk7XG5cbiAgYWRkVGFza0Zvcm1CdXR0b25zLmFwcGVuZChhZGRUYXNrRm9ybUNyZWF0ZSAsIGFkZFRhc2tGb3JtQ2FuY2VsKTtcblxuICBhZGRUYXNrRm9ybVdyYXBwZXIuYXBwZW5kKGFkZFRhc2tUaXRsZUlucHV0LCBhZGRUYXNrRGVzY3JpcHRpb25JbnB1dCwgYWRkUHJpb3JpdHlTcGFuLCBhZGREYXRlU3BhbiwgYWRkVGFza0Zvcm1CdXR0b25zKTtcbiAgLy8gdGFza3Mgd3JhcHBlclxuICBcbiAgY29uc3QgdGFza3NXcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHRhc2tzV3JhcHBlci5zZXRBdHRyaWJ1dGUoJ2lkJywgYHRhc2tzX3dyYXBwZXJfJHtteXByb2plY3QuaWR9YCk7XG4gIHRhc2tzV3JhcHBlci5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3Rhc2tzX3dyYXBwZXInKTtcblxuICBteXByb2plY3QudGFza3MuZm9yRWFjaCggZWxlbWVudCA9PiB7XG4gICAgdGFza3NXcmFwcGVyLmFwcGVuZChkaXNwbGF5VGFzayhlbGVtZW50KSk7XG4gICAgcmV0dXJuIHRhc2tzV3JhcHBlcjtcbiAgfSk7XG5cbiAgZGl2TmF2V3JhcC5hcHBlbmQoaGVhZGVyLCBhZGRUYXNrRm9ybVdyYXBwZXIsIHRhc2tzV3JhcHBlcik7XG4gIHJldHVybiBkaXZOYXZXcmFwO1xufVxuXG5cbmV4cG9ydCB7dGFza05hdiAsIGRpc3BsYXlUYXNrfTsiLCJpbXBvcnQgeyBwcm9qZWN0c0xpc3QsIGNvdW50UHJvamVjdHMgLCBkZWxldGVGcm9tUHJvamVjdExpc3QsIGVkaXRQcm9qZWN0VGl0bGUgLCBhZGRUYXNrVG9Qcm9qZWN0LCBmaW5kUHJvamVjdH0gZnJvbSAnLi92YXJpYWJsZXMnO1xuaW1wb3J0IHsgZGlzcGxheVByb2plY3QgfSBmcm9tIFwiLi9wcm9qZWN0TmF2XCI7XG5pbXBvcnQgeyBkaXNwbGF5VGFzayB9IGZyb20gXCIuL3Rhc2tOYXZcIjtcbmltcG9ydCBmb3JtYXREaXN0YW5jZVRvTm93IGZyb20gJ2RhdGUtZm5zL2Zvcm1hdERpc3RhbmNlVG9Ob3cnO1xuY29uc3QgUHJvamVjdCA9IHJlcXVpcmUoJy4vcHJvamVjdCcpLmRlZmF1bHQ7XG5jb25zdCBUYXNrID0gcmVxdWlyZSgnLi90YXNrJykuZGVmYXVsdDtcblxuY29uc3Qgb3BlblRhYiA9IChlKT0+e1xuICAvLyBjb25zb2xlLmxvZyhgYXllZSBjaGV6ICR7ZS50YXJnZXQuZGF0YXNldC5wcm9qZWN0SWR9YCk7XG4gIGxldCBpZCA9IGUudGFyZ2V0LmRhdGFzZXQucHJvamVjdElkO1xuICBsZXQgcHJvamVjdERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qXyR7aWR9YCk7XG4gIGxldCBzaG93biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG93bicpO1xuICBpZiAoc2hvd24gIT09IG51bGwpe1xuICAgIHNob3duLmNsYXNzTGlzdC50b2dnbGUoJ3Nob3duJyk7XG4gIH1cbiAgcHJvamVjdERpdi5jbGFzc0xpc3QudG9nZ2xlKCdzaG93bicpO1xufVxuXG5jb25zdCBhZGRQcm9qZWN0ID0gKCkgPT4ge1xuICBsZXQgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdF90aXRsZScpO1xuICBsZXQgdGl0bGUgPSBpbnB1dC52YWx1ZTtcbiAgY291bnRQcm9qZWN0cyArPSAxO1xuICBjb25zdCBwcm9qZWN0ID0gbmV3IFByb2plY3QodGl0bGUsIGNvdW50UHJvamVjdHMpO1xuICBwcm9qZWN0c0xpc3QucHVzaChwcm9qZWN0KTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2NvdW50UHJvamVjdHMnLCBjb3VudFByb2plY3RzKTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Byb2plY3RzTGlzdCcsIEpTT04uc3RyaW5naWZ5KHByb2plY3RzTGlzdCkpO1xuICAvLyBjb25zb2xlLmxvZyhwcm9qZWN0c0xpc3QpO1xuICBsZXQgdGFicyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YWJzJyk7XG4gIHRhYnMuYXBwZW5kKCBkaXNwbGF5UHJvamVjdChwcm9qZWN0KSApO1xuXG4gIGxldCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZF9wcm9qZWN0X2Zvcm0nKTtcbiAgZm9ybS5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlJyk7XG59XG5cbmNvbnN0IGNhbmNlbEFkZFByb2plY3QgPSAoKSA9PiB7XG4gIGxldCBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0X3RpdGxlJyk7XG4gIGlucHV0LnZhbHVlID0gJyc7XG4gIGxldCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZF9wcm9qZWN0X2Zvcm0nKTtcbiAgZm9ybS5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlJyk7XG59XG5cbmNvbnN0IGRlbGV0ZVByb2plY3QgPSAoZSk9PntcbiAgbGV0IGlkID0gZS50YXJnZXQuZGF0YXNldC5wcm9qZWN0SWQ7XG4gIGxldCB3cmFwcGVyID0gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qZWN0X2NvbnRhaW5lcl8ke2lkfWApO1xuICBsZXQgdGFicyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YWJzJyk7XG4gIHRhYnMucmVtb3ZlQ2hpbGQod3JhcHBlcik7XG4gIC8vIHJlbW92ZSBmcm9tIHByb2plY3QgbGlzdFxuICBkZWxldGVGcm9tUHJvamVjdExpc3QocHJvamVjdHNMaXN0LGlkKTtcbiAgY29uc29sZS5sb2coYGFmdGVyIGRlbGV0ZSAke3Byb2plY3RzTGlzdH1gKTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Byb2plY3RzTGlzdCcsIEpTT04uc3RyaW5naWZ5KHByb2plY3RzTGlzdCkpO1xufVxuXG5jb25zdCBlZGl0UHJvamVjdCA9IChlKSA9PiB7XG4gIGxldCBpZCA9IGUudGFyZ2V0LmRhdGFzZXQucHJvamVjdElkO1xuICBjb25zdCBzcGFuU2hvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qZWN0X3Nob3dfbW9kZV8ke2lkfWApO1xuICBzcGFuU2hvdy5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlJyk7XG4gIGNvbnN0IHNwYW5FZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Byb2plY3RfZWRpdF9tb2RlXyR7aWR9YCk7XG4gIHNwYW5FZGl0LmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcbn1cblxuY29uc3QgY2FuY2VsUHJvamVjdCA9IChlKSA9PiB7XG4gIGxldCBpZCA9IGUudGFyZ2V0LmRhdGFzZXQucHJvamVjdElkO1xuICBjb25zdCBzcGFuU2hvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qZWN0X3Nob3dfbW9kZV8ke2lkfWApO1xuICBzcGFuU2hvdy5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlJyk7XG4gIGNvbnN0IHNwYW5FZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Byb2plY3RfZWRpdF9tb2RlXyR7aWR9YCk7XG4gIHNwYW5FZGl0LmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcbiAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZWRpdF9wcm9qZWN0X3RpdGxlXyR7aWR9YCk7XG4gIGNvbnN0IGJ0blR4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNzaG93X3Byb2plY3RfdGl0bGVfJHtpZH1gKTtcbiAgaW5wdXQudmFsdWUgPSBidG5UeHQudGV4dENvbnRlbnQ7XG59XG5cbmNvbnN0IHN1Ym1pdEVkaXRQcm9qZWN0ID0gKGUpID0+IHtcbiAgbGV0IGlkID0gZS50YXJnZXQuZGF0YXNldC5wcm9qZWN0SWQ7XG4gIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2VkaXRfcHJvamVjdF90aXRsZV8ke2lkfWApO1xuICBlZGl0UHJvamVjdFRpdGxlKHByb2plY3RzTGlzdCwgaWQsIGlucHV0LnZhbHVlKTtcbiAgY29uc3QgYnRuVHh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Nob3dfcHJvamVjdF90aXRsZV8ke2lkfWApO1xuICBidG5UeHQudGV4dENvbnRlbnQgPSBpbnB1dC52YWx1ZTtcbiAgY29uc3Qgc3BhblNob3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjcHJvamVjdF9zaG93X21vZGVfJHtpZH1gKTtcbiAgc3BhblNob3cuY2xhc3NMaXN0LnRvZ2dsZSgnaGlkZScpO1xuICBjb25zdCBzcGFuRWRpdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qZWN0X2VkaXRfbW9kZV8ke2lkfWApO1xuICBzcGFuRWRpdC5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlJyk7XG59XG5cbmNvbnN0IGNhbmNlbEFkZFRhc2sgPSAoZSkgPT4ge1xuICBsZXQgaWQgPSBlLnRhcmdldC5kYXRhc2V0LnByb2plY3RJZDtcbiAgbGV0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdGFza190aXRsZV8ke2lkfWApO1xuICB0aXRsZUlucHV0LnZhbHVlID0gJyc7XG4gIGxldCBkZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Rhc2tfZGVzY3JpcHRpb25fJHtpZH1gKTtcbiAgZGVzY3JpcHRpb25JbnB1dC52YWx1ZSA9ICcnO1xuICBsZXQgcHJpb3JpdHlJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0YXNrX3ByaW9yaXR5XyR7aWR9YCk7XG4gIHByaW9yaXR5SW5wdXQudmFsdWUgPSAnbG93JztcbiAgbGV0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjYWRkX3Rhc2tfZm9ybV8ke2lkfWApO1xuICBmb3JtLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcbn1cblxuY29uc3QgYWRkVGFzayA9IChlKSA9PiB7XG4gIGxldCBpZCA9IGUudGFyZ2V0LmRhdGFzZXQucHJvamVjdElkO1xuICBsZXQgcHJvamVjdEluZHggPSBmaW5kUHJvamVjdChwcm9qZWN0c0xpc3QsIGlkKTtcbiAgbGV0IHByb2plY3QgPSBwcm9qZWN0c0xpc3RbcHJvamVjdEluZHhdO1xuXG4gIGxldCB0aXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Rhc2tfdGl0bGVfJHtpZH1gKTtcbiAgbGV0IHRpdGxlID0gdGl0bGVJbnB1dC52YWx1ZTtcbiAgbGV0IGRlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdGFza19kZXNjcmlwdGlvbl8ke2lkfWApO1xuICBsZXQgZGVzY3JpcHRpb24gPSAgZGVzY3JpcHRpb25JbnB1dC52YWx1ZTtcbiAgbGV0IHByaW9yaXR5SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdGFza19wcmlvcml0eV8ke2lkfWApO1xuICBsZXQgcHJpb3JpdHkgPSBwcmlvcml0eUlucHV0LnZhbHVlO1xuXG4gIGxldCBkYXRlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdGFza19kYXRlXyR7aWR9YCk7XG4gIGxldCBkYXRlID0gZGF0ZUlucHV0LnZhbHVlO1xuXG4gIGNvbnN0IHRhc2sgPSBuZXcgVGFzayh0aXRsZSAsIGRlc2NyaXB0aW9uLCBkYXRlLCBwcmlvcml0eSwgaWQsIHByb2plY3QudGFza0NvdW50ZXIpO1xuICBhZGRUYXNrVG9Qcm9qZWN0KHByb2plY3RzTGlzdCwgaWQsIHRhc2spO1xuICAvLyBjb25zb2xlLmxvZyhwcm9qZWN0c0xpc3QpO1xuICBsZXQgdGFza1dyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdGFza3Nfd3JhcHBlcl8ke2lkfWApO1xuICB0YXNrV3JhcHBlci5hcHBlbmQoIGRpc3BsYXlUYXNrKHRhc2spICk7XG5cbiAgbGV0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjYWRkX3Rhc2tfZm9ybV8ke2lkfWApO1xuICBmb3JtLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Byb2plY3RzTGlzdCcsIEpTT04uc3RyaW5naWZ5KHByb2plY3RzTGlzdCkpO1xufVxuXG5jb25zdCBkZWxldGVUYXNrID0gKGUpPT57XG4gIGxldCB0YXNrSWQgPSBlLnRhcmdldC5kYXRhc2V0LlRhc2tJZDtcbiAgbGV0IHByb2pJZCA9IGUudGFyZ2V0LmRhdGFzZXQuVGFza1Byb2pJZDtcblxuICBsZXQgVGFza0NhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdGFza19jYXJkXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgbGV0IHRhc2tzV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0YXNrc193cmFwcGVyXyR7cHJvaklkfWApO1xuICB0YXNrc1dyYXBwZXIucmVtb3ZlQ2hpbGQoVGFza0NhcmQpO1xuXG5cbiAgLy8gcmVtb3ZlIGZyb20gcHJvamVjdCBsaXN0XG4gIGxldCBwcm9qZWN0SW5keCA9IGZpbmRQcm9qZWN0KHByb2plY3RzTGlzdCwgcHJvaklkKTtcbiAgbGV0IHByb2plY3QgPSBwcm9qZWN0c0xpc3RbcHJvamVjdEluZHhdO1xuICBwcm9qZWN0LnJlbW92ZVRhc2sodGFza0lkKTtcblxuICBjb25zb2xlLmxvZyhgYWZ0ZXIgZGVsZXRlICR7cHJvamVjdC50YXNrc31gKTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Byb2plY3RzTGlzdCcsIEpTT04uc3RyaW5naWZ5KHByb2plY3RzTGlzdCkpO1xufVxuXG5jb25zdCBjYW5jZWxFZGl0VGFzayA9IChlKSA9PiB7XG4gIGxldCB0YXNrSWQgPSBlLnRhcmdldC5kYXRhc2V0LlRhc2tJZDtcbiAgbGV0IHByb2pJZCA9IGUudGFyZ2V0LmRhdGFzZXQuVGFza1Byb2pJZDtcblxuICBsZXQgcHJvamVjdEluZHggPSBmaW5kUHJvamVjdChwcm9qZWN0c0xpc3QsIHByb2pJZCk7XG4gIGxldCBwcm9qZWN0ID0gcHJvamVjdHNMaXN0W3Byb2plY3RJbmR4XTtcbiAgbGV0IHRhc2tJbmRleCA9IGZpbmRQcm9qZWN0KHByb2plY3QudGFza3MsIHRhc2tJZCk7XG4gIGxldCB0YXNrID0gcHJvamVjdC50YXNrc1t0YXNrSW5kZXhdO1xuXG4gIGxldCB0aXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2VkaXRfdGFza190aXRsZV8ke3Byb2pJZH1fJHt0YXNrSWR9YCk7XG4gIHRpdGxlSW5wdXQudmFsdWUgPSB0YXNrLnRpdGxlO1xuICBsZXQgZGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNlZGl0X3Rhc2tfZGVzY3JpcHRpb25fJHtwcm9qSWR9XyR7dGFza0lkfWApO1xuICBkZXNjcmlwdGlvbklucHV0LnZhbHVlID0gdGFzay5kZXNjcmlwdGlvbjtcbiAgbGV0IHByaW9yaXR5SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZWRpdF90YXNrX3ByaW9yaXR5XyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgcHJpb3JpdHlJbnB1dC52YWx1ZSA9IHRhc2sucHJpb3JpdHk7XG4gIGxldCBzdGF0dXNJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNlZGl0X3Rhc2tfc3RhdHVzXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgc3RhdHVzSW5wdXQudmFsdWUgPSB0YXNrLnN0YXR1cztcblxuICBjb25zdCBkaXZTaG93TW9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0YXNrX3Nob3dfbW9kZV8ke3Byb2pJZH1fJHt0YXNrSWR9YCk7XG4gIGRpdlNob3dNb2RlLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcbiAgY29uc3QgZGl2RWRpdE1vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdGFza19lZGl0X21vZGVfJHtwcm9qSWR9XyR7dGFza0lkfWApO1xuICBkaXZFZGl0TW9kZS5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlJyk7XG59XG5cbmNvbnN0IHN1Ym1pdEVkaXRUYXNrID0gKGUpPT57XG4gIGxldCB0YXNrSWQgPSBlLnRhcmdldC5kYXRhc2V0LlRhc2tJZDtcbiAgbGV0IHByb2pJZCA9IGUudGFyZ2V0LmRhdGFzZXQuVGFza1Byb2pJZDtcblxuICBsZXQgcHJvamVjdEluZHggPSBmaW5kUHJvamVjdChwcm9qZWN0c0xpc3QsIHByb2pJZCk7XG4gIGxldCBwcm9qZWN0ID0gcHJvamVjdHNMaXN0W3Byb2plY3RJbmR4XTtcbiAgbGV0IHRhc2tJbmRleCA9IGZpbmRQcm9qZWN0KHByb2plY3QudGFza3MsIHRhc2tJZCk7XG4gIGxldCB0YXNrID0gcHJvamVjdC50YXNrc1t0YXNrSW5kZXhdO1xuICBjb25zdCBwcmlvcml0eUxhc3QgPSB0YXNrLnByaW9yaXR5O1xuICBjb25zdCBzdGF0dXNMYXN0ID0gdGFzay5zdGF0dXM7XG5cbiAgbGV0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZWRpdF90YXNrX3RpdGxlXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgdGFzay50aXRsZSA9IHRpdGxlSW5wdXQudmFsdWU7XG4gIGxldCBkZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2VkaXRfdGFza19kZXNjcmlwdGlvbl8ke3Byb2pJZH1fJHt0YXNrSWR9YCk7XG4gIHRhc2suZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbklucHV0LnZhbHVlO1xuICBsZXQgcHJpb3JpdHlJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNlZGl0X3Rhc2tfcHJpb3JpdHlfJHtwcm9qSWR9XyR7dGFza0lkfWApO1xuICB0YXNrLnByaW9yaXR5ID0gcHJpb3JpdHlJbnB1dC52YWx1ZTtcblxuICBsZXQgZGF0ZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2VkaXRfdGFza19kYXRlXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgdGFzay5kdWVEYXRlID0gZGF0ZUlucHV0LnZhbHVlO1xuXG4gIGxldCBzdGF0dXNJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNlZGl0X3Rhc2tfc3RhdHVzXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgdGFzay5zdGF0dXMgPSBzdGF0dXNJbnB1dC52YWx1ZTtcblxuICBjb25zdCB0aXRsZURpc3BsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZGlzcGxheV90YXNrX3RpdGxlXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgdGl0bGVEaXNwbGF5LnRleHRDb250ZW50ID0gdGFzay50aXRsZTtcblxuICBjb25zdCBkZXNjcmlwdGlvbkRpc3BsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZGlzcGxheV90YXNrX2Rlc2NyaXB0aW9uXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgZGVzY3JpcHRpb25EaXNwbGF5LnRleHRDb250ZW50ID0gdGFzay5kZXNjcmlwdGlvbjtcblxuICBjb25zdCBwcmlvcml0eURpc3BsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZGlzcGxheV90YXNrX3ByaW9yaXR5XyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgcHJpb3JpdHlEaXNwbGF5LmNsYXNzTGlzdC5yZW1vdmUoYHByaW9yaXR5X2JveF8ke3ByaW9yaXR5TGFzdH1gKTtcbiAgcHJpb3JpdHlEaXNwbGF5LmNsYXNzTGlzdC5hZGQoYHByaW9yaXR5X2JveF8ke3Rhc2sucHJpb3JpdHl9YCk7XG5cbiAgY29uc3QgZGF0ZURpc3BsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZGlzcGxheV90YXNrX2RhdGVfJHtwcm9qSWR9XyR7dGFza0lkfWApO1xuICBkYXRlRGlzcGxheS50ZXh0Q29udGVudCA9IGZvcm1hdERpc3RhbmNlVG9Ob3codGFzay5mb3JtYXRlZER1ZURhdGUoKSx7YWRkU3VmZml4OiB0cnVlfSk7XG5cbiAgY29uc3Qgc3RhdHVzRGlzcGxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNkaXNwbGF5X3Rhc2tfc3RhdHVzXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgc3RhdHVzRGlzcGxheS50ZXh0Q29udGVudCA9IHRhc2suc3RhdHVzO1xuICBzdGF0dXNEaXNwbGF5LmNsYXNzTGlzdC5yZW1vdmUoYHRhc2tfc3RhdHVzXyR7c3RhdHVzTGFzdH1gKTtcbiAgc3RhdHVzRGlzcGxheS5jbGFzc0xpc3QuYWRkKGB0YXNrX3N0YXR1c18ke3Rhc2suc3RhdHVzfWApO1xuXG4gIGNvbnN0IGRpdlNob3dNb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Rhc2tfc2hvd19tb2RlXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgZGl2U2hvd01vZGUuY2xhc3NMaXN0LnRvZ2dsZSgnaGlkZScpO1xuICBjb25zdCBkaXZFZGl0TW9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0YXNrX2VkaXRfbW9kZV8ke3Byb2pJZH1fJHt0YXNrSWR9YCk7XG4gIGRpdkVkaXRNb2RlLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Byb2plY3RzTGlzdCcsIEpTT04uc3RyaW5naWZ5KHByb2plY3RzTGlzdCkpO1xufVxuXG5leHBvcnQge29wZW5UYWIsIGFkZFByb2plY3QsIGNhbmNlbEFkZFByb2plY3QsIGRlbGV0ZVByb2plY3QsIGVkaXRQcm9qZWN0LCBjYW5jZWxQcm9qZWN0LCBzdWJtaXRFZGl0UHJvamVjdCAsIGNhbmNlbEFkZFRhc2sgLCBhZGRUYXNrLCBkZWxldGVUYXNrLCBjYW5jZWxFZGl0VGFzaywgc3VibWl0RWRpdFRhc2t9IiwiaW1wb3J0IHsgYWRkUHJvamVjdCwgb3BlblRhYiwgY2FuY2VsQWRkUHJvamVjdCAsIGRlbGV0ZVByb2plY3QsIGVkaXRQcm9qZWN0LCBjYW5jZWxQcm9qZWN0LCBzdWJtaXRFZGl0UHJvamVjdH0gZnJvbSBcIi4vbGlzdG5lcnNcIjtcbmltcG9ydCBhZGRQcm9qSWNvbiBmcm9tIFwiLi9wbGF5bGlzdC5wbmdcIjtcbmltcG9ydCBlZGl0UHJvamVjdEljb24gZnJvbSBcIi4vcGVuY2lsLnBuZ1wiO1xuaW1wb3J0IHN1Ym1pdFByb2plY3RJY29uIGZyb20gXCIuL2NoZWNrLnBuZ1wiO1xuaW1wb3J0IGNhbmNlbFByb2plY3RJY29uIGZyb20gXCIuL2Nsb3NlLnBuZ1wiO1xuaW1wb3J0IGRlbGV0ZVByb2plY3RJY29uICBmcm9tIFwiLi9jYW5jZWwucG5nXCI7XG5pbXBvcnQgeyB0YXNrc0NvbnRhaW5lciB9IGZyb20gXCIuL3ZhcmlhYmxlc1wiO1xuaW1wb3J0IHsgdGFza05hdiB9IGZyb20gXCIuL3Rhc2tOYXZcIjtcblxuY29uc3QgZGlzcGxheVByb2plY3QgPSAocHJvamVjdCkgPT57XG4gIGNvbnN0IHdyYXBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICB3cmFwZXIuc2V0QXR0cmlidXRlKCdpZCcgLCBgcHJvamVjdF9jb250YWluZXJfJHtwcm9qZWN0LmlkfWApO1xuICB3cmFwZXIuY2xhc3NMaXN0LmFkZCgncHJvamVjdF9jb250YWluZXInKTtcblxuICBjb25zdCBzcGFuU2hvd01vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHNwYW5TaG93TW9kZS5zZXRBdHRyaWJ1dGUoJ2lkJywgYHByb2plY3Rfc2hvd19tb2RlXyR7cHJvamVjdC5pZH1gKTtcbiAgc3BhblNob3dNb2RlLmNsYXNzTGlzdC5hZGQoJ3NwYW5fcHJvamVjdCcpO1xuXG4gIGNvbnN0IHNwYW5FZGl0TW9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgc3BhbkVkaXRNb2RlLnNldEF0dHJpYnV0ZSgnaWQnLCBgcHJvamVjdF9lZGl0X21vZGVfJHtwcm9qZWN0LmlkfWApO1xuICBzcGFuRWRpdE1vZGUuY2xhc3NMaXN0LmFkZCgnc3Bhbl9wcm9qZWN0JywgJ2hpZGUnKTtcblxuICBjb25zdCBidG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgYnRuLnNldEF0dHJpYnV0ZSgnaWQnLCBgc2hvd19wcm9qZWN0X3RpdGxlXyR7cHJvamVjdC5pZH1gKTtcbiAgYnRuLmRhdGFzZXQucHJvamVjdElkID0gcHJvamVjdC5pZDtcbiAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoZSk9PiBvcGVuVGFiKGUpKTtcbiAgYnRuLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAndGFibGlua3MnKTtcbiAgYnRuLnRleHRDb250ZW50ID0gcHJvamVjdC50aXRsZTtcblxuICBjb25zdCBlZGl0UHJvamVjdEltYWdlID0gbmV3IEltYWdlKCk7XG4gIGVkaXRQcm9qZWN0SW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBlZGl0UHJvamVjdEljb24pO1xuICBlZGl0UHJvamVjdEltYWdlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Byb2pfaWNvbicpO1xuICBlZGl0UHJvamVjdEltYWdlLmRhdGFzZXQucHJvamVjdElkID0gcHJvamVjdC5pZDtcbiAgZWRpdFByb2plY3RJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4gZWRpdFByb2plY3QoZSkpO1xuXG4gIFxuICBjb25zdCBkZWxldGVQcm9qZWN0SW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgZGVsZXRlUHJvamVjdEltYWdlLnNldEF0dHJpYnV0ZSgnc3JjJywgZGVsZXRlUHJvamVjdEljb24pO1xuICBkZWxldGVQcm9qZWN0SW1hZ2Uuc2V0QXR0cmlidXRlKCdjbGFzcycsICdhZGRfcHJval9pY29uJyk7XG4gIGRlbGV0ZVByb2plY3RJbWFnZS5kYXRhc2V0LnByb2plY3RJZCA9IHByb2plY3QuaWQ7XG4gIGRlbGV0ZVByb2plY3RJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4gZGVsZXRlUHJvamVjdChlKSk7XG5cblxuICBzcGFuU2hvd01vZGUuYXBwZW5kKGJ0biwgZWRpdFByb2plY3RJbWFnZSwgZGVsZXRlUHJvamVjdEltYWdlKTtcblxuXG4gIGNvbnN0IGVkaXRQcm9qVGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGVkaXRQcm9qVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICBlZGl0UHJvalRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsIGBlZGl0X3Byb2plY3RfdGl0bGVfJHtwcm9qZWN0LmlkfWApO1xuICBlZGl0UHJvalRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd2YWx1ZScsIHByb2plY3QudGl0bGUpO1xuXG5cbiAgY29uc3Qgc3VibWl0UHJvamVjdEltYWdlID0gbmV3IEltYWdlKCk7XG4gIHN1Ym1pdFByb2plY3RJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIHN1Ym1pdFByb2plY3RJY29uKTtcbiAgc3VibWl0UHJvamVjdEltYWdlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Byb2pfaWNvbicpO1xuICBzdWJtaXRQcm9qZWN0SW1hZ2UuZGF0YXNldC5wcm9qZWN0SWQgPSBwcm9qZWN0LmlkO1xuICBzdWJtaXRQcm9qZWN0SW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4gc3VibWl0RWRpdFByb2plY3QoZSkpO1xuXG4gIGNvbnN0IGNhbmNlbFByb2plY3RJbWFnZSA9IG5ldyBJbWFnZSgpO1xuICBjYW5jZWxQcm9qZWN0SW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBjYW5jZWxQcm9qZWN0SWNvbik7XG4gIGNhbmNlbFByb2plY3RJbWFnZS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZF9wcm9qX2ljb24nKTtcbiAgY2FuY2VsUHJvamVjdEltYWdlLmRhdGFzZXQucHJvamVjdElkID0gcHJvamVjdC5pZDtcbiAgY2FuY2VsUHJvamVjdEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiBjYW5jZWxQcm9qZWN0KGUpKTtcblxuICBzcGFuRWRpdE1vZGUuYXBwZW5kKGVkaXRQcm9qVGl0bGVJbnB1dCwgc3VibWl0UHJvamVjdEltYWdlLCBjYW5jZWxQcm9qZWN0SW1hZ2UpO1xuXG4gIHdyYXBlci5hcHBlbmQoc3BhblNob3dNb2RlLCBzcGFuRWRpdE1vZGUpO1xuXG4gIHRhc2tzQ29udGFpbmVyLmFwcGVuZCh0YXNrTmF2KHByb2plY3QpKTtcblxuICByZXR1cm4gd3JhcGVyO1xufVxuXG5jb25zdCBwcm9qZWN0TmF2ID0gKHByb2pMaXN0KSA9PiB7XG5cbiAgY29uc3QgZGl2TmF2V3JhcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXZOYXZXcmFwLnNldEF0dHJpYnV0ZSgnaWQnLCAncHJvamVjdF9uYXYnKTtcblxuICBjb25zdCBicmFuZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBicmFuZC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2xvZ29fcHJvamVjdCcpO1xuICBicmFuZC50ZXh0Q29udGVudCA9ICdNeSBQcm9qZWN0cyc7XG5cbiAgY29uc3QgYWRkUHJvaiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBhZGRQcm9qLnNldEF0dHJpYnV0ZSgnaWQnLCAnYWRkX3Byb2plY3QnKTtcbiAgY29uc3QgYWRkUHJvamVjdEltYWdlID0gbmV3IEltYWdlKCk7XG4gIGFkZFByb2plY3RJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGFkZFByb2pJY29uKTtcbiAgYWRkUHJvamVjdEltYWdlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Byb2pfaWNvbicpO1xuICBjb25zdCBhZGRQcm9qVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgYWRkUHJvalRleHQudGV4dENvbnRlbnQgPSBcIlByb2plY3RzXCI7XG4gIGFkZFByb2ouYXBwZW5kKGFkZFByb2pUZXh0LCBhZGRQcm9qZWN0SW1hZ2UpO1xuICBhZGRQcm9qLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gY2FuY2VsQWRkUHJvamVjdCgpKTtcblxuICAvLyBBZGQgcHJvamVjdCBmb3JtXG5cbiAgY29uc3QgYWRkUHJvakZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgYWRkUHJvakZvcm0uc2V0QXR0cmlidXRlKCdpZCcsICdhZGRfcHJvamVjdF9mb3JtJyk7XG4gIGFkZFByb2pGb3JtLmNsYXNzTGlzdC5hZGQoJ2hpZGUnKTtcbiAgY29uc3QgYWRkUHJvalRpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBhZGRQcm9qVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICBhZGRQcm9qVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgXCJwcm9qZWN0X3RpdGxlXCIpO1xuICBhZGRQcm9qVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgJ1R5cGUgeW91ciBwcm9qZWN0IHRpdGxlIGhlcmUhJyk7XG4gIGNvbnN0IGFkZFByb2plY3RGb3JtQnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBhZGRQcm9qZWN0Rm9ybUJ1dHRvbnMuc2V0QXR0cmlidXRlKCdjbGFzcycsICdhZGRfcHJvamVjdF9mb3JtX2J1dHRvbnMnKTtcbiAgY29uc3QgYWRkUHJvamVjdEZvcm1DcmVhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcblxuICBhZGRQcm9qZWN0Rm9ybUNyZWF0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IGFkZFByb2plY3QoKSk7XG5cbiAgYWRkUHJvamVjdEZvcm1DcmVhdGUudGV4dENvbnRlbnQgPSAnQ3JlYXRlIFByb2plY3QnO1xuICBjb25zdCBhZGRQcm9qZWN0Rm9ybUNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBhZGRQcm9qZWN0Rm9ybUNhbmNlbC50ZXh0Q29udGVudCA9ICdDYW5jZWwnO1xuXG4gIGFkZFByb2plY3RGb3JtQ2FuY2VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gY2FuY2VsQWRkUHJvamVjdCgpKTtcblxuICBhZGRQcm9qZWN0Rm9ybUJ1dHRvbnMuYXBwZW5kKGFkZFByb2plY3RGb3JtQ3JlYXRlLGFkZFByb2plY3RGb3JtQ2FuY2VsKTtcbiAgYWRkUHJvakZvcm0uYXBwZW5kKGFkZFByb2pUaXRsZUlucHV0LCBhZGRQcm9qZWN0Rm9ybUJ1dHRvbnMpO1xuXG4gIGNvbnN0IHRhYnNEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGFic0Rpdi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RhYnMnKTtcbiAgXG4gIHByb2pMaXN0LmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgdGFic0Rpdi5hcHBlbmQoZGlzcGxheVByb2plY3QoZWxlbWVudCkpO1xuICAgIHJldHVybiB0YWJzRGl2O1xuICB9KTtcblxuICBkaXZOYXZXcmFwLmFwcGVuZChicmFuZCwgYWRkUHJvaiwgYWRkUHJvakZvcm0gLCB0YWJzRGl2KTtcbiAgcmV0dXJuIGRpdk5hdldyYXA7XG59XG5cbmV4cG9ydCB7cHJvamVjdE5hdiAsIGRpc3BsYXlQcm9qZWN0fTsiLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCB7IHByb2plY3RzTGlzdCwgY291bnRQcm9qZWN0cyAsIHRhc2tzQ29udGFpbmVyfSBmcm9tICcuL3ZhcmlhYmxlcyc7XG5pbXBvcnQge3Byb2plY3ROYXYgLCBkaXNwbGF5UHJvamVjdH0gZnJvbSAnLi9wcm9qZWN0TmF2JztcbmltcG9ydCB0YXNrTmF2IGZyb20gJy4vdGFza05hdic7XG5jb25zdCBQcm9qZWN0ID0gcmVxdWlyZSgnLi9wcm9qZWN0JykuZGVmYXVsdDtcbmNvbnN0IFRhc2sgPSByZXF1aXJlKCcuL3Rhc2snKS5kZWZhdWx0O1xuXG5jb25zdCBnbG9iYWxDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29udGFpbmVyJyk7XG5cblxuLy8gYXBwZWQgZ2xvYmFsQ29udGFpbmVyIHdpdGggcHJvamVjdG5hdiAmIHRhc2tOYXZcblxuLy8gbGV0IHByajEgPSBuZXcgUHJvamVjdCgnUHJvamVjdDEnLCAxKTtcbi8vIGxldCBwcmoyID0gbmV3IFByb2plY3QoJ1Byb2plY3QyJywgMik7XG5cbi8vIGNvdW50UHJvamVjdHMgKz0gMjtcbi8vIC8vIGNvbnN0IHByakxpc3QgPSBbcHJqMSwgcHJqMl07XG5cbi8vIGxldCB0YXNrMSA9IG5ldyBUYXNrKCdteSB0YXNrJywgJ2RkZGRkZCcsICcyMDIwLTEyLTI0JywgJ2xvdycsIDEsIDEpO1xuLy8gbGV0IHRhc2syID0gbmV3IFRhc2soJ215IHRhc2syJywgJ2RkZGRkZCcsICcyMDIwLTEyLTI0JywgJ2xvdycsIDEsIDIpO1xuLy8gcHJqMS5fdGFza0NvdW50ZXIgKz0gMjtcblxuLy8gbGV0IHRhc2szID0gbmV3IFRhc2soJ215IHRhc2szJywgJ2RkZGRkZCcsICcyMDIwLTEyLTI0JywgJ2xvdycsIDIsIDEpO1xuLy8gbGV0IHRhc2s0ID0gbmV3IFRhc2soJ215IHRhc2s0JywgJ2RkZGRkZCcsICcyMDIwLTEyLTI0JywgJ2xvdycsIDIsIDIpO1xuLy8gcHJqMi5fdGFza0NvdW50ZXIgKz0gMjtcblxuLy8gcHJqMS5hZGRUYXNrKHRhc2sxKTtcbi8vIHByajEuYWRkVGFzayh0YXNrMik7XG5cbi8vIHByajIuYWRkVGFzayh0YXNrMyk7XG4vLyBwcmoyLmFkZFRhc2sodGFzazQpO1xuXG4vLyBwcm9qZWN0c0xpc3QucHVzaChwcmoxICwgcHJqMik7XG5cbi8vIHByb2plY3RzTGlzdC5wdXNoKHByajIpO1xuXG4vLyBjb25zb2xlLmxvZyhwcmoxKTtcbi8vIGNvbnNvbGUubG9nKHByakxpc3QpO1xuXG4vLyBjb25zb2xlLmxvZyh0eXBlb2YgcHJvamVjdE5hdik7XG4vLyBjb25zb2xlLmxvZyhwcm9qZWN0TmF2KHByakxpc3QpKTtcblxuY29uc29sZS5sb2coJ2luZGV4Jyk7XG5nbG9iYWxDb250YWluZXIuYXBwZW5kKHByb2plY3ROYXYocHJvamVjdHNMaXN0KSAsIHRhc2tzQ29udGFpbmVyKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=
(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(15),o=n.n(r),s=n(645),a=n.n(s)()(o());a.push([t.id,".tabcontent {\n  display: none;\n}\n\n.shown {\n  display: block;\n}\n\n.add_proj_icon {\n  width: 1rem;\n  height: 1rem;\n}\n\n.hide {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;AACf",sourcesContent:[".tabcontent {\n  display: none;\n}\n\n.shown {\n  display: block;\n}\n\n.add_proj_icon {\n  width: 1rem;\n  height: 1rem;\n}\n\n.hide {\n  display: none;\n}\n"],sourceRoot:""}]);const c=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(r)for(var s=0;s<this.length;s++){var a=this[s][0];null!=a&&(o[a]=!0)}for(var c=0;c<t.length;c++){var i=[].concat(t[c]);r&&o[i[0]]||(n&&(i[2]?i[2]="".concat(n," and ").concat(i[2]):i[2]=n),e.push(i))}},e}},15:t=>{function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}t.exports=function(t){var n,r,o=(r=4,function(t){if(Array.isArray(t))return t}(n=t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var n=[],r=!0,o=!1,s=void 0;try{for(var a,c=t[Symbol.iterator]();!(r=(a=c.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,s=t}finally{try{r||null==c.return||c.return()}finally{if(o)throw s}}return n}}(n,r)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=o[1],a=o[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),d="/*# ".concat(i," */"),u=a.sources.map((function(t){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(t," */")}));return[s].concat(u).concat([d]).join("\n")}return[s].join("\n")}},379:(t,e,n)=>{var r,o=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),s=[];function a(t){for(var e=-1,n=0;n<s.length;n++)if(s[n].identifier===t){e=n;break}return e}function c(t,e){for(var n={},r=[],o=0;o<t.length;o++){var c=t[o],i=e.base?c[0]+e.base:c[0],d=n[i]||0,u="".concat(i," ").concat(d);n[i]=d+1;var l=a(u),p={css:c[1],media:c[2],sourceMap:c[3]};-1!==l?(s[l].references++,s[l].updater(p)):s.push({identifier:u,updater:b(p,e),references:1}),r.push(u)}return r}function i(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var s=n.nc;s&&(r.nonce=s)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var a=o(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var d,u=(d=[],function(t,e){return d[t]=e,d.filter(Boolean).join("\n")});function l(t,e,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=u(e,o);else{var s=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(s,a[e]):t.appendChild(s)}}function p(t,e,n){var r=n.css,o=n.media,s=n.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var m=null,_=0;function b(t,e){var n,r,o;if(e.singleton){var s=_++;n=m||(m=i(e)),r=l.bind(null,n,s,!1),o=l.bind(null,n,s,!0)}else n=i(e),r=p.bind(null,n,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=c(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var o=a(n[r]);s[o].references--}for(var i=c(t,e),d=0;d<n.length;d++){var u=a(n[d]);0===s[u].references&&(s[u].updater(),s.splice(u,1))}n=i}}}},429:(t,e,n)=>{t.exports=n.p+"82afad6e38ab3c57406e.png"},908:(t,e,n)=>{t.exports=n.p+"6d4955812aa5e79611ae.png"},247:(t,e,n)=>{t.exports=n.p+"376ef3c8c83b0ea11c6d.png"},563:(t,e,n)=>{t.exports=n.p+"2fce6214b7c60c745aa6.png"},312:(t,e,n)=>{t.exports=n.p+"48a509a89a20feb467d3.png"},883:(t,e,n)=>{t.exports=n.p+"e47be2e47d96864e3de4.png"},747:(t,e,n)=>{n.d(e,{Z:()=>r});const r=class{constructor(t,e){this._title=t,this._tasks=[],this._id=e,this._taskCounter=0}get title(){return this._title}get id(){return this._id}get taskCounter(){return this._taskCounter}set title(t){this._title=t}get tasks(){return this._tasks}addTask(t){this._tasks.push(t),this._taskCounter+=1}removeTask(t){this._tasks.splice(t,1)}}},507:(t,e,n)=>{n.d(e,{Z:()=>r});const r=class{constructor(t,e,n=911,r,o,s){this._title=t,this._description=e,this._dueDate=n,this._priority=r,this._status="todo",this._projId=o,this._id=s}get title(){return this._title}set title(t){this._title=t}get description(){return this._description}get projId(){return this._projId}get id(){return this._id}set description(t){this._description=t}get dueDate(){return this._dueDate}set dueDate(t){this._dueDate=t}get priority(){return this._priority}set priority(t){this._priority=t}get status(){return this._status}set status(t){this._status=t}}}},e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={id:r,exports:{}};return t[r](o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),(()=>{var t=n(379),e=n.n(t),r=n(426);e()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;const o=document.createElement("div");o.setAttribute("id","tasks_container");const s=[];let a=0;const c=(t,e)=>{let n=0,r=t.length-1,o=Math.floor((n+r)/2),s=!1;for(;n<=r&&!s;)s=t[o].id===e,s||(t[o].id>e?r=o-1:n=o+1,o=Math.floor((n+r)/2));return o};var i=n(429),d=n(312),u=n(908);const l=t=>{const e=document.createElement("div");e.setAttribute("class","task_card"),e.setAttribute("id",`task_card_${t.projId}_${t.id}`);const n=document.createElement("div");n.setAttribute("id",`task_show_mode_${t.projId}_${t.id}`),n.classList.add("show_div_task");const r=document.createElement("div");r.setAttribute("class","div_show_mode_left");const o=document.createElement("div");o.classList.add(`priority_box_${t.priority}`,"priority_box");const s=document.createElement("h3");s.textContent=t.title,r.append(o,s);const a=document.createElement("div");a.setAttribute("class","div_show_mode_right");const c=document.createElement("span");c.textContent=t.dueDate;const i=document.createElement("span");i.setAttribute("id",`task_status_${t.status}`),i.classList.add("task_status"),i.textContent=t.status;const l=new Image;l.setAttribute("src",d),l.setAttribute("class","add_proj_icon"),l.dataset.TaskId=t.id,l.dataset.TaskProjId=t.projId,l.addEventListener("click",(t=>A(t)));const p=new Image;p.setAttribute("src",u),p.setAttribute("class","add_proj_icon"),p.dataset.TaskId=t.id,p.dataset.TaskProjId=t.projId,p.addEventListener("click",(t=>h(t))),a.append(c,i,l,p);const m=document.createElement("div");m.setAttribute("id",`task_edit_mode_${t.projId}_${t.id}`),m.classList.add("edit_div_task","hide");const _=document.createElement("div");_.classList.add("edit_task_form_wrapper");const b=document.createElement("input");b.setAttribute("type","text"),b.setAttribute("id",`edit_task_title_${t.projId}_${t.id}`),b.setAttribute("value",t.title);const f=document.createElement("input");f.setAttribute("type","text"),f.setAttribute("id",`edit_task_description_${t.projId}_${t.id}`),f.setAttribute("value",t.description);const v=document.createElement("span");v.setAttribute("class","edit_task_select_span");const y=document.createElement("label");y.textContent="Priority:",y.setAttribute("for",`edit_task_priority_${t.projId}_${t.id}`);const g=document.createElement("select");g.setAttribute("id",`edit_task_priority_${t.projId}_${t.id}`);const k=document.createElement("option");k.setAttribute("value","hight"),k.textContent="Hight";const j=document.createElement("option");j.setAttribute("value","medium"),j.textContent="Medium";const E=document.createElement("option");E.setAttribute("value","low"),E.textContent="Low",g.append(k,j,E),g.value=t.priority,v.append(y,g);const w=document.createElement("span");v.setAttribute("class","edit_task_date_span");const $=document.createElement("label");$.textContent="Schedule:",$.setAttribute("for",`edit_task_date_${t.projId}_${t.id}`);const C=document.createElement("input");C.setAttribute("type","date"),C.setAttribute("id",`edit_task_date_${t.projId}_${t.id}`),w.append($,C);const I=document.createElement("div");I.setAttribute("class","edit_task_form_buttons");const S=document.createElement("button");S.textContent="Submit";const x=document.createElement("button");return x.textContent="Cancel",x.dataset.TaskId=t.id,x.dataset.TaskProjId=t.projId,I.append(S,x),_.append(b,f,v,w,I),m.append(_),n.append(r,a),e.append(n,m),e},p=n(747).Z,m=n(507).Z,_=()=>{document.querySelector("#project_title").value="",document.querySelector("#add_project_form").classList.toggle("hide")},b=t=>{let e=t.target.dataset.projectId;document.querySelector(`#task_title_${e}`).value="",document.querySelector(`#task_description_${e}`).value="",document.querySelector(`#task_priority_${e}`).value="low",document.querySelector(`#add_task_form_${e}`).classList.toggle("hide")},h=t=>{let e=t.target.dataset.TaskId,n=t.target.dataset.TaskProjId,r=document.querySelector(`#task_card_${n}_${e}`);document.querySelector(`#tasks_wrapper_${n}`).removeChild(r);let o=c(s,n),a=s[o];a.removeTask(e),console.log(`after delete ${a.tasks}`)},A=t=>{let e=t.target.dataset.TaskId,n=t.target.dataset.TaskProjId;document.querySelector(`#task_show_mode_${n}_${e}`).classList.toggle("hide"),document.querySelector(`#task_edit_mode_${n}_${e}`).classList.toggle("hide")};var f=n(883),v=n(247),y=n(563);const g=t=>{const e=document.createElement("div");e.setAttribute("id",`project_container_${t.id}`),e.classList.add("project_container");const n=document.createElement("span");n.setAttribute("id",`project_show_mode_${t.id}`),n.classList.add("span_project");const r=document.createElement("span");r.setAttribute("id",`project_edit_mode_${t.id}`),r.classList.add("span_project","hide");const a=document.createElement("button");a.setAttribute("id",`show_project_title_${t.id}`),a.dataset.projectId=t.id,a.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=document.querySelector(`#proj_${e}`),r=document.querySelector(".shown");null!==r&&r.classList.toggle("shown"),n.classList.toggle("shown")})(t))),a.setAttribute("class","tablinks"),a.textContent=t.title;const p=new Image;p.setAttribute("src",d),p.setAttribute("class","add_proj_icon"),p.dataset.projectId=t.id,p.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide")})(t)));const _=new Image;_.setAttribute("src",u),_.setAttribute("class","add_proj_icon"),_.dataset.projectId=t.id,_.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=document.querySelector(`#project_container_${e}`);document.querySelector("#tabs").removeChild(n),((t,e)=>{let n=c(t,e);t.splice(n,1)})(s,e),console.log(`after delete ${s}`)})(t))),n.append(a,p,_);const h=document.createElement("input");h.setAttribute("type","text"),h.setAttribute("id",`edit_project_title_${t.id}`),h.setAttribute("value",t.title);const A=new Image;A.setAttribute("src",v),A.setAttribute("class","add_proj_icon"),A.dataset.projectId=t.id,A.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;const n=document.querySelector(`#edit_project_title_${e}`);((t,e,n)=>{t[c(t,e)].title=n})(s,e,n.value),document.querySelector(`#show_project_title_${e}`).textContent=n.value,document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide")})(t)));const f=new Image;return f.setAttribute("src",y),f.setAttribute("class","add_proj_icon"),f.dataset.projectId=t.id,f.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide");const n=document.querySelector(`#edit_project_title_${e}`),r=document.querySelector(`#show_project_title_${e}`);n.value=r.textContent})(t))),r.append(h,A,f),e.append(n,r),o.append((t=>{const e=document.createElement("div");e.setAttribute("class","tabcontent"),e.setAttribute("id",`proj_${t.id}`);const n=document.createElement("div");n.setAttribute("class","project_header");const r=document.createElement("h2");r.setAttribute("class","header_title"),r.textContent=t.title;const o=document.createElement("button");o.dataset.projectId=t.id,o.addEventListener("click",(t=>b(t))),o.setAttribute("class","header_add_task");const a=new Image;a.setAttribute("src",i),a.setAttribute("class","add_proj_icon");const d=document.createElement("span");d.setAttribute("class","add_task_span"),d.textContent="Add a Task",o.append(a,d),n.append(r,o);const u=document.createElement("div");u.setAttribute("class","add_task_form_wrapper"),u.classList.add("hide"),u.setAttribute("id",`add_task_form_${t.id}`);const p=document.createElement("input");p.setAttribute("type","text"),p.setAttribute("id",`task_title_${t.id}`),p.setAttribute("placeholder","Type your task title here!");const _=document.createElement("input");_.setAttribute("type","text"),_.setAttribute("id",`task_description_${t.id}`),_.setAttribute("placeholder","Type a description for your task here!");const h=document.createElement("span");h.setAttribute("class","add_task_select_span");const A=document.createElement("label");A.textContent="Priority:",A.setAttribute("for",`task_priority_${t.id}`);const f=document.createElement("select");f.setAttribute("id",`task_priority_${t.id}`);const v=document.createElement("option");v.setAttribute("value","hight"),v.textContent="Hight";const y=document.createElement("option");y.setAttribute("value","medium"),y.textContent="Medium";const g=document.createElement("option");g.setAttribute("value","low"),g.textContent="Low",f.append(v,y,g),h.append(A,f);const k=document.createElement("span");h.setAttribute("class","add_task_date_span");const j=document.createElement("label");j.textContent="Schedule:",j.setAttribute("for",`task_date_${t.id}`);const E=document.createElement("input");E.setAttribute("type","date"),E.setAttribute("id",`task_date_${t.id}`),k.append(j,E);const w=document.createElement("div");w.setAttribute("class","add_task_form_buttons");const $=document.createElement("button");$.dataset.projectId=t.id,$.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=c(s,e),r=s[n],o=document.querySelector(`#task_title_${e}`).value,a=document.querySelector(`#task_description_${e}`).value,i=document.querySelector(`#task_priority_${e}`).value;const d=new m(o,a,911,i,e,r.taskCounter);((t,e,n)=>{t[c(t,e)].addTask(n)})(s,e,d),document.querySelector(`#tasks_wrapper_${e}`).append(l(d)),document.querySelector(`#add_task_form_${e}`).classList.toggle("hide")})(t))),$.textContent="Create Task";const C=document.createElement("button");C.textContent="Cancel",C.dataset.projectId=t.id,C.addEventListener("click",(t=>b(t))),w.append($,C),u.append(p,_,h,k,w);const I=document.createElement("div");return I.setAttribute("id",`tasks_wrapper_${t.id}`),I.setAttribute("class","tasks_wrapper"),t.tasks.forEach((t=>(I.append(l(t)),I))),e.append(n,u,I),e})(t)),e},k=n(747).Z,j=n(507).Z,E=document.querySelector("#container");let w=new k("Project1",1),$=new k("Project2",2);a+=2;let C=new j("my task","dddddd","12","low",1,1),I=new j("my task2","dddddd","12","low",1,2);w._taskCounter+=2;let S=new j("my task3","dddddd","12","low",2,1),x=new j("my task4","dddddd","12","low",2,2);$._taskCounter+=2,w.addTask(C),w.addTask(I),$.addTask(S),$.addTask(x),s.push(w,$),E.append((t=>{const e=document.createElement("div");e.setAttribute("id","project_nav");const n=document.createElement("div");n.setAttribute("class","logo_project"),n.textContent="My Projects";const r=document.createElement("button");r.setAttribute("id","add_project");const o=new Image;o.setAttribute("src",f),o.setAttribute("class","add_proj_icon");const c=document.createElement("span");c.textContent="Projects",r.append(c,o),r.addEventListener("click",(()=>_()));const i=document.createElement("div");i.setAttribute("id","add_project_form"),i.classList.add("hide");const d=document.createElement("input");d.setAttribute("type","text"),d.setAttribute("id","project_title"),d.setAttribute("placeholder","Type your project title here!");const u=document.createElement("div");u.setAttribute("class","add_project_form_buttons");const l=document.createElement("button");l.addEventListener("click",(()=>(()=>{let t=document.querySelector("#project_title").value;a+=1;const e=new p(t,a);s.push(e),console.log(s),document.querySelector("#tabs").append(g(e)),document.querySelector("#add_project_form").classList.toggle("hide")})())),l.textContent="Create Project";const m=document.createElement("button");m.textContent="Cancel",m.addEventListener("click",(()=>_())),u.append(l,m),i.append(d,u);const b=document.createElement("div");return b.setAttribute("id","tabs"),t.forEach((t=>(b.append(g(t)),b))),e.append(n,r,i,b),e})(s),o)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvcHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy90YXNrLmpzIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvdmFyaWFibGVzLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vc3JjL3Rhc2tOYXYuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvbGlzdG5lcnMuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvcHJvamVjdE5hdi5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwiY29uY2F0Iiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWFRdWVyeSIsImRlZHVwZSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJsZW5ndGgiLCJfaSIsIl9hcnJheUxpa2VUb0FycmF5IiwiYXJyIiwibGVuIiwiYXJyMiIsIkFycmF5IiwiX2l0ZW0iLCJpc0FycmF5IiwiX2FycmF5V2l0aEhvbGVzIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJPYmplY3QiLCJfYXJyIiwiX24iLCJfZCIsIl9lIiwidW5kZWZpbmVkIiwiX3MiLCJuZXh0IiwiZG9uZSIsInZhbHVlIiwiZXJyIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwibyIsIm1pbkxlbiIsIm4iLCJwcm90b3R5cGUiLCJjYWxsIiwic2xpY2UiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIlR5cGVFcnJvciIsIl9ub25JdGVyYWJsZVJlc3QiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwibWVtbyIsImdldFRhcmdldCIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4Iiwib2JqIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZFN0eWxlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGUiLCJjcmVhdGVFbGVtZW50IiwiYXR0cmlidXRlcyIsIm5vbmNlIiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJhcHBseVRvU2luZ2xldG9uVGFnIiwicmVtb3ZlIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJjaGlsZE5vZGVzIiwicmVtb3ZlQ2hpbGQiLCJpbnNlcnRCZWZvcmUiLCJhcHBseVRvVGFnIiwicmVtb3ZlQXR0cmlidXRlIiwiZmlyc3RDaGlsZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwiYmluZCIsInBhcmVudE5vZGUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJuZXdPYmoiLCJhbGwiLCJhdG9iIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsInNwbGljZSIsInRpdGxlIiwiX3RpdGxlIiwiX3Rhc2tzIiwiX2lkIiwiX3Rhc2tDb3VudGVyIiwidGFzayIsImRlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsInByaW9yaXR5IiwicHJvaklkIiwiX2Rlc2NyaXB0aW9uIiwiX2R1ZURhdGUiLCJfcHJpb3JpdHkiLCJfc3RhdHVzIiwiX3Byb2pJZCIsInN0YXR1cyIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJoYXNPd25Qcm9wZXJ0eSIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJyZXBsYWNlIiwicCIsInRhc2tzQ29udGFpbmVyIiwiY291bnRQcm9qZWN0cyIsImFycmF5IiwibWluIiwibWF4IiwiTWF0aCIsImZsb29yIiwiZm91bmQiLCJkaXNwbGF5VGFzayIsInRhc2tDYXJkIiwiZGl2U2hvd01vZGUiLCJjbGFzc0xpc3QiLCJhZGQiLCJkaXZTaG93TW9kZUxlZnQiLCJwcmlvcml0eUJveCIsInRhc2tUaXRsZSIsInRleHRDb250ZW50IiwiYXBwZW5kIiwiZGl2U2hvd01vZGVSaWdodCIsInNwYW5EdWVEYXRlIiwic3BhblN0YXR1cyIsImVkaXRUYXNrSW1hZ2UiLCJJbWFnZSIsImRhdGFzZXQiLCJUYXNrSWQiLCJUYXNrUHJvaklkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImVkaXRUYXNrIiwiZGVsZXRlVGFza0ltYWdlIiwiZGVsZXRlVGFzayIsImRpdkVkaXRNb2RlIiwiZWRpdFRhc2tGb3JtV3JhcHBlciIsImVkaXRUYXNrVGl0bGVJbnB1dCIsImVkaXRUYXNrRGVzY3JpcHRpb25JbnB1dCIsImVkaXRQcmlvcml0eVNwYW4iLCJlZGl0UHJpb3JpdHlMYWJlbCIsImVkaXRQcmlvcml0eVNlbGVjdCIsImVkaXRQcmlvcml0eU9wdGlvbjEiLCJlZGl0UHJpb3JpdHlPcHRpb24yIiwiZWRpdFByaW9yaXR5T3B0aW9uMyIsImVkaXREYXRlU3BhbiIsImVkaXREYXRlTGFiZWwiLCJlZGl0RGF0ZUlucHV0IiwiZWRpdFRhc2tGb3JtQnV0dG9ucyIsImVkaXRUYXNrRm9ybUNyZWF0ZSIsImVkaXRUYXNrRm9ybUNhbmNlbCIsIlByb2plY3QiLCJUYXNrIiwiY2FuY2VsQWRkUHJvamVjdCIsInRvZ2dsZSIsImNhbmNlbEFkZFRhc2siLCJwcm9qZWN0SWQiLCJ0YXNrSWQiLCJUYXNrQ2FyZCIsInByb2plY3RJbmR4IiwicHJvamVjdCIsInJlbW92ZVRhc2siLCJjb25zb2xlIiwibG9nIiwidGFza3MiLCJkaXNwbGF5UHJvamVjdCIsIndyYXBlciIsInNwYW5TaG93TW9kZSIsInNwYW5FZGl0TW9kZSIsImJ0biIsInByb2plY3REaXYiLCJzaG93biIsIm9wZW5UYWIiLCJlZGl0UHJvamVjdEltYWdlIiwiZWRpdFByb2plY3QiLCJkZWxldGVQcm9qZWN0SW1hZ2UiLCJ3cmFwcGVyIiwicHJvamVjdHNMaXN0IiwiZGVsZXRlRnJvbVByb2plY3RMaXN0IiwiZGVsZXRlUHJvamVjdCIsImVkaXRQcm9qVGl0bGVJbnB1dCIsInN1Ym1pdFByb2plY3RJbWFnZSIsImlucHV0IiwiZWRpdFByb2plY3RUaXRsZSIsInN1Ym1pdEVkaXRQcm9qZWN0IiwiY2FuY2VsUHJvamVjdEltYWdlIiwiYnRuVHh0IiwiY2FuY2VsUHJvamVjdCIsIm15cHJvamVjdCIsImRpdk5hdldyYXAiLCJoZWFkZXIiLCJoZWFkZXJUaXRsZSIsImhlYWRlckFkZFRhc2siLCJhZGRUYXNrSW1hZ2UiLCJhZGRUYXNrU3BhbiIsImFkZFRhc2tGb3JtV3JhcHBlciIsImFkZFRhc2tUaXRsZUlucHV0IiwiYWRkVGFza0Rlc2NyaXB0aW9uSW5wdXQiLCJhZGRQcmlvcml0eVNwYW4iLCJhZGRQcmlvcml0eUxhYmVsIiwiYWRkUHJpb3JpdHlTZWxlY3QiLCJhZGRQcmlvcml0eU9wdGlvbjEiLCJhZGRQcmlvcml0eU9wdGlvbjIiLCJhZGRQcmlvcml0eU9wdGlvbjMiLCJhZGREYXRlU3BhbiIsImFkZERhdGVMYWJlbCIsImFkZERhdGVJbnB1dCIsImFkZFRhc2tGb3JtQnV0dG9ucyIsImFkZFRhc2tGb3JtQ3JlYXRlIiwidGFza0NvdW50ZXIiLCJhZGRUYXNrIiwiYWRkVGFza1RvUHJvamVjdCIsImFkZFRhc2tGb3JtQ2FuY2VsIiwidGFza3NXcmFwcGVyIiwiZWxlbWVudCIsInRhc2tOYXYiLCJnbG9iYWxDb250YWluZXIiLCJwcmoxIiwicHJqMiIsInRhc2sxIiwidGFzazIiLCJ0YXNrMyIsInRhc2s0IiwicHJvakxpc3QiLCJicmFuZCIsImFkZFByb2oiLCJhZGRQcm9qZWN0SW1hZ2UiLCJhZGRQcm9qVGV4dCIsImFkZFByb2pGb3JtIiwiYWRkUHJvalRpdGxlSW5wdXQiLCJhZGRQcm9qZWN0Rm9ybUJ1dHRvbnMiLCJhZGRQcm9qZWN0Rm9ybUNyZWF0ZSIsImFkZFByb2plY3QiLCJhZGRQcm9qZWN0Rm9ybUNhbmNlbCIsInRhYnNEaXYiLCJwcm9qZWN0TmF2Il0sIm1hcHBpbmdzIjoidUZBR0lBLEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUksaUtBQWtLLEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLDZCQUE2QixNQUFRLEdBQUcsU0FBVyxnR0FBZ0csZUFBaUIsQ0FBQyxrS0FBa0ssV0FBYSxNQUUxakIsVyxRQ0NBRCxFQUFPRSxRQUFVLFNBQVVDLEdBQ3pCLElBQUlDLEVBQU8sR0F1RFgsT0FyREFBLEVBQUtDLFNBQVcsV0FDZCxPQUFPQyxLQUFLQyxLQUFJLFNBQVVDLEdBQ3hCLElBQUlDLEVBQVVOLEVBQXVCSyxHQUVyQyxPQUFJQSxFQUFLLEdBQ0EsVUFBVUUsT0FBT0YsRUFBSyxHQUFJLE1BQU1FLE9BQU9ELEVBQVMsS0FHbERBLEtBQ05FLEtBQUssS0FLVlAsRUFBS1EsRUFBSSxTQUFVQyxFQUFTQyxFQUFZQyxHQUNmLGlCQUFaRixJQUVUQSxFQUFVLENBQUMsQ0FBQyxLQUFNQSxFQUFTLE1BRzdCLElBQUlHLEVBQXlCLEdBRTdCLEdBQUlELEVBQ0Ys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QyxPQUFrQnNELEdBQ2xCRSxRQUFRQyxJQUFJLEdBQ0R6SyxTQUFTQyxjQUFjLFNBQzdCK0gsT0FBUTJDLEVBQWVMLElBRWpCdEssU0FBU0MsY0FBYyxxQkFDN0J5SCxVQUFVc0MsT0FBTyxTQzZFK0I4RSxLQUVyREQsRUFBcUI5RyxZQUFjLGlCQUNuQyxNQUFNZ0gsRUFBdUIvTyxTQUFTMkIsY0FBYyxVQUNwRG9OLEVBQXFCaEgsWUFBYyxTQUVuQ2dILEVBQXFCdEcsaUJBQWlCLFNBQVMsSUFBTXNCLE1BRXJENkUsRUFBc0I1RyxPQUFPNkcsRUFBcUJFLEdBQ2xETCxFQUFZMUcsT0FBTzJHLEVBQW1CQyxHQUV0QyxNQUFNSSxFQUFVaFAsU0FBUzJCLGNBQWMsT0FTdkMsT0FSQXFOLEVBQVEvTSxhQUFhLEtBQU0sUUFFM0JvTSxFQUFTdE0sU0FBUTZMLElBQ2ZvQixFQUFRaEgsT0FBTzJDLEVBQWVpRCxJQUN2Qm9CLEtBR1Q3QyxFQUFXbkUsT0FBT3NHLEVBQU9DLEVBQVNHLEVBQWNNLEdBQ3pDN0MsR0NwRmM4QyxDQUFXLEdBQWdCbEksSSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudGFiY29udGVudCB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uc2hvd24ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5hZGRfcHJval9pY29uIHtcXG4gIHdpZHRoOiAxcmVtO1xcbiAgaGVpZ2h0OiAxcmVtO1xcbn1cXG5cXG4uaGlkZSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnRhYmNvbnRlbnQge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnNob3duIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4uYWRkX3Byb2pfaWNvbiB7XFxuICB3aWR0aDogMXJlbTtcXG4gIGhlaWdodDogMXJlbTtcXG59XFxuXFxuLmhpZGUge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsImNsYXNzIFByb2plY3Qge1xuICBjb25zdHJ1Y3Rvcih0aXRsZSwgaWQpe1xuICAgIHRoaXMuX3RpdGxlID0gdGl0bGU7XG4gICAgdGhpcy5fdGFza3MgPSBbXTtcbiAgICB0aGlzLl9pZCA9IGlkO1xuICAgIHRoaXMuX3Rhc2tDb3VudGVyID0gMDtcbiAgfVxuICBnZXQgdGl0bGUoKXtcbiAgICByZXR1cm4gdGhpcy5fdGl0bGU7XG4gIH1cblxuICBnZXQgaWQoKXtcbiAgICByZXR1cm4gdGhpcy5faWQ7XG4gIH1cblxuICBnZXQgdGFza0NvdW50ZXIoKXtcbiAgICByZXR1cm4gdGhpcy5fdGFza0NvdW50ZXI7XG4gIH1cblxuICBzZXQgdGl0bGUodGl0bGUpe1xuICAgIHRoaXMuX3RpdGxlID0gdGl0bGU7XG4gIH1cblxuICBnZXQgdGFza3MoKXtcbiAgICByZXR1cm4gdGhpcy5fdGFza3M7XG4gIH1cblxuICBhZGRUYXNrKHRhc2spe1xuICAgIC8vIHNvcnQgdGFza3MgbGF0ZXJcbiAgICB0aGlzLl90YXNrcy5wdXNoKHRhc2spO1xuICAgIHRoaXMuX3Rhc2tDb3VudGVyICs9IDE7XG4gIH1cblxuICByZW1vdmVUYXNrKGlkKXtcbiAgICAvLyBmaW5kIGluZGV4IG9mIHRhc2sgYnkgaWRcbiAgICB0aGlzLl90YXNrcy5zcGxpY2UoaWQsMSk7Ly9pZCA9PT0+IHRyYW5zZm9ybWVyIGVuIGluZGV4XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvamVjdDsiLCJjbGFzcyBUYXNre1xuICBjb25zdHJ1Y3Rvcih0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUgPSA5MTEsIHByaW9yaXR5LCBwcm9qSWQsIGlkKXtcbiAgICB0aGlzLl90aXRsZSA9IHRpdGxlO1xuICAgIHRoaXMuX2Rlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgdGhpcy5fZHVlRGF0ZSA9IGR1ZURhdGU7XG4gICAgdGhpcy5fcHJpb3JpdHkgPSBwcmlvcml0eTsgLy8gaGlnaHQgbWVkaXVtIGxvd1xuICAgIHRoaXMuX3N0YXR1cyA9IFwidG9kb1wiOy8vIFwidG9kb1wiICA9PT09PiBcInByb2dyZXNzXCIgPT09PiBcImRvbmVcIlxuICAgIHRoaXMuX3Byb2pJZCA9IHByb2pJZDtcbiAgICB0aGlzLl9pZCA9IGlkO1xuICB9XG5cbiAgZ2V0IHRpdGxlKCl7XG4gICAgcmV0dXJuIHRoaXMuX3RpdGxlO1xuICB9XG5cbiAgc2V0IHRpdGxlKHRpdGxlKXtcbiAgICB0aGlzLl90aXRsZSA9IHRpdGxlO1xuICB9XG5cbiAgZ2V0IGRlc2NyaXB0aW9uKCl7XG4gICAgcmV0dXJuIHRoaXMuX2Rlc2NyaXB0aW9uO1xuICB9XG5cbiAgXG4gIGdldCBwcm9qSWQoKXtcbiAgICByZXR1cm4gdGhpcy5fcHJvaklkO1xuICB9XG5cbiAgXG4gIGdldCBpZCgpe1xuICAgIHJldHVybiB0aGlzLl9pZDtcbiAgfVxuXG4gIHNldCBkZXNjcmlwdGlvbihkZXNjcmlwdGlvbil7XG4gICAgdGhpcy5fZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgfVxuXG4gIGdldCBkdWVEYXRlKCl7XG4gICAgcmV0dXJuIHRoaXMuX2R1ZURhdGU7XG4gIH1cblxuICBzZXQgZHVlRGF0ZShkdWVEYXRlKXtcbiAgICB0aGlzLl9kdWVEYXRlID0gZHVlRGF0ZTtcbiAgfVxuXG4gIGdldCBwcmlvcml0eSgpe1xuICAgIHJldHVybiB0aGlzLl9wcmlvcml0eTtcbiAgfVxuXG4gIHNldCBwcmlvcml0eShwcmlvcml0eSl7XG4gICAgdGhpcy5fcHJpb3JpdHkgPSBwcmlvcml0eTtcbiAgfVxuXG4gIGdldCBzdGF0dXMoKXtcbiAgICByZXR1cm4gdGhpcy5fc3RhdHVzO1xuICB9XG5cbiAgc2V0IHN0YXR1cyhzdGF0dXMpe1xuICAgIHRoaXMuX3N0YXR1cyA9IHN0YXR1cztcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUYXNrOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gbW9kdWxlWydkZWZhdWx0J10gOlxuXHRcdCgpID0+IG1vZHVsZTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsImltcG9ydCBhcGkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY29udGVudC5sb2NhbHMgfHwge307IiwiLy8gaW1wb3J0IHsgaWQgfSBmcm9tIFwiZGF0ZS1mbnMvbG9jYWxlXCI7XG5cbmNvbnN0IHRhc2tzQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG50YXNrc0NvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2tzX2NvbnRhaW5lcicpO1xuXG5jb25zdCBwcm9qZWN0c0xpc3QgPSBbXTtcbmxldCBjb3VudFByb2plY3RzID0gMDtcblxuY29uc3QgZmluZFByb2plY3QgPSAoYXJyYXksaWQpPT57XG4gIGxldCBtaW4gPSAwO1xuICBsZXQgbWF4ID0gYXJyYXkubGVuZ3RoIC0gMTtcbiAgbGV0IGkgPSBNYXRoLmZsb29yKChtaW4gKyBtYXgpIC8gMik7XG4gIGxldCBmb3VuZCA9IGZhbHNlO1xuICB3aGlsZSAobWluIDw9IG1heCAmJiAhZm91bmQpIHtcbiAgICBmb3VuZCA9IGFycmF5W2ldLmlkID09PSBpZDtcbiAgICBpZiAoIWZvdW5kKSB7XG4gICAgICBpZiAoYXJyYXlbaV0uaWQgPiBpZCkge1xuICAgICAgICBtYXggPSBpIC0gMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1pbiA9IGkgKyAxO1xuICAgICAgfVxuICAgICAgaSA9IE1hdGguZmxvb3IoKG1pbiArIG1heCkgLyAyKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGk7XG59XG5cbmNvbnN0IGRlbGV0ZUZyb21Qcm9qZWN0TGlzdCA9IChwcm9qZWN0c0xpc3QgLCBpZCk9PntcbiAgbGV0IHRhcmdldCA9IGZpbmRQcm9qZWN0KHByb2plY3RzTGlzdCwgaWQpO1xuICBwcm9qZWN0c0xpc3Quc3BsaWNlKHRhcmdldCAsIDEpO1xufVxuXG5jb25zdCBlZGl0UHJvamVjdFRpdGxlID0gKHByb2plY3RzTGlzdCAsIGlkLCB2YWx1ZSk9PntcbiAgbGV0IHRhcmdldCA9IGZpbmRQcm9qZWN0KHByb2plY3RzTGlzdCwgaWQpO1xuICBwcm9qZWN0c0xpc3RbdGFyZ2V0XS50aXRsZSA9IHZhbHVlO1xufVxuXG5jb25zdCBhZGRUYXNrVG9Qcm9qZWN0ID0gKGFycmF5LCBpZCwgdGFzayk9PntcbiAgbGV0IHRhcmdldCA9IGZpbmRQcm9qZWN0KGFycmF5LCBpZCk7XG4gIGxldCBwcm9qZWN0ID0gYXJyYXlbdGFyZ2V0XTtcbiAgcHJvamVjdC5hZGRUYXNrKHRhc2spO1xufVxuXG5leHBvcnQge3Byb2plY3RzTGlzdCwgY291bnRQcm9qZWN0cyAsIGRlbGV0ZUZyb21Qcm9qZWN0TGlzdCwgZWRpdFByb2plY3RUaXRsZSAsIHRhc2tzQ29udGFpbmVyLCBhZGRUYXNrVG9Qcm9qZWN0LCBmaW5kUHJvamVjdH07IiwiaW1wb3J0IGFkZFRhc2tJY29uIGZyb20gXCIuL2FkZC5wbmdcIjtcbmltcG9ydCB7IGNhbmNlbEFkZFRhc2sgLCBhZGRUYXNrLCBkZWxldGVUYXNrLCBlZGl0VGFzayAsIGNhbmNlbEVkaXRUYXNrfSBmcm9tIFwiLi9saXN0bmVyc1wiO1xuaW1wb3J0IGVkaXRUYXNrSWNvbiBmcm9tIFwiLi9wZW5jaWwucG5nXCI7XG5pbXBvcnQgZGVsZXRlVGFza0ljb24gIGZyb20gXCIuL2NhbmNlbC5wbmdcIjtcblxuY29uc3QgZGlzcGxheVRhc2sgPSAodGFzayk9PntcbiAgY29uc3QgdGFza0NhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGFza0NhcmQuc2V0QXR0cmlidXRlKCdjbGFzcycsICd0YXNrX2NhcmQnKTtcbiAgdGFza0NhcmQuc2V0QXR0cmlidXRlKCdpZCcsIGB0YXNrX2NhcmRfJHt0YXNrLnByb2pJZH1fJHt0YXNrLmlkfWApO1xuXG4gIC8vIGRpc3BsYXlpbmcgdGhlIHRhc2sgbW9kZVxuICBjb25zdCBkaXZTaG93TW9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXZTaG93TW9kZS5zZXRBdHRyaWJ1dGUoJ2lkJywgYHRhc2tfc2hvd19tb2RlXyR7dGFzay5wcm9qSWR9XyR7dGFzay5pZH1gKTtcbiAgZGl2U2hvd01vZGUuY2xhc3NMaXN0LmFkZCgnc2hvd19kaXZfdGFzaycpO1xuXG4gIGNvbnN0IGRpdlNob3dNb2RlTGVmdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXZTaG93TW9kZUxlZnQuc2V0QXR0cmlidXRlKCdjbGFzcycsICdkaXZfc2hvd19tb2RlX2xlZnQnKTtcbiAgY29uc3QgcHJpb3JpdHlCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgcHJpb3JpdHlCb3guY2xhc3NMaXN0LmFkZChgcHJpb3JpdHlfYm94XyR7dGFzay5wcmlvcml0eX1gLCBcInByaW9yaXR5X2JveFwiKTtcbiAgY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcbiAgdGFza1RpdGxlLnRleHRDb250ZW50ID0gdGFzay50aXRsZTtcbiAgZGl2U2hvd01vZGVMZWZ0LmFwcGVuZChwcmlvcml0eUJveCwgdGFza1RpdGxlKTtcblxuICBjb25zdCBkaXZTaG93TW9kZVJpZ2h0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRpdlNob3dNb2RlUmlnaHQuc2V0QXR0cmlidXRlKCdjbGFzcycsICdkaXZfc2hvd19tb2RlX3JpZ2h0Jyk7XG5cbiAgY29uc3Qgc3BhbkR1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHNwYW5EdWVEYXRlLnRleHRDb250ZW50ID0gdGFzay5kdWVEYXRlO1xuXG4gIGNvbnN0IHNwYW5TdGF0dXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHNwYW5TdGF0dXMuc2V0QXR0cmlidXRlKCdpZCcsIGB0YXNrX3N0YXR1c18ke3Rhc2suc3RhdHVzfWApO1xuICBzcGFuU3RhdHVzLmNsYXNzTGlzdC5hZGQoJ3Rhc2tfc3RhdHVzJyk7XG4gIHNwYW5TdGF0dXMudGV4dENvbnRlbnQgPSB0YXNrLnN0YXR1cztcblxuICBjb25zdCBlZGl0VGFza0ltYWdlID0gbmV3IEltYWdlKCk7XG4gIGVkaXRUYXNrSW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBlZGl0VGFza0ljb24pO1xuICBlZGl0VGFza0ltYWdlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Byb2pfaWNvbicpO1xuICBlZGl0VGFza0ltYWdlLmRhdGFzZXQuVGFza0lkID0gdGFzay5pZDtcbiAgZWRpdFRhc2tJbWFnZS5kYXRhc2V0LlRhc2tQcm9qSWQgPSB0YXNrLnByb2pJZDtcbiAgZWRpdFRhc2tJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4gZWRpdFRhc2soZSkpO1xuXG4gIGNvbnN0IGRlbGV0ZVRhc2tJbWFnZSA9IG5ldyBJbWFnZSgpO1xuICBkZWxldGVUYXNrSW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBkZWxldGVUYXNrSWNvbik7XG4gIGRlbGV0ZVRhc2tJbWFnZS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZF9wcm9qX2ljb24nKTtcbiAgZGVsZXRlVGFza0ltYWdlLmRhdGFzZXQuVGFza0lkID0gdGFzay5pZDtcbiAgZGVsZXRlVGFza0ltYWdlLmRhdGFzZXQuVGFza1Byb2pJZCA9IHRhc2sucHJvaklkO1xuICBkZWxldGVUYXNrSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IGRlbGV0ZVRhc2soZSkpO1xuXG4gIGRpdlNob3dNb2RlUmlnaHQuYXBwZW5kKHNwYW5EdWVEYXRlLCBzcGFuU3RhdHVzLCBlZGl0VGFza0ltYWdlLCBkZWxldGVUYXNrSW1hZ2UpO1xuXG4gIC8vIGVkaXRpbmcgdGhlIHRhc2sgbW9kZVxuXG4gIGNvbnN0IGRpdkVkaXRNb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRpdkVkaXRNb2RlLnNldEF0dHJpYnV0ZSgnaWQnLCBgdGFza19lZGl0X21vZGVfJHt0YXNrLnByb2pJZH1fJHt0YXNrLmlkfWApO1xuICBkaXZFZGl0TW9kZS5jbGFzc0xpc3QuYWRkKCdlZGl0X2Rpdl90YXNrJywgJ2hpZGUnKTtcbiAgLy8gRWRpdCBGb3JtXG4gIGNvbnN0IGVkaXRUYXNrRm9ybVdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZWRpdFRhc2tGb3JtV3JhcHBlci5jbGFzc0xpc3QuYWRkKCdlZGl0X3Rhc2tfZm9ybV93cmFwcGVyJyk7XG4gIGNvbnN0IGVkaXRUYXNrVGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGVkaXRUYXNrVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICBlZGl0VGFza1RpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsIGBlZGl0X3Rhc2tfdGl0bGVfJHt0YXNrLnByb2pJZH1fJHt0YXNrLmlkfWApO1xuICBlZGl0VGFza1RpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd2YWx1ZScsIHRhc2sudGl0bGUpO1xuXG4gIGNvbnN0IGVkaXRUYXNrRGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGVkaXRUYXNrRGVzY3JpcHRpb25JbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICBlZGl0VGFza0Rlc2NyaXB0aW9uSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsIGBlZGl0X3Rhc2tfZGVzY3JpcHRpb25fJHt0YXNrLnByb2pJZH1fJHt0YXNrLmlkfWApO1xuICBlZGl0VGFza0Rlc2NyaXB0aW9uSW5wdXQuc2V0QXR0cmlidXRlKCd2YWx1ZScsIHRhc2suZGVzY3JpcHRpb24pO1xuXG4gIGNvbnN0IGVkaXRQcmlvcml0eVNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIGVkaXRQcmlvcml0eVNwYW4uc2V0QXR0cmlidXRlKCdjbGFzcycsICdlZGl0X3Rhc2tfc2VsZWN0X3NwYW4nKTtcbiAgY29uc3QgZWRpdFByaW9yaXR5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICBlZGl0UHJpb3JpdHlMYWJlbC50ZXh0Q29udGVudCA9ICdQcmlvcml0eTonXG4gIGVkaXRQcmlvcml0eUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgYGVkaXRfdGFza19wcmlvcml0eV8ke3Rhc2sucHJvaklkfV8ke3Rhc2suaWR9YCk7XG4gIGNvbnN0IGVkaXRQcmlvcml0eVNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuICBlZGl0UHJpb3JpdHlTZWxlY3Quc2V0QXR0cmlidXRlKCdpZCcsIGBlZGl0X3Rhc2tfcHJpb3JpdHlfJHt0YXNrLnByb2pJZH1fJHt0YXNrLmlkfWApO1xuICBjb25zdCBlZGl0UHJpb3JpdHlPcHRpb24xID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gIGVkaXRQcmlvcml0eU9wdGlvbjEuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdoaWdodCcpO1xuICBlZGl0UHJpb3JpdHlPcHRpb24xLnRleHRDb250ZW50ID0gJ0hpZ2h0JztcbiAgY29uc3QgZWRpdFByaW9yaXR5T3B0aW9uMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICBlZGl0UHJpb3JpdHlPcHRpb24yLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnbWVkaXVtJyk7XG4gIGVkaXRQcmlvcml0eU9wdGlvbjIudGV4dENvbnRlbnQgPSAnTWVkaXVtJztcbiAgY29uc3QgZWRpdFByaW9yaXR5T3B0aW9uMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICBlZGl0UHJpb3JpdHlPcHRpb24zLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnbG93Jyk7XG4gIGVkaXRQcmlvcml0eU9wdGlvbjMudGV4dENvbnRlbnQgPSAnTG93JztcbiAgXG4gIGVkaXRQcmlvcml0eVNlbGVjdC5hcHBlbmQoZWRpdFByaW9yaXR5T3B0aW9uMSwgZWRpdFByaW9yaXR5T3B0aW9uMiwgZWRpdFByaW9yaXR5T3B0aW9uMyk7XG4gIGVkaXRQcmlvcml0eVNlbGVjdC52YWx1ZSA9IHRhc2sucHJpb3JpdHk7XG4gIGVkaXRQcmlvcml0eVNwYW4uYXBwZW5kKGVkaXRQcmlvcml0eUxhYmVsLCBlZGl0UHJpb3JpdHlTZWxlY3QpO1xuXG4gIGNvbnN0IGVkaXREYXRlU3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgZWRpdFByaW9yaXR5U3Bhbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2VkaXRfdGFza19kYXRlX3NwYW4nKTtcbiAgY29uc3QgZWRpdERhdGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIGVkaXREYXRlTGFiZWwudGV4dENvbnRlbnQgPSAnU2NoZWR1bGU6J1xuICBlZGl0RGF0ZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgYGVkaXRfdGFza19kYXRlXyR7dGFzay5wcm9qSWR9XyR7dGFzay5pZH1gKTtcbiAgY29uc3QgZWRpdERhdGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGVkaXREYXRlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2RhdGUnKTtcbiAgZWRpdERhdGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgYGVkaXRfdGFza19kYXRlXyR7dGFzay5wcm9qSWR9XyR7dGFzay5pZH1gKTtcbiAgZWRpdERhdGVTcGFuLmFwcGVuZChlZGl0RGF0ZUxhYmVsLCBlZGl0RGF0ZUlucHV0KTtcblxuICBjb25zdCBlZGl0VGFza0Zvcm1CdXR0b25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGVkaXRUYXNrRm9ybUJ1dHRvbnMuc2V0QXR0cmlidXRlKCdjbGFzcycsICdlZGl0X3Rhc2tfZm9ybV9idXR0b25zJyk7XG4gIGNvbnN0IGVkaXRUYXNrRm9ybUNyZWF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAvLyBlZGl0VGFza0Zvcm1DcmVhdGUuZGF0YXNldC5wcm9qZWN0SWQgPSBteXByb2plY3QuaWQ7XG4gIC8vIGVkaXRUYXNrRm9ybUNyZWF0ZS5lZGl0RXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4gc3VibWl0RWRpdFRhc2soZSkpO1xuICBlZGl0VGFza0Zvcm1DcmVhdGUudGV4dENvbnRlbnQgPSAnU3VibWl0JztcblxuICBjb25zdCBlZGl0VGFza0Zvcm1DYW5jZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgZWRpdFRhc2tGb3JtQ2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCc7XG4gIGVkaXRUYXNrRm9ybUNhbmNlbC5kYXRhc2V0LlRhc2tJZCA9IHRhc2suaWQ7XG4gIGVkaXRUYXNrRm9ybUNhbmNlbC5kYXRhc2V0LlRhc2tQcm9qSWQgPSB0YXNrLnByb2pJZDtcblxuXG4gIC8vIGVkaXRUYXNrRm9ybUNhbmNlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICBlID0+IGNhbmNlbEVkaXRUYXNrKGUpKTtcblxuICBlZGl0VGFza0Zvcm1CdXR0b25zLmFwcGVuZChlZGl0VGFza0Zvcm1DcmVhdGUgLCBlZGl0VGFza0Zvcm1DYW5jZWwpO1xuXG4gIGVkaXRUYXNrRm9ybVdyYXBwZXIuYXBwZW5kKGVkaXRUYXNrVGl0bGVJbnB1dCwgZWRpdFRhc2tEZXNjcmlwdGlvbklucHV0LCBlZGl0UHJpb3JpdHlTcGFuLCBlZGl0RGF0ZVNwYW4sIGVkaXRUYXNrRm9ybUJ1dHRvbnMpO1xuXG4gIC8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgZGl2RWRpdE1vZGUuYXBwZW5kKGVkaXRUYXNrRm9ybVdyYXBwZXIpO1xuXG4gIGRpdlNob3dNb2RlLmFwcGVuZChkaXZTaG93TW9kZUxlZnQsIGRpdlNob3dNb2RlUmlnaHQpO1xuICB0YXNrQ2FyZC5hcHBlbmQoZGl2U2hvd01vZGUsIGRpdkVkaXRNb2RlKTtcblxuICByZXR1cm4gdGFza0NhcmQ7XG59XG5cbmNvbnN0IHRhc2tOYXYgPSAobXlwcm9qZWN0KSA9PiB7XG4gIC8vIHdyYXBwZXJcbiAgY29uc3QgZGl2TmF2V3JhcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXZOYXZXcmFwLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAndGFiY29udGVudCcpO1xuICBkaXZOYXZXcmFwLnNldEF0dHJpYnV0ZSgnaWQnLCBgcHJval8ke215cHJvamVjdC5pZH1gKTtcblxuICAvLyBjb25zdCBicmFuZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAvLyBicmFuZC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3Byb2plY3RfdGl0bGUnKTtcbiAgLy8gYnJhbmQudGV4dENvbnRlbnQgPSBteXByb2plY3QudGl0bGUgKyAndGhlIGlkJyArIG15cHJvamVjdC5pZDtcblxuICAvLyBwcm9qZWN0IGhlYWRlclxuICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgaGVhZGVyLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAncHJvamVjdF9oZWFkZXInKTtcbiAgY29uc3QgaGVhZGVyVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xuICBoZWFkZXJUaXRsZS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2hlYWRlcl90aXRsZScpO1xuICBoZWFkZXJUaXRsZS50ZXh0Q29udGVudCA9IG15cHJvamVjdC50aXRsZTtcblxuXG4gIC8vIGFkZCB0YXNrIGhlYWRlclxuICBcbiAgY29uc3QgaGVhZGVyQWRkVGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBoZWFkZXJBZGRUYXNrLmRhdGFzZXQucHJvamVjdElkID0gbXlwcm9qZWN0LmlkO1xuICBoZWFkZXJBZGRUYXNrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiBjYW5jZWxBZGRUYXNrKGUpKTtcblxuICBoZWFkZXJBZGRUYXNrLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnaGVhZGVyX2FkZF90YXNrJyk7XG4gIGNvbnN0IGFkZFRhc2tJbWFnZSA9IG5ldyBJbWFnZSgpO1xuICBhZGRUYXNrSW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBhZGRUYXNrSWNvbik7XG4gIGFkZFRhc2tJbWFnZS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZF9wcm9qX2ljb24nKTtcbiAgY29uc3QgYWRkVGFza1NwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIGFkZFRhc2tTcGFuLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Rhc2tfc3BhbicpO1xuICBhZGRUYXNrU3Bhbi50ZXh0Q29udGVudCA9ICdBZGQgYSBUYXNrJztcbiAgaGVhZGVyQWRkVGFzay5hcHBlbmQoYWRkVGFza0ltYWdlLCBhZGRUYXNrU3Bhbik7XG5cblxuXG4gIGhlYWRlci5hcHBlbmQoaGVhZGVyVGl0bGUsIGhlYWRlckFkZFRhc2spO1xuXG4gIC8vIGFkZCB0YXNrIGZvcm1cblxuICBjb25zdCBhZGRUYXNrRm9ybVdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgYWRkVGFza0Zvcm1XcmFwcGVyLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Rhc2tfZm9ybV93cmFwcGVyJyk7XG4gIGFkZFRhc2tGb3JtV3JhcHBlci5jbGFzc0xpc3QuYWRkKCdoaWRlJyk7XG4gIGFkZFRhc2tGb3JtV3JhcHBlci5zZXRBdHRyaWJ1dGUoJ2lkJywgYGFkZF90YXNrX2Zvcm1fJHtteXByb2plY3QuaWR9YCk7XG5cbiAgY29uc3QgYWRkVGFza1RpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBhZGRUYXNrVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICBhZGRUYXNrVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgYHRhc2tfdGl0bGVfJHtteXByb2plY3QuaWR9YCk7XG4gIGFkZFRhc2tUaXRsZUlucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAnVHlwZSB5b3VyIHRhc2sgdGl0bGUgaGVyZSEnKTtcblxuICBjb25zdCBhZGRUYXNrRGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGFkZFRhc2tEZXNjcmlwdGlvbklucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gIGFkZFRhc2tEZXNjcmlwdGlvbklucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCBgdGFza19kZXNjcmlwdGlvbl8ke215cHJvamVjdC5pZH1gKTtcbiAgYWRkVGFza0Rlc2NyaXB0aW9uSW5wdXQuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsICdUeXBlIGEgZGVzY3JpcHRpb24gZm9yIHlvdXIgdGFzayBoZXJlIScpO1xuXG4gIGNvbnN0IGFkZFByaW9yaXR5U3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgYWRkUHJpb3JpdHlTcGFuLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Rhc2tfc2VsZWN0X3NwYW4nKTtcbiAgY29uc3QgYWRkUHJpb3JpdHlMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIGFkZFByaW9yaXR5TGFiZWwudGV4dENvbnRlbnQgPSAnUHJpb3JpdHk6J1xuICBhZGRQcmlvcml0eUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgYHRhc2tfcHJpb3JpdHlfJHtteXByb2plY3QuaWR9YCk7XG4gIGNvbnN0IGFkZFByaW9yaXR5U2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0Jyk7XG4gIGFkZFByaW9yaXR5U2VsZWN0LnNldEF0dHJpYnV0ZSgnaWQnLCBgdGFza19wcmlvcml0eV8ke215cHJvamVjdC5pZH1gKTtcbiAgY29uc3QgYWRkUHJpb3JpdHlPcHRpb24xID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gIGFkZFByaW9yaXR5T3B0aW9uMS5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJ2hpZ2h0Jyk7XG4gIGFkZFByaW9yaXR5T3B0aW9uMS50ZXh0Q29udGVudCA9ICdIaWdodCc7XG4gIGNvbnN0IGFkZFByaW9yaXR5T3B0aW9uMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICBhZGRQcmlvcml0eU9wdGlvbjIuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdtZWRpdW0nKTtcbiAgYWRkUHJpb3JpdHlPcHRpb24yLnRleHRDb250ZW50ID0gJ01lZGl1bSc7XG4gIGNvbnN0IGFkZFByaW9yaXR5T3B0aW9uMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICBhZGRQcmlvcml0eU9wdGlvbjMuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdsb3cnKTtcbiAgYWRkUHJpb3JpdHlPcHRpb24zLnRleHRDb250ZW50ID0gJ0xvdyc7XG5cbiAgYWRkUHJpb3JpdHlTZWxlY3QuYXBwZW5kKGFkZFByaW9yaXR5T3B0aW9uMSwgYWRkUHJpb3JpdHlPcHRpb24yLCBhZGRQcmlvcml0eU9wdGlvbjMpO1xuICBhZGRQcmlvcml0eVNwYW4uYXBwZW5kKGFkZFByaW9yaXR5TGFiZWwsIGFkZFByaW9yaXR5U2VsZWN0KTtcblxuICBjb25zdCBhZGREYXRlU3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgYWRkUHJpb3JpdHlTcGFuLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Rhc2tfZGF0ZV9zcGFuJyk7XG4gIGNvbnN0IGFkZERhdGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIGFkZERhdGVMYWJlbC50ZXh0Q29udGVudCA9ICdTY2hlZHVsZTonXG4gIGFkZERhdGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGB0YXNrX2RhdGVfJHtteXByb2plY3QuaWR9YCk7XG4gIGNvbnN0IGFkZERhdGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGFkZERhdGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnZGF0ZScpO1xuICBhZGREYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsIGB0YXNrX2RhdGVfJHtteXByb2plY3QuaWR9YCk7XG4gIGFkZERhdGVTcGFuLmFwcGVuZChhZGREYXRlTGFiZWwsIGFkZERhdGVJbnB1dCk7XG5cbiAgY29uc3QgYWRkVGFza0Zvcm1CdXR0b25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGFkZFRhc2tGb3JtQnV0dG9ucy5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZF90YXNrX2Zvcm1fYnV0dG9ucycpO1xuICBjb25zdCBhZGRUYXNrRm9ybUNyZWF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBhZGRUYXNrRm9ybUNyZWF0ZS5kYXRhc2V0LnByb2plY3RJZCA9IG15cHJvamVjdC5pZDtcbiAgYWRkVGFza0Zvcm1DcmVhdGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4gYWRkVGFzayhlKSk7XG4gIGFkZFRhc2tGb3JtQ3JlYXRlLnRleHRDb250ZW50ID0gJ0NyZWF0ZSBUYXNrJztcblxuICBjb25zdCBhZGRUYXNrRm9ybUNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBhZGRUYXNrRm9ybUNhbmNlbC50ZXh0Q29udGVudCA9ICdDYW5jZWwnO1xuICBhZGRUYXNrRm9ybUNhbmNlbC5kYXRhc2V0LnByb2plY3RJZCA9IG15cHJvamVjdC5pZDtcbiAgYWRkVGFza0Zvcm1DYW5jZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAgZSA9PiBjYW5jZWxBZGRUYXNrKGUpKTtcblxuICBhZGRUYXNrRm9ybUJ1dHRvbnMuYXBwZW5kKGFkZFRhc2tGb3JtQ3JlYXRlICwgYWRkVGFza0Zvcm1DYW5jZWwpO1xuXG4gIGFkZFRhc2tGb3JtV3JhcHBlci5hcHBlbmQoYWRkVGFza1RpdGxlSW5wdXQsIGFkZFRhc2tEZXNjcmlwdGlvbklucHV0LCBhZGRQcmlvcml0eVNwYW4sIGFkZERhdGVTcGFuLCBhZGRUYXNrRm9ybUJ1dHRvbnMpO1xuICAvLyB0YXNrcyB3cmFwcGVyXG4gIFxuICBjb25zdCB0YXNrc1dyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGFza3NXcmFwcGVyLnNldEF0dHJpYnV0ZSgnaWQnLCBgdGFza3Nfd3JhcHBlcl8ke215cHJvamVjdC5pZH1gKTtcbiAgdGFza3NXcmFwcGVyLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAndGFza3Nfd3JhcHBlcicpO1xuXG4gIG15cHJvamVjdC50YXNrcy5mb3JFYWNoKCBlbGVtZW50ID0+IHtcbiAgICB0YXNrc1dyYXBwZXIuYXBwZW5kKGRpc3BsYXlUYXNrKGVsZW1lbnQpKTtcbiAgICByZXR1cm4gdGFza3NXcmFwcGVyO1xuICB9KTtcblxuICBkaXZOYXZXcmFwLmFwcGVuZChoZWFkZXIsIGFkZFRhc2tGb3JtV3JhcHBlciwgdGFza3NXcmFwcGVyKTtcbiAgcmV0dXJuIGRpdk5hdldyYXA7XG59XG5cblxuZXhwb3J0IHt0YXNrTmF2ICwgZGlzcGxheVRhc2t9OyIsImltcG9ydCB7IHByb2plY3RzTGlzdCwgY291bnRQcm9qZWN0cyAsIGRlbGV0ZUZyb21Qcm9qZWN0TGlzdCwgZWRpdFByb2plY3RUaXRsZSAsIGFkZFRhc2tUb1Byb2plY3QsIGZpbmRQcm9qZWN0fSBmcm9tICcuL3ZhcmlhYmxlcyc7XG5pbXBvcnQgeyBkaXNwbGF5UHJvamVjdCB9IGZyb20gXCIuL3Byb2plY3ROYXZcIjtcbmltcG9ydCB7IGRpc3BsYXlUYXNrIH0gZnJvbSBcIi4vdGFza05hdlwiO1xuY29uc3QgUHJvamVjdCA9IHJlcXVpcmUoJy4vcHJvamVjdCcpLmRlZmF1bHQ7XG5jb25zdCBUYXNrID0gcmVxdWlyZSgnLi90YXNrJykuZGVmYXVsdDtcblxuY29uc3Qgb3BlblRhYiA9IChlKT0+e1xuICAvLyBjb25zb2xlLmxvZyhgYXllZSBjaGV6ICR7ZS50YXJnZXQuZGF0YXNldC5wcm9qZWN0SWR9YCk7XG4gIGxldCBpZCA9IGUudGFyZ2V0LmRhdGFzZXQucHJvamVjdElkO1xuICBsZXQgcHJvamVjdERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qXyR7aWR9YCk7XG4gIGxldCBzaG93biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG93bicpO1xuICBpZiAoc2hvd24gIT09IG51bGwpe1xuICAgIHNob3duLmNsYXNzTGlzdC50b2dnbGUoJ3Nob3duJyk7XG4gIH1cbiAgcHJvamVjdERpdi5jbGFzc0xpc3QudG9nZ2xlKCdzaG93bicpO1xufVxuXG5jb25zdCBhZGRQcm9qZWN0ID0gKCkgPT4ge1xuICBsZXQgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdF90aXRsZScpO1xuICBsZXQgdGl0bGUgPSBpbnB1dC52YWx1ZTtcbiAgY291bnRQcm9qZWN0cyArPSAxO1xuICBjb25zdCBwcm9qZWN0ID0gbmV3IFByb2plY3QodGl0bGUsIGNvdW50UHJvamVjdHMpO1xuICBwcm9qZWN0c0xpc3QucHVzaChwcm9qZWN0KTtcbiAgY29uc29sZS5sb2cocHJvamVjdHNMaXN0KTtcbiAgbGV0IHRhYnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFicycpO1xuICB0YWJzLmFwcGVuZCggZGlzcGxheVByb2plY3QocHJvamVjdCkgKTtcblxuICBsZXQgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGRfcHJvamVjdF9mb3JtJyk7XG4gIGZvcm0uY2xhc3NMaXN0LnRvZ2dsZSgnaGlkZScpO1xufVxuXG5jb25zdCBjYW5jZWxBZGRQcm9qZWN0ID0gKCkgPT4ge1xuICBsZXQgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdF90aXRsZScpO1xuICBpbnB1dC52YWx1ZSA9ICcnO1xuICBsZXQgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGRfcHJvamVjdF9mb3JtJyk7XG4gIGZvcm0uY2xhc3NMaXN0LnRvZ2dsZSgnaGlkZScpO1xufVxuXG5jb25zdCBkZWxldGVQcm9qZWN0ID0gKGUpPT57XG4gIGxldCBpZCA9IGUudGFyZ2V0LmRhdGFzZXQucHJvamVjdElkO1xuICBsZXQgd3JhcHBlciA9ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjcHJvamVjdF9jb250YWluZXJfJHtpZH1gKTtcbiAgbGV0IHRhYnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFicycpO1xuICB0YWJzLnJlbW92ZUNoaWxkKHdyYXBwZXIpO1xuICAvLyByZW1vdmUgZnJvbSBwcm9qZWN0IGxpc3RcbiAgZGVsZXRlRnJvbVByb2plY3RMaXN0KHByb2plY3RzTGlzdCxpZCk7XG4gIGNvbnNvbGUubG9nKGBhZnRlciBkZWxldGUgJHtwcm9qZWN0c0xpc3R9YCk7XG59XG5cbmNvbnN0IGVkaXRQcm9qZWN0ID0gKGUpID0+IHtcbiAgbGV0IGlkID0gZS50YXJnZXQuZGF0YXNldC5wcm9qZWN0SWQ7XG4gIGNvbnN0IHNwYW5TaG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Byb2plY3Rfc2hvd19tb2RlXyR7aWR9YCk7XG4gIHNwYW5TaG93LmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcbiAgY29uc3Qgc3BhbkVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjcHJvamVjdF9lZGl0X21vZGVfJHtpZH1gKTtcbiAgc3BhbkVkaXQuY2xhc3NMaXN0LnRvZ2dsZSgnaGlkZScpO1xufVxuXG5jb25zdCBjYW5jZWxQcm9qZWN0ID0gKGUpID0+IHtcbiAgbGV0IGlkID0gZS50YXJnZXQuZGF0YXNldC5wcm9qZWN0SWQ7XG4gIGNvbnN0IHNwYW5TaG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Byb2plY3Rfc2hvd19tb2RlXyR7aWR9YCk7XG4gIHNwYW5TaG93LmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcbiAgY29uc3Qgc3BhbkVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjcHJvamVjdF9lZGl0X21vZGVfJHtpZH1gKTtcbiAgc3BhbkVkaXQuY2xhc3NMaXN0LnRvZ2dsZSgnaGlkZScpO1xuICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNlZGl0X3Byb2plY3RfdGl0bGVfJHtpZH1gKTtcbiAgY29uc3QgYnRuVHh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Nob3dfcHJvamVjdF90aXRsZV8ke2lkfWApO1xuICBpbnB1dC52YWx1ZSA9IGJ0blR4dC50ZXh0Q29udGVudDtcbn1cblxuY29uc3Qgc3VibWl0RWRpdFByb2plY3QgPSAoZSkgPT4ge1xuICBsZXQgaWQgPSBlLnRhcmdldC5kYXRhc2V0LnByb2plY3RJZDtcbiAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZWRpdF9wcm9qZWN0X3RpdGxlXyR7aWR9YCk7XG4gIGVkaXRQcm9qZWN0VGl0bGUocHJvamVjdHNMaXN0LCBpZCwgaW5wdXQudmFsdWUpO1xuICBjb25zdCBidG5UeHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjc2hvd19wcm9qZWN0X3RpdGxlXyR7aWR9YCk7XG4gIGJ0blR4dC50ZXh0Q29udGVudCA9IGlucHV0LnZhbHVlO1xuICBjb25zdCBzcGFuU2hvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qZWN0X3Nob3dfbW9kZV8ke2lkfWApO1xuICBzcGFuU2hvdy5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlJyk7XG4gIGNvbnN0IHNwYW5FZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Byb2plY3RfZWRpdF9tb2RlXyR7aWR9YCk7XG4gIHNwYW5FZGl0LmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcbn1cblxuY29uc3QgY2FuY2VsQWRkVGFzayA9IChlKSA9PiB7XG4gIGxldCBpZCA9IGUudGFyZ2V0LmRhdGFzZXQucHJvamVjdElkO1xuICBsZXQgdGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0YXNrX3RpdGxlXyR7aWR9YCk7XG4gIHRpdGxlSW5wdXQudmFsdWUgPSAnJztcbiAgbGV0IGRlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdGFza19kZXNjcmlwdGlvbl8ke2lkfWApO1xuICBkZXNjcmlwdGlvbklucHV0LnZhbHVlID0gJyc7XG4gIGxldCBwcmlvcml0eUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Rhc2tfcHJpb3JpdHlfJHtpZH1gKTtcbiAgcHJpb3JpdHlJbnB1dC52YWx1ZSA9ICdsb3cnO1xuXG4gIGxldCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2FkZF90YXNrX2Zvcm1fJHtpZH1gKTtcbiAgZm9ybS5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlJyk7XG59XG5cbmNvbnN0IGFkZFRhc2sgPSAoZSkgPT4ge1xuICBsZXQgaWQgPSBlLnRhcmdldC5kYXRhc2V0LnByb2plY3RJZDtcbiAgbGV0IHByb2plY3RJbmR4ID0gZmluZFByb2plY3QocHJvamVjdHNMaXN0LCBpZCk7XG4gIGxldCBwcm9qZWN0ID0gcHJvamVjdHNMaXN0W3Byb2plY3RJbmR4XTtcblxuICBsZXQgdGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0YXNrX3RpdGxlXyR7aWR9YCk7XG4gIGxldCB0aXRsZSA9IHRpdGxlSW5wdXQudmFsdWU7XG4gIGxldCBkZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Rhc2tfZGVzY3JpcHRpb25fJHtpZH1gKTtcbiAgbGV0IGRlc2NyaXB0aW9uID0gIGRlc2NyaXB0aW9uSW5wdXQudmFsdWU7XG4gIGxldCBwcmlvcml0eUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Rhc2tfcHJpb3JpdHlfJHtpZH1gKTtcbiAgbGV0IHByaW9yaXR5ID0gcHJpb3JpdHlJbnB1dC52YWx1ZTtcbiAgY29uc3QgdGFzayA9IG5ldyBUYXNrKHRpdGxlICwgZGVzY3JpcHRpb24sIDkxMSwgcHJpb3JpdHksIGlkLCBwcm9qZWN0LnRhc2tDb3VudGVyKTtcbiAgYWRkVGFza1RvUHJvamVjdChwcm9qZWN0c0xpc3QsIGlkLCB0YXNrKTtcbiAgLy8gY29uc29sZS5sb2cocHJvamVjdHNMaXN0KTtcbiAgbGV0IHRhc2tXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Rhc2tzX3dyYXBwZXJfJHtpZH1gKTtcbiAgdGFza1dyYXBwZXIuYXBwZW5kKCBkaXNwbGF5VGFzayh0YXNrKSApO1xuXG4gIGxldCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2FkZF90YXNrX2Zvcm1fJHtpZH1gKTtcbiAgZm9ybS5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlJyk7XG59XG5cbmNvbnN0IGRlbGV0ZVRhc2sgPSAoZSk9PntcbiAgbGV0IHRhc2tJZCA9IGUudGFyZ2V0LmRhdGFzZXQuVGFza0lkO1xuICBsZXQgcHJvaklkID0gZS50YXJnZXQuZGF0YXNldC5UYXNrUHJvaklkO1xuXG4gIGxldCBUYXNrQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0YXNrX2NhcmRfJHtwcm9qSWR9XyR7dGFza0lkfWApO1xuICBsZXQgdGFza3NXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Rhc2tzX3dyYXBwZXJfJHtwcm9qSWR9YCk7XG4gIHRhc2tzV3JhcHBlci5yZW1vdmVDaGlsZChUYXNrQ2FyZCk7XG5cblxuICAvLyByZW1vdmUgZnJvbSBwcm9qZWN0IGxpc3RcbiAgbGV0IHByb2plY3RJbmR4ID0gZmluZFByb2plY3QocHJvamVjdHNMaXN0LCBwcm9qSWQpO1xuICBsZXQgcHJvamVjdCA9IHByb2plY3RzTGlzdFtwcm9qZWN0SW5keF07XG4gIHByb2plY3QucmVtb3ZlVGFzayh0YXNrSWQpO1xuXG4gIGNvbnNvbGUubG9nKGBhZnRlciBkZWxldGUgJHtwcm9qZWN0LnRhc2tzfWApO1xufVxuXG5jb25zdCBlZGl0VGFzayA9IChlKSA9PiB7XG4gIGxldCB0YXNrSWQgPSBlLnRhcmdldC5kYXRhc2V0LlRhc2tJZDtcbiAgbGV0IHByb2pJZCA9IGUudGFyZ2V0LmRhdGFzZXQuVGFza1Byb2pJZDtcblxuICBjb25zdCBkaXZTaG93TW9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0YXNrX3Nob3dfbW9kZV8ke3Byb2pJZH1fJHt0YXNrSWR9YCk7XG4gIGRpdlNob3dNb2RlLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcblxuICBjb25zdCBkaXZFZGl0TW9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0YXNrX2VkaXRfbW9kZV8ke3Byb2pJZH1fJHt0YXNrSWR9YCk7XG4gIGRpdkVkaXRNb2RlLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGUnKTtcbn1cblxuY29uc3QgY2FuY2VsRWRpdFRhc2sgPSAoZSkgPT4ge1xuICBsZXQgdGFza0lkID0gZS50YXJnZXQuZGF0YXNldC5UYXNrSWQ7XG4gIGxldCBwcm9qSWQgPSBlLnRhcmdldC5kYXRhc2V0LlRhc2tQcm9qSWQ7XG5cbiAgbGV0IHByb2plY3RJbmR4ID0gZmluZFByb2plY3QocHJvamVjdHNMaXN0LCBwcm9qSWQpO1xuICBsZXQgcHJvamVjdCA9IHByb2plY3RzTGlzdFtwcm9qZWN0SW5keF07XG4gIGxldCB0YXNrID0gZmluZFByb2plY3QocHJvamVjdC50YXNrcywgdGFza0lkKTtcblxuICBsZXQgdGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNlZGl0X3Rhc2tfdGl0bGVfJHtwcm9qSWR9XyR7dGFza0lkfWApO1xuICB0aXRsZUlucHV0LnZhbHVlID0gdGFzay50aXRsZTtcbiAgbGV0IGRlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZWRpdF90YXNrX2Rlc2NyaXB0aW9uXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgZGVzY3JpcHRpb25JbnB1dC52YWx1ZSA9IHRhc2suZGVzY3JpcHRpb247XG4gIGxldCBwcmlvcml0eUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgZWRpdF90YXNrX3ByaW9yaXR5XyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgcHJpb3JpdHlJbnB1dC52YWx1ZSA9IHRhc2sucHJpb3JpdHk7XG5cbiAgY29uc3QgZGl2U2hvd01vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdGFza19zaG93X21vZGVfJHtwcm9qSWR9XyR7dGFza0lkfWApO1xuICBkaXZTaG93TW9kZS5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlJyk7XG4gIGNvbnN0IGRpdkVkaXRNb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Rhc2tfZWRpdF9tb2RlXyR7cHJvaklkfV8ke3Rhc2tJZH1gKTtcbiAgZGl2RWRpdE1vZGUuY2xhc3NMaXN0LnRvZ2dsZSgnaGlkZScpO1xufVxuXG5leHBvcnQge29wZW5UYWIsIGFkZFByb2plY3QsIGNhbmNlbEFkZFByb2plY3QsIGRlbGV0ZVByb2plY3QsIGVkaXRQcm9qZWN0LCBjYW5jZWxQcm9qZWN0LCBzdWJtaXRFZGl0UHJvamVjdCAsIGNhbmNlbEFkZFRhc2sgLCBhZGRUYXNrLCBkZWxldGVUYXNrLCBlZGl0VGFzayAsY2FuY2VsRWRpdFRhc2t9IiwiaW1wb3J0IHsgYWRkUHJvamVjdCwgb3BlblRhYiwgY2FuY2VsQWRkUHJvamVjdCAsIGRlbGV0ZVByb2plY3QsIGVkaXRQcm9qZWN0LCBjYW5jZWxQcm9qZWN0LCBzdWJtaXRFZGl0UHJvamVjdH0gZnJvbSBcIi4vbGlzdG5lcnNcIjtcbmltcG9ydCBhZGRQcm9qSWNvbiBmcm9tIFwiLi9wbGF5bGlzdC5wbmdcIjtcbmltcG9ydCBlZGl0UHJvamVjdEljb24gZnJvbSBcIi4vcGVuY2lsLnBuZ1wiO1xuaW1wb3J0IHN1Ym1pdFByb2plY3RJY29uIGZyb20gXCIuL2NoZWNrLnBuZ1wiO1xuaW1wb3J0IGNhbmNlbFByb2plY3RJY29uIGZyb20gXCIuL2Nsb3NlLnBuZ1wiO1xuaW1wb3J0IGRlbGV0ZVByb2plY3RJY29uICBmcm9tIFwiLi9jYW5jZWwucG5nXCI7XG5pbXBvcnQgeyB0YXNrc0NvbnRhaW5lciB9IGZyb20gXCIuL3ZhcmlhYmxlc1wiO1xuaW1wb3J0IHsgdGFza05hdiB9IGZyb20gXCIuL3Rhc2tOYXZcIjtcblxuY29uc3QgZGlzcGxheVByb2plY3QgPSAocHJvamVjdCkgPT57XG4gIGNvbnN0IHdyYXBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICB3cmFwZXIuc2V0QXR0cmlidXRlKCdpZCcgLCBgcHJvamVjdF9jb250YWluZXJfJHtwcm9qZWN0LmlkfWApO1xuICB3cmFwZXIuY2xhc3NMaXN0LmFkZCgncHJvamVjdF9jb250YWluZXInKTtcblxuICBjb25zdCBzcGFuU2hvd01vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHNwYW5TaG93TW9kZS5zZXRBdHRyaWJ1dGUoJ2lkJywgYHByb2plY3Rfc2hvd19tb2RlXyR7cHJvamVjdC5pZH1gKTtcbiAgc3BhblNob3dNb2RlLmNsYXNzTGlzdC5hZGQoJ3NwYW5fcHJvamVjdCcpO1xuXG4gIGNvbnN0IHNwYW5FZGl0TW9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgc3BhbkVkaXRNb2RlLnNldEF0dHJpYnV0ZSgnaWQnLCBgcHJvamVjdF9lZGl0X21vZGVfJHtwcm9qZWN0LmlkfWApO1xuICBzcGFuRWRpdE1vZGUuY2xhc3NMaXN0LmFkZCgnc3Bhbl9wcm9qZWN0JywgJ2hpZGUnKTtcblxuICBjb25zdCBidG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgYnRuLnNldEF0dHJpYnV0ZSgnaWQnLCBgc2hvd19wcm9qZWN0X3RpdGxlXyR7cHJvamVjdC5pZH1gKTtcbiAgYnRuLmRhdGFzZXQucHJvamVjdElkID0gcHJvamVjdC5pZDtcbiAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoZSk9PiBvcGVuVGFiKGUpKTtcbiAgYnRuLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAndGFibGlua3MnKTtcbiAgYnRuLnRleHRDb250ZW50ID0gcHJvamVjdC50aXRsZTtcblxuICBjb25zdCBlZGl0UHJvamVjdEltYWdlID0gbmV3IEltYWdlKCk7XG4gIGVkaXRQcm9qZWN0SW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBlZGl0UHJvamVjdEljb24pO1xuICBlZGl0UHJvamVjdEltYWdlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Byb2pfaWNvbicpO1xuICBlZGl0UHJvamVjdEltYWdlLmRhdGFzZXQucHJvamVjdElkID0gcHJvamVjdC5pZDtcbiAgZWRpdFByb2plY3RJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4gZWRpdFByb2plY3QoZSkpO1xuXG4gIFxuICBjb25zdCBkZWxldGVQcm9qZWN0SW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgZGVsZXRlUHJvamVjdEltYWdlLnNldEF0dHJpYnV0ZSgnc3JjJywgZGVsZXRlUHJvamVjdEljb24pO1xuICBkZWxldGVQcm9qZWN0SW1hZ2Uuc2V0QXR0cmlidXRlKCdjbGFzcycsICdhZGRfcHJval9pY29uJyk7XG4gIGRlbGV0ZVByb2plY3RJbWFnZS5kYXRhc2V0LnByb2plY3RJZCA9IHByb2plY3QuaWQ7XG4gIGRlbGV0ZVByb2plY3RJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4gZGVsZXRlUHJvamVjdChlKSk7XG5cblxuICBzcGFuU2hvd01vZGUuYXBwZW5kKGJ0biwgZWRpdFByb2plY3RJbWFnZSwgZGVsZXRlUHJvamVjdEltYWdlKTtcblxuXG4gIGNvbnN0IGVkaXRQcm9qVGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGVkaXRQcm9qVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICBlZGl0UHJvalRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsIGBlZGl0X3Byb2plY3RfdGl0bGVfJHtwcm9qZWN0LmlkfWApO1xuICBlZGl0UHJvalRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd2YWx1ZScsIHByb2plY3QudGl0bGUpO1xuXG5cbiAgY29uc3Qgc3VibWl0UHJvamVjdEltYWdlID0gbmV3IEltYWdlKCk7XG4gIHN1Ym1pdFByb2plY3RJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIHN1Ym1pdFByb2plY3RJY29uKTtcbiAgc3VibWl0UHJvamVjdEltYWdlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Byb2pfaWNvbicpO1xuICBzdWJtaXRQcm9qZWN0SW1hZ2UuZGF0YXNldC5wcm9qZWN0SWQgPSBwcm9qZWN0LmlkO1xuICBzdWJtaXRQcm9qZWN0SW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4gc3VibWl0RWRpdFByb2plY3QoZSkpO1xuXG4gIGNvbnN0IGNhbmNlbFByb2plY3RJbWFnZSA9IG5ldyBJbWFnZSgpO1xuICBjYW5jZWxQcm9qZWN0SW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBjYW5jZWxQcm9qZWN0SWNvbik7XG4gIGNhbmNlbFByb2plY3RJbWFnZS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2FkZF9wcm9qX2ljb24nKTtcbiAgY2FuY2VsUHJvamVjdEltYWdlLmRhdGFzZXQucHJvamVjdElkID0gcHJvamVjdC5pZDtcbiAgY2FuY2VsUHJvamVjdEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiBjYW5jZWxQcm9qZWN0KGUpKTtcblxuICBzcGFuRWRpdE1vZGUuYXBwZW5kKGVkaXRQcm9qVGl0bGVJbnB1dCwgc3VibWl0UHJvamVjdEltYWdlLCBjYW5jZWxQcm9qZWN0SW1hZ2UpO1xuXG4gIHdyYXBlci5hcHBlbmQoc3BhblNob3dNb2RlLCBzcGFuRWRpdE1vZGUpO1xuXG4gIHRhc2tzQ29udGFpbmVyLmFwcGVuZCh0YXNrTmF2KHByb2plY3QpKTtcblxuICByZXR1cm4gd3JhcGVyO1xufVxuXG5jb25zdCBwcm9qZWN0TmF2ID0gKHByb2pMaXN0KSA9PiB7XG5cbiAgY29uc3QgZGl2TmF2V3JhcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXZOYXZXcmFwLnNldEF0dHJpYnV0ZSgnaWQnLCAncHJvamVjdF9uYXYnKTtcblxuICBjb25zdCBicmFuZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBicmFuZC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2xvZ29fcHJvamVjdCcpO1xuICBicmFuZC50ZXh0Q29udGVudCA9ICdNeSBQcm9qZWN0cyc7XG5cbiAgY29uc3QgYWRkUHJvaiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBhZGRQcm9qLnNldEF0dHJpYnV0ZSgnaWQnLCAnYWRkX3Byb2plY3QnKTtcbiAgY29uc3QgYWRkUHJvamVjdEltYWdlID0gbmV3IEltYWdlKCk7XG4gIGFkZFByb2plY3RJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGFkZFByb2pJY29uKTtcbiAgYWRkUHJvamVjdEltYWdlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnYWRkX3Byb2pfaWNvbicpO1xuICBjb25zdCBhZGRQcm9qVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgYWRkUHJvalRleHQudGV4dENvbnRlbnQgPSBcIlByb2plY3RzXCI7XG4gIGFkZFByb2ouYXBwZW5kKGFkZFByb2pUZXh0LCBhZGRQcm9qZWN0SW1hZ2UpO1xuICBhZGRQcm9qLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gY2FuY2VsQWRkUHJvamVjdCgpKTtcblxuICAvLyBBZGQgcHJvamVjdCBmb3JtXG5cbiAgY29uc3QgYWRkUHJvakZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgYWRkUHJvakZvcm0uc2V0QXR0cmlidXRlKCdpZCcsICdhZGRfcHJvamVjdF9mb3JtJyk7XG4gIGFkZFByb2pGb3JtLmNsYXNzTGlzdC5hZGQoJ2hpZGUnKTtcbiAgY29uc3QgYWRkUHJvalRpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBhZGRQcm9qVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICBhZGRQcm9qVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgXCJwcm9qZWN0X3RpdGxlXCIpO1xuICBhZGRQcm9qVGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgJ1R5cGUgeW91ciBwcm9qZWN0IHRpdGxlIGhlcmUhJyk7XG4gIGNvbnN0IGFkZFByb2plY3RGb3JtQnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBhZGRQcm9qZWN0Rm9ybUJ1dHRvbnMuc2V0QXR0cmlidXRlKCdjbGFzcycsICdhZGRfcHJvamVjdF9mb3JtX2J1dHRvbnMnKTtcbiAgY29uc3QgYWRkUHJvamVjdEZvcm1DcmVhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcblxuICBhZGRQcm9qZWN0Rm9ybUNyZWF0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IGFkZFByb2plY3QoKSk7XG5cbiAgYWRkUHJvamVjdEZvcm1DcmVhdGUudGV4dENvbnRlbnQgPSAnQ3JlYXRlIFByb2plY3QnO1xuICBjb25zdCBhZGRQcm9qZWN0Rm9ybUNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBhZGRQcm9qZWN0Rm9ybUNhbmNlbC50ZXh0Q29udGVudCA9ICdDYW5jZWwnO1xuXG4gIGFkZFByb2plY3RGb3JtQ2FuY2VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gY2FuY2VsQWRkUHJvamVjdCgpKTtcblxuICBhZGRQcm9qZWN0Rm9ybUJ1dHRvbnMuYXBwZW5kKGFkZFByb2plY3RGb3JtQ3JlYXRlLGFkZFByb2plY3RGb3JtQ2FuY2VsKTtcbiAgYWRkUHJvakZvcm0uYXBwZW5kKGFkZFByb2pUaXRsZUlucHV0LCBhZGRQcm9qZWN0Rm9ybUJ1dHRvbnMpO1xuXG4gIGNvbnN0IHRhYnNEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGFic0Rpdi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RhYnMnKTtcbiAgXG4gIHByb2pMaXN0LmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgdGFic0Rpdi5hcHBlbmQoZGlzcGxheVByb2plY3QoZWxlbWVudCkpO1xuICAgIHJldHVybiB0YWJzRGl2O1xuICB9KTtcblxuICBkaXZOYXZXcmFwLmFwcGVuZChicmFuZCwgYWRkUHJvaiwgYWRkUHJvakZvcm0gLCB0YWJzRGl2KTtcbiAgcmV0dXJuIGRpdk5hdldyYXA7XG59XG5cbmV4cG9ydCB7cHJvamVjdE5hdiAsIGRpc3BsYXlQcm9qZWN0fTsiLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCB7IHByb2plY3RzTGlzdCwgY291bnRQcm9qZWN0cyAsIHRhc2tzQ29udGFpbmVyfSBmcm9tICcuL3ZhcmlhYmxlcyc7XG5pbXBvcnQge3Byb2plY3ROYXYgLCBkaXNwbGF5UHJvamVjdH0gZnJvbSAnLi9wcm9qZWN0TmF2JztcbmltcG9ydCB0YXNrTmF2IGZyb20gJy4vdGFza05hdic7XG5jb25zdCBQcm9qZWN0ID0gcmVxdWlyZSgnLi9wcm9qZWN0JykuZGVmYXVsdDtcbmNvbnN0IFRhc2sgPSByZXF1aXJlKCcuL3Rhc2snKS5kZWZhdWx0O1xuXG5jb25zdCBnbG9iYWxDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29udGFpbmVyJyk7XG5cblxuLy8gYXBwZWQgZ2xvYmFsQ29udGFpbmVyIHdpdGggcHJvamVjdG5hdiAmIHRhc2tOYXZcblxubGV0IHByajEgPSBuZXcgUHJvamVjdCgnUHJvamVjdDEnLCAxKTtcblxubGV0IHByajIgPSBuZXcgUHJvamVjdCgnUHJvamVjdDInLCAyKTtcblxuY291bnRQcm9qZWN0cyArPSAyO1xuLy8gY29uc3QgcHJqTGlzdCA9IFtwcmoxLCBwcmoyXTtcblxubGV0IHRhc2sxID0gbmV3IFRhc2soJ215IHRhc2snLCAnZGRkZGRkJywgJzEyJywgJ2xvdycsIDEsIDEpO1xubGV0IHRhc2syID0gbmV3IFRhc2soJ215IHRhc2syJywgJ2RkZGRkZCcsICcxMicsICdsb3cnLCAxLCAyKTtcbnByajEuX3Rhc2tDb3VudGVyICs9IDI7XG5cbmxldCB0YXNrMyA9IG5ldyBUYXNrKCdteSB0YXNrMycsICdkZGRkZGQnLCAnMTInLCAnbG93JywgMiwgMSk7XG5sZXQgdGFzazQgPSBuZXcgVGFzaygnbXkgdGFzazQnLCAnZGRkZGRkJywgJzEyJywgJ2xvdycsIDIsIDIpO1xucHJqMi5fdGFza0NvdW50ZXIgKz0gMjtcblxucHJqMS5hZGRUYXNrKHRhc2sxKTtcbnByajEuYWRkVGFzayh0YXNrMik7XG5cbnByajIuYWRkVGFzayh0YXNrMyk7XG5wcmoyLmFkZFRhc2sodGFzazQpO1xuXG5wcm9qZWN0c0xpc3QucHVzaChwcmoxICwgcHJqMik7XG4vLyBwcm9qZWN0c0xpc3QucHVzaChwcmoyKTtcblxuLy8gY29uc29sZS5sb2cocHJqMSk7XG4vLyBjb25zb2xlLmxvZyhwcmpMaXN0KTtcblxuLy8gY29uc29sZS5sb2codHlwZW9mIHByb2plY3ROYXYpO1xuLy8gY29uc29sZS5sb2cocHJvamVjdE5hdihwcmpMaXN0KSk7XG5nbG9iYWxDb250YWluZXIuYXBwZW5kKHByb2plY3ROYXYocHJvamVjdHNMaXN0KSAsIHRhc2tzQ29udGFpbmVyKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=
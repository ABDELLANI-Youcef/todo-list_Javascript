(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>a});var r=n(15),o=n.n(r),s=n(645),c=n.n(s)()(o());c.push([t.id,".tabcontent {\n  display: none;\n}\n\n.shown {\n  display: block;\n}\n\n.add_proj_icon {\n  width: 1rem;\n  height: 1rem;\n}\n\n.hide {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;AACf",sourcesContent:[".tabcontent {\n  display: none;\n}\n\n.shown {\n  display: block;\n}\n\n.add_proj_icon {\n  width: 1rem;\n  height: 1rem;\n}\n\n.hide {\n  display: none;\n}\n"],sourceRoot:""}]);const a=c},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(o[c]=!0)}for(var a=0;a<t.length;a++){var i=[].concat(t[a]);r&&o[i[0]]||(n&&(i[2]?i[2]="".concat(n," and ").concat(i[2]):i[2]=n),e.push(i))}},e}},15:t=>{function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}t.exports=function(t){var n,r,o=(r=4,function(t){if(Array.isArray(t))return t}(n=t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var n=[],r=!0,o=!1,s=void 0;try{for(var c,a=t[Symbol.iterator]();!(r=(c=a.next()).done)&&(n.push(c.value),!e||n.length!==e);r=!0);}catch(t){o=!0,s=t}finally{try{r||null==a.return||a.return()}finally{if(o)throw s}}return n}}(n,r)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=o[1],c=o[3];if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(c)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),d="/*# ".concat(i," */"),u=c.sources.map((function(t){return"/*# sourceURL=".concat(c.sourceRoot||"").concat(t," */")}));return[s].concat(u).concat([d]).join("\n")}return[s].join("\n")}},379:(t,e,n)=>{var r,o=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),s=[];function c(t){for(var e=-1,n=0;n<s.length;n++)if(s[n].identifier===t){e=n;break}return e}function a(t,e){for(var n={},r=[],o=0;o<t.length;o++){var a=t[o],i=e.base?a[0]+e.base:a[0],d=n[i]||0,u="".concat(i," ").concat(d);n[i]=d+1;var l=c(u),p={css:a[1],media:a[2],sourceMap:a[3]};-1!==l?(s[l].references++,s[l].updater(p)):s.push({identifier:u,updater:h(p,e),references:1}),r.push(u)}return r}function i(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var s=n.nc;s&&(r.nonce=s)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var c=o(t.insert||"head");if(!c)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");c.appendChild(e)}return e}var d,u=(d=[],function(t,e){return d[t]=e,d.filter(Boolean).join("\n")});function l(t,e,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=u(e,o);else{var s=document.createTextNode(o),c=t.childNodes;c[e]&&t.removeChild(c[e]),c.length?t.insertBefore(s,c[e]):t.appendChild(s)}}function p(t,e,n){var r=n.css,o=n.media,s=n.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var m=null,_=0;function h(t,e){var n,r,o;if(e.singleton){var s=_++;n=m||(m=i(e)),r=l.bind(null,n,s,!1),o=l.bind(null,n,s,!0)}else n=i(e),r=p.bind(null,n,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=a(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var o=c(n[r]);s[o].references--}for(var i=a(t,e),d=0;d<n.length;d++){var u=c(n[d]);0===s[u].references&&(s[u].updater(),s.splice(u,1))}n=i}}}},429:(t,e,n)=>{t.exports=n.p+"82afad6e38ab3c57406e.png"},908:(t,e,n)=>{t.exports=n.p+"6d4955812aa5e79611ae.png"},247:(t,e,n)=>{t.exports=n.p+"376ef3c8c83b0ea11c6d.png"},563:(t,e,n)=>{t.exports=n.p+"2fce6214b7c60c745aa6.png"},312:(t,e,n)=>{t.exports=n.p+"48a509a89a20feb467d3.png"},883:(t,e,n)=>{t.exports=n.p+"e47be2e47d96864e3de4.png"},747:(t,e,n)=>{n.d(e,{Z:()=>r});const r=class{constructor(t,e){this._title=t,this._tasks=[],this._id=e}get title(){return this._title}get id(){return this._id}set title(t){this._title=t}get tasks(){return this._tasks}addTask(t){this._tasks.push(t)}removeTask(t){this._tasks.splice(t,1)}}},507:(t,e,n)=>{n.d(e,{Z:()=>r});const r=class{constructor(t,e,n,r){this._title=t,this._description=e,this._dueDate=n,this._priority=r,this._status="todo"}get title(){return this._title}set title(t){this._title=t}get description(){return this._description}set description(t){this._description=t}get dueDate(){return this._dueDate}set dueDate(t){this._dueDate=t}get priority(){return this._priority}set priority(t){this._priority=t}get status(){return this._status}set status(t){this._status=t}}}},e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={id:r,exports:{}};return t[r](o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),(()=>{var t=n(379),e=n.n(t),r=n(426);e()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;const o=document.createElement("div");o.setAttribute("id","tasks_container");const s=[];let c=0;const a=(t,e)=>{let n=0,r=t.length-1,o=Math.floor((n+r)/2),s=!1;for(;n<=r&&!s;)s=t[o].id===e,s||(t[o].id>e?r=o-1:n=o+1,o=Math.floor((n+r)/2));return o},i=n(747).Z,d=(n(507).Z,()=>{document.querySelector("#project_title").value="",document.querySelector("#add_project_form").classList.toggle("hide")});var u=n(883),l=n(312),p=n(247),m=n(563),_=n(908),h=n(429);const b=t=>{const e=document.createElement("div");e.setAttribute("id",`project_container_${t.id}`),e.classList.add("project_container");const n=document.createElement("span");n.setAttribute("id",`project_show_mode_${t.id}`),n.classList.add("span_project");const r=document.createElement("span");r.setAttribute("id",`project_edit_mode_${t.id}`),r.classList.add("span_project","hide");const c=document.createElement("button");c.setAttribute("id",`show_project_title_${t.id}`),c.dataset.projectId=t.id,c.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=document.querySelector(`#proj_${e}`),r=document.querySelector(".shown");null!==r&&r.classList.toggle("shown"),n.classList.toggle("shown")})(t))),c.setAttribute("class","tablinks"),c.textContent=t.title;const i=new Image;i.setAttribute("src",l),i.setAttribute("class","add_proj_icon"),i.dataset.projectId=t.id,i.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide")})(t)));const d=new Image;d.setAttribute("src",_),d.setAttribute("class","add_proj_icon"),d.dataset.projectId=t.id,d.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId,n=document.querySelector(`#project_container_${e}`);document.querySelector("#tabs").removeChild(n),((t,e)=>{let n=a(t,e);t.splice(n,1)})(s,e),console.log(`after delete ${s}`)})(t))),n.append(c,i,d);const u=document.createElement("input");u.setAttribute("type","text"),u.setAttribute("id",`edit_project_title_${t.id}`),u.setAttribute("value",t.title);const b=new Image;b.setAttribute("src",p),b.setAttribute("class","add_proj_icon"),b.dataset.projectId=t.id,b.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;const n=document.querySelector(`#edit_project_title_${e}`);((t,e,n)=>{t[a(t,e)].title=n})(s,e,n.value),document.querySelector(`#show_project_title_${e}`).textContent=n.value,document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide")})(t)));const f=new Image;return f.setAttribute("src",m),f.setAttribute("class","add_proj_icon"),f.dataset.projectId=t.id,f.addEventListener("click",(t=>(t=>{let e=t.target.dataset.projectId;document.querySelector(`#project_show_mode_${e}`).classList.toggle("hide"),document.querySelector(`#project_edit_mode_${e}`).classList.toggle("hide");const n=document.querySelector(`#edit_project_title_${e}`),r=document.querySelector(`#show_project_title_${e}`);n.value=r.textContent})(t))),r.append(u,b,f),e.append(n,r),o.append((t=>{const e=document.createElement("div");e.setAttribute("class","tabcontent"),e.setAttribute("id",`proj_${t.id}`);const n=document.createElement("div");n.setAttribute("class","project_header");const r=document.createElement("h2");r.setAttribute("class","header_title"),r.textContent=t.title;const o=document.createElement("button");o.setAttribute("class","header_add_task");const s=new Image;s.setAttribute("src",h),s.setAttribute("class","add_proj_icon");const c=document.createElement("span");c.setAttribute("class","add_task_span"),c.textContent="Add a Task",o.append(s,c),n.append(r,o);const a=document.createElement("div");a.setAttribute("class","add_task_form_wrapper"),a.classList.add("hide"),a.setAttribute("id",`add_task_form_${t.id}`);const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id",`task_title_${t.id}`),i.setAttribute("placeholder","Type your task title here!");const d=document.createElement("input");d.setAttribute("type","text"),d.setAttribute("id",`task_description_${t.id}`),d.setAttribute("placeholder","Type a description for your task here!");const u=document.createElement("span");u.setAttribute("class","add_task_select_span");const l=document.createElement("label");l.textContent="Priority:",l.setAttribute("for",`task_priority_${t.id}`);const p=document.createElement("select");p.setAttribute("id",`task_priority_${t.id}`);const m=document.createElement("option");m.setAttribute("value","hight"),m.textContent="Hight";const _=document.createElement("option");_.setAttribute("value","medium"),_.textContent="Medium";const b=document.createElement("option");b.setAttribute("value","low"),b.textContent="Low",p.append(m,_,b),u.append(l,p);const f=document.createElement("span");u.setAttribute("class","add_task_date_span");const A=document.createElement("label");A.textContent="Schedule:",A.setAttribute("for",`task_date_${t.id}`);const y=document.createElement("input");y.setAttribute("type","date"),y.setAttribute("id",`task_date_${t.id}`),f.append(A,y),a.append(i,d,u,f);const v=document.createElement("div");return v.setAttribute("class","tasks_wrapper"),t.tasks.forEach((t=>(v.append((t=>{const e=document.createElement("div");return e.setAttribute("class","task_card"),e.textContent=t.title,e})(t)),v))),e.append(n,a,v),e})(t)),e},f=n(747).Z,A=n(507).Z,y=document.querySelector("#container");let v=new f("Project1",1),g=new f("Project2",2);c+=2;let j=new A("my task","dddddd","12","low"),E=new A("my task2","dddddd","12","low"),w=new A("my task3","dddddd","12","low"),k=new A("my task4","dddddd","12","low");v.addTask(j),v.addTask(E),g.addTask(w),g.addTask(k),s.push(v,g),y.append((t=>{const e=document.createElement("div");e.setAttribute("id","project_nav");const n=document.createElement("div");n.setAttribute("class","logo_project"),n.textContent="My Projects";const r=document.createElement("button");r.setAttribute("id","add_project");const o=new Image;o.setAttribute("src",u),o.setAttribute("class","add_proj_icon");const a=document.createElement("span");a.textContent="Projects",r.append(a,o),r.addEventListener("click",(()=>d()));const l=document.createElement("div");l.setAttribute("id","add_project_form"),l.classList.add("hide");const p=document.createElement("input");p.setAttribute("type","text"),p.setAttribute("id","project_title"),p.setAttribute("placeholder","Type your project title here!");const m=document.createElement("div");m.setAttribute("class","add_project_form_buttons");const _=document.createElement("button");_.addEventListener("click",(()=>(()=>{let t=document.querySelector("#project_title").value;c+=1;const e=new i(t,c);s.push(e),console.log(s),document.querySelector("#tabs").append(b(e)),document.querySelector("#add_project_form").classList.toggle("hide")})())),_.textContent="Create Project";const h=document.createElement("button");h.textContent="Cancel",h.addEventListener("click",(()=>d())),m.append(_,h),l.append(p,m);const f=document.createElement("div");return f.setAttribute("id","tabs"),t.forEach((t=>(f.append(b(t)),f))),e.append(n,r,l,f),e})(s),o)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,